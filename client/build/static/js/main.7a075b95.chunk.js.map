{"version":3,"sources":["redux/actions/user.tsx","redux/actions/location.tsx","agent.ts","redux/constants/user.tsx","redux/constants/location.tsx","redux/constants/flyer.tsx","redux/constants/index.tsx","theme/globalStyles.js","components/Form/styled/index.js","utils/validate.tsx","components/SignIn/index.tsx","components/Register/index.tsx","components/Navigation/styled/index.js","components/Navigation/index.tsx","containers/Home/styled/index.js","utils/functions.tsx","components/Map/MapWithASearchBox.js","components/DeleteFlyerModal/index.tsx","components/FlyerListSlidePane/index.tsx","components/FlyerListByPlace/styled/index.js","components/FlyerListItem/styled/index.js","components/FlyerListItem/index.tsx","components/FlyerListByPlace/index.tsx","containers/Home/index.tsx","components/FlyerListByUserTemplate/styled/index.js","components/FlyerListItemForTemplate/styled/index.js","components/FlyerListItemForTemplate/index.tsx","components/FlyerListByUserTemplate/index.tsx","containers/MakeFlyer/index.tsx","containers/ViewFlyer/styled/index.js","components/PhotoView/styled/index.js","components/PhotoView/index.tsx","containers/ViewFlyer/index.tsx","containers/Manage/styled/index.js","containers/Manage/index.tsx","containers/EditFlyer/styled/index.js","containers/EditFlyer/index.tsx","containers/MakeFlyerFromTemplate/index.tsx","App.tsx","serviceWorker.ts","redux/reducers/user.tsx","redux/reducers/location.tsx","redux/reducers/flyer.tsx","redux/root-reducer.tsx","configureStore.ts","index.tsx","theme/theme.js","redux/actions/flyer.tsx","redux/actions/index.tsx"],"names":["registerUser","fullName","email","password","dispatch","a","type","constants","USER","REGISTER_USER","axios","post","JSON","stringify","query","response","data","REGISTER_USER_SUCCESS","payload","agent","setSession","token","REGISTER_USER_FAIL","errors","getUserInfo","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","loginUser","logoutUser","clearSession","LOGOUT_USER","setInitialMapShow","LOCATION","INITIAL_MAP_SHOW","setIpLocation","ipLocation","SET_IP_LOCATION","setValidPlace","bool","SET_VALID_PLACE","setSelectedPlace","place","SET_SELECTED_PLACE","getPlaces","GET_PLACES","GET_PLACES_SUCCESS","GET_PLACES_ERROR","getSession","security_token","window","localStorage","getItem","defaults","headers","common","setItem","removeItem","FLYER","OPEN_FLYER_PANE","SET_FLYER_MADE","SET_MAKING_FLYER","SET_MAKING_FLYER_SUCCESS","SET_MAKING_FLYER_FAIL","SET_FLYERS","SET_FLYERS_SUCCESS","SET_FLYERS_FAIL","SET_SELECTED_FLYER","SET_WISH_TO_DELETE_FLYER","SET_DELETING_FLYER","SET_DELETED_FLYER","SET_DELETING_FLYER_SUCCESS","SET_DELETING_FLYER_FAIL","SET_EDITING_FLYER","SET_EDITING_FLYER_SUCCESS","SET_EDITING_FLYER_FAIL","SET_USING_TEMPLATE","GlobalStyle","createGlobalStyle","FormWrapper","styled","section","InputGroup","div","theme","colors","green","CheckBoxContainer","validateEmail","trim","match","validateImage","str","indexOfPeriod","indexOf","slice","length","connect","state","user","modal","toggleModal","changeModalType","useState","setEmail","setPassword","setErrors","showPassword","setShowPassword","useEffect","loggingIn","Object","keys","currentUser","Modal","isOpen","toggle","className","ModalBody","map","error","message","renderErrors","onSubmit","e","errorsObj","errorItem","preventDefault","Label","for","Input","name","placeholder","value","onChange","target","required","minLength","maxLength","onClick","Button","color","block","disabled","Spinner","setFullName","confirmPassword","setConfirmPassword","registering","validateConfirmPassword","StyledNavigation","props","blue","logo","white","setIsOpen","setModal","modalType","setModalType","isLoggedIn","Navbar","light","expand","NavbarBrand","tag","Link","to","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","NavbarText","Fragment","Wrapper","HomeStyle","children","limitText","text","charLimit","getWindowWidth","w","innerWidth","IsEmptyObj","obj","MapWithASearchBox","compose","withProps","googleMapURL","process","loadingElement","style","height","containerElement","mapElement","lifecycle","componentWillMount","refs","this","setState","bounds","center","lat","location","lng","markers","onMapMounted","ref","onBoundsChanged","getBounds","getCenter","onSearchBoxMounted","searchBox","onPlacesChanged","places","console","log","checkPlaceValidity","selectedPlace","placeId","place_id","formatted_address","latlng","geometry","setOpenFlyerPane","google","maps","LatLngBounds","forEach","viewport","union","extend","nextMarkers","position","nextCenter","_","get","componentDidMount","componentDidUpdate","prevProps","prevState","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","controlPosition","marker","index","key","title","allPlaces","otherMarker","restructuredLatLng","parseFloat","formattedAddress","foundStreetNumber","address_components","types","flyerRedux","flyer","deleteFlyer","withRouter","history","idx","ModalFooter","selectedFlyer","push","reduxLocation","setFlyersInit","setWishToDeleteFlyer","setUsingTemplate","manageMode","openFlyerPane","from","width","shouldCloseOnEsc","onRequestClose","wishToDeleteFlyer","FlyerListByPlaceStyle","FlyerListItemStyled","setSelectedFlyer","belongsToUser","heading","description","ButtonToolbar","size","stopPropagation","icon","faEdit","faTimes","reduxFlyer","getFlyersByPlace","determineIfBelongsToUser","_id","flyers","fetchingFlyers","ipWasSet","setIpWasSet","showMap","setShowMap","gettingLocation","setGettingLocation","initialMapShow","navigator","geolocation","getCurrentPosition","ltlng","coords","latitude","longitude","setTimeout","validPlace","FlyerListSlidePane","outline","FlyerListByUserTemplateStyle","getFlyersByUser","filter","template","makeFlyer","setHeading","imgNum","setImgNum","img1","setImg1","img2","setImg2","setDescription","selectedEmail","setSelectedEmail","phoneSelected","setPhoneSelected","phone","setPhone","setTemplate","isUserLoggedIn","getSignedRequest","file","signS3","uploadFile","signedRequest","url","method","dir","usingTemplate","test","images","flyerBody","id","files","fileChanged","rows","makingFlyer","ViewFyerStyled","PhotoViewStyle","PhotoView","selectedImage","setSelectedImage","img","src","moment","unix","createdAt","format","editable","contact","ManageStyled","setDeletedFlyer","selectedLocationItem","setSelectedLocationItem","deletedFlyer","fetchingflyers","arrayOfPlaceId","flyerItem","includes","arrayOfPlacesWithAssociatedFlyers","placeItem","tempArr","item","handleItemClick","displayListByLocation","EditFlyerStyle","editFlyer","handleDeletePic","checked","editingFlyer","exact","path","component","Home","MakeFlyer","MakeFlyerFromTemplate","ViewFlyer","Manage","EditFlyer","Boolean","hostname","initialState","gettingPlaces","flyerMade","deletingFlyer","combineReducers","action","middlewares","ReduxThunk","store","applyMiddleware","createStore","createStoreWithMiddleware","rootReducer","ReactDOM","render","StrictMode","blueLight","greenLight","textPrimary","textSecondary","spacers","mediaQueries","below425","below768","below1024","below1440","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","redirectCb","userId","load"],"mappings":"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","file":"static/js/main.7a075b95.chunk.js","sourcesContent":["import axios from 'axios';\nimport {Dispatch} from 'redux';\n\nimport agent from '../../agent';\nimport constants from '../constants';\n\n//Interfaces\nexport interface IRegisterUserAction {\n  type: typeof constants.USER.REGISTER_USER,\n  payload?: any\n}\nexport interface IRegisterUserActionSuccess {\n  type: typeof constants.USER.REGISTER_USER_SUCCESS,\n  payload: any // #TODO - should be fleshed out with real response payload\n}\nexport interface IRegisterUserActionFail {\n  type: typeof constants.USER.REGISTER_USER_FAIL,\n  payload?:any\n}\nexport interface ILoginUserAction {\n  type: string,\n  payload?:any\n}\nexport interface ILoginUserActionSuccess {\n  type: string,\n  payload?:any\n}\nexport interface ILoginUserActionFail {\n  type: string,\n  payload?:any\n}\n\nexport const registerUser = (fullName: string, email: string, password: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<IRegisterUserAction>({type: constants.USER.REGISTER_USER});\n    try {\n      const response = await axios.post(\"/graphql\", \n        JSON.stringify({\n          query: `\n            mutation {\n              registerUser(userInput: {name: \"${fullName}\", email: \"${email}\", password: \"${password}\"}) {\n                _id\n                name,\n                email,\n                token\n              }\n            }\n          `\n        }));\n      const {data:{data:{registerUser}}} = response;\n      dispatch<IRegisterUserActionSuccess>({\n        type: constants.USER.REGISTER_USER_SUCCESS,\n        payload: registerUser\n      });\n      //set session\n      agent.setSession(registerUser.token);\n\n    } catch (error) {\n      dispatch<IRegisterUserActionFail>({\n        type: constants.USER.REGISTER_USER_FAIL,\n        payload: error.response.data.errors\n      })\n    }\n  }\n}\n\nexport const getUserInfo = () => {\n  return async (dispatch:Dispatch) => {\n    dispatch<IRegisterUserAction>({type: constants.USER.LOGIN_USER});\n    try {\n      const response = await axios.post(\"/graphql\", \n      JSON.stringify({\n        query: `\n          query {\n            getUserInfo {\n              _id\n              name,\n              email,\n              token\n            }\n          }\n        `\n      }));\n      const {data:{data:{getUserInfo}}} = response;\n      dispatch<ILoginUserActionSuccess>({\n        type: constants.USER.LOGIN_USER_SUCCESS,\n        payload: getUserInfo\n      });\n      //set session\n      agent.setSession(getUserInfo.token);\n\n    } catch(error) {\n      dispatch<ILoginUserActionFail>({\n        type: constants.USER.LOGIN_USER_FAIL,\n        payload: error.response.data.errors\n      })\n    }\n  }\n}\n\nexport const loginUser = (email: string, password: string) => {\n  return async (dispatch:Dispatch) => {\n    dispatch<ILoginUserAction>({type: constants.USER.LOGIN_USER});\n    try {\n      const response = await axios.post(\"/graphql\", \n      JSON.stringify({\n        query: `\n          query {\n            loginUser(loginInput: {email: \"${email}\", password: \"${password}\"}) {\n              _id\n              name,\n              email,\n              token\n            }\n          }\n        `\n      }));\n      const {data:{data:{loginUser}}} = response;\n      dispatch<ILoginUserActionSuccess>({\n        type: constants.USER.LOGIN_USER_SUCCESS,\n        payload: loginUser\n      });\n      //set session\n      agent.setSession(loginUser.token);\n\n    } catch(error) {\n      dispatch<ILoginUserActionFail>({\n        type: constants.USER.LOGIN_USER_FAIL,\n        payload: error.response.data.errors\n      })\n    }\n  }\n}\n\nexport const logoutUser = () => {\n  agent.clearSession();\n  return {\n    type: constants.USER.LOGOUT_USER\n  }\n}","import constants from '../constants';\nimport axios from 'axios';\nimport { async } from 'q';\nimport { Dispatch } from 'redux';\n\n//Interfaces\nexport interface ISetIpLocationAction {\n    type: string,\n    payload?: any\n}\nexport interface ISetValidPlaceAction {\n    type: string,\n    payload?: any\n}\nexport interface ISetSelectedPlace {\n    type: string,\n    payload?: any\n}\n\nexport const setInitialMapShow = () => {\n    return {\n        type: constants.LOCATION.INITIAL_MAP_SHOW\n    }\n}\n\nexport const setIpLocation = (ipLocation:{lat:number, lng:number}) => {\n    return {\n        type: constants.LOCATION.SET_IP_LOCATION,\n        payload: ipLocation\n    }\n}\n\nexport const setValidPlace = (bool:boolean) => {\n    return {\n        type: constants.LOCATION.SET_VALID_PLACE,\n        payload: bool\n    }\n}\n\nexport const setSelectedPlace = (place:any) => {\n    return {\n        type: constants.LOCATION.SET_SELECTED_PLACE,\n        payload: place\n    }\n}\n\nexport const getPlaces = () => {\n    return async(dispatch: Dispatch) => {\n        dispatch({type: constants.LOCATION.GET_PLACES})\n        try {\n            const response = await axios.post(\n                \"/graphql\",\n                JSON.stringify({\n                    query: `\n                        query {\n                            getPlaces {\n                                _id\n                                place_id\n                                name\n                                formattedAddress\n                                latlng {\n                                    lat\n                                    lng\n                                }\n                            }\n                        } \n                    `\n                })\n            );\n            const {data:{data:{getPlaces}}} = response;\n            dispatch({type: constants.LOCATION.GET_PLACES_SUCCESS, payload:getPlaces})\n\n        } catch(error) {\n            dispatch({type: constants.LOCATION.GET_PLACES_ERROR, payload:error.response.data.errors})\n        }\n    }\n}","import axios from 'axios';\n\nconst setSession = (security_token: string) => {\n  window.localStorage.setItem(\"jwt\", security_token);\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${security_token}`;\n  axios.defaults.headers.post['Content-Type'] = \"application/json\";\n}\nconst getSession = ():string|null => {\n  let security_token:string|null = window.localStorage.getItem(\"jwt\");\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${security_token}`;\n  axios.defaults.headers.post['Content-Type'] = \"application/json\";\n  return security_token;\n}\nconst clearSession = () => {\n  window.localStorage.removeItem(\"jwt\");\n  axios.defaults.headers.common[\"Authorization\"] = \"\";\n}\n\ngetSession();\n\nexport default {\n  setSession,\n  getSession,\n  clearSession\n}","const USER = {\n  REGISTER_USER: \"REGISTER_USER\",\n  REGISTER_USER_SUCCESS: \"REGISTER_USER_SUCCESS\",\n  REGISTER_USER_FAIL: \"REGISTER_USER_FAIL\",\n  LOGIN_USER:\"LOGIN_USER\",\n  LOGIN_USER_SUCCESS:\"LOGIN_USER_SUCCESS\",\n  LOGIN_USER_FAIL:\"LOGIN_USER_FAIL\",\n  LOGOUT_USER:\"LOGOUT_USER\"\n}\n\nexport default USER;","const LOCATION = {\n    SET_IP_LOCATION:\"SET_IP_LOCATION\",\n    SET_VALID_PLACE: \"SET_VALID_PLACE\",\n    SET_SELECTED_PLACE: \"SET_SELECTED_PLACE\",\n    GET_PLACES: \"GET_PLACES\",\n    GET_PLACES_SUCCESS: \"GET_PLACES_SUCCESS\",\n    GET_PLACES_ERROR: \"GET_PLACES_ERROR\",\n    INITIAL_MAP_SHOW: \"INITIAL_MAP_SHOW\"\n}\n\nexport default LOCATION;","const FLYER = {\n    OPEN_FLYER_PANE:\"OPEN_FLYER_PANE\",\n    SET_FLYER_MADE:\"SET_FLYER_MADE\",\n    SET_MAKING_FLYER:\"SET_MAKING_FLYER\",\n    SET_MAKING_FLYER_SUCCESS:\"SET_MAKING_FLYER_SUCCESS\",\n    SET_MAKING_FLYER_FAIL:\"SET_MAKING_FLYER_FAIL\",\n    SET_FLYERS:\"SET_FLYERS\",\n    SET_FLYERS_SUCCESS:\"SET_FLYERS_SUCCESS\",\n    SET_FLYERS_FAIL:\"SET_FLYERS_FAIL\",\n    SET_SELECTED_FLYER: \"SET_SELECTED_FLYER\",\n    SET_WISH_TO_DELETE_FLYER: \"SET_WISH_TO_DELETE_FLYER\",\n    SET_DELETING_FLYER:\"SET_DELETING_FLYER\",\n    SET_DELETED_FLYER:\"SET_DELETED_FLYER\",\n    SET_DELETING_FLYER_SUCCESS:\"SET_DELETING_FLYER_SUCCESS\",\n    SET_DELETING_FLYER_FAIL:\"SET_DELETING_FLYER_FAIL\",\n    SET_EDITING_FLYER:\"SET_EDITING_FLYER\",\n    SET_EDITING_FLYER_SUCCESS:\"SET_EDITING_FLYER_SUCCESS\",\n    SET_EDITING_FLYER_FAIL:\"SET_EDITING_FLYER_FAIL\",\n    SET_USING_TEMPLATE: \"SET_USING_TEMPLATE\"\n}\n\nexport default FLYER;","import USER from './user';\nimport LOCATION from './location';\nimport FLYER from './flyer';\n\nexport default {\n  USER,\n  LOCATION,\n  FLYER\n}","import {createGlobalStyle} from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    height: 100%;\n    /*background-color: red;*/\n  }\n  * {\n    padding: 0;\n    margin: 0;\n  }\n\n  /*Button colors override  */\n  .btn-primary {\n    background-color: #4CAD98;\n    border-color: #4CAD98;\n  }\n  .btn-primary:hover {\n    backgrond-color: #61FAD9;\n  }\n\n  .btn-secondary {\n    background-color: #61FAD9;\n    border-color: #61FAD9;\n  }\n\n  .link {\n    cursor: pointer;\n    color: #2A3DAD;\n  }\n\n  .slide-pane__header {\n    background: #4863FA;\n    color: #ffffff;\n  }\n\n  // Animations\n  @keyframes blueToLightBlue {\n    0% {\n      border-top-color: #FAB156\n    }\n\n    50% {\n      border-top-color: #4863FA\n    }\n\n    100% {\n      border-top-color: #FAB156\n    }\n  }\n`;\n\nexport default GlobalStyle;","import React from 'react';\nimport styled from 'styled-components';\n\nexport const FormWrapper = styled.section`\n  max-width: 600px;\n`;\n\nexport const InputGroup = styled.div`\n  width: 100%;  \n  margin-bottom: 20px;\n\n  & label {\n    display: block;\n  }\n  & input {\n    width: 100%;\n  }\n  & .password-container {\n    position: relative;\n    &__show {\n      position: absolute;\n      right: 10px;\n      top: 6px;\n      color: ${({theme})=>theme.colors.green};\n      cursor: pointer;\n    }\n  }\n`;\n\nexport const CheckBoxContainer = styled.div`\n  display: flex;\n\n  .CheckBoxItem {\n    display: inline-block;\n\n    .form-check-input {\n      width: 25px;\n      position: unset;\n      margin-top: unset;\n      margin-left: unset;\n    }\n  }\n`;","\nexport const validateEmail = (email: string):string => {\n  if (!email.trim().match(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)) {\n    return \"Not a Valid Email\";\n  }\n  return \"\"\n}\n\nexport const validateConfirmPassword = (password: string, confirmPassword: string): string => {\n  if(password.trim() !== confirmPassword.trim()) {\n    return \"Passwords do not match. Check your typing.\";\n  }\n  return \"\";\n}\n\nexport const validateImage = (str:string): boolean => {\n  const indexOfPeriod = str.indexOf('.');\n  const fileType = str.slice(indexOfPeriod+ 1, str.length);\n  switch (fileType) {\n      case 'png':\n      case 'PNG':\n          return true;\n      case 'jpg':\n      case 'JPG':\n          return true;\n      case 'jpeg': \n      case 'JPEG':\n          return true;\n      case 'gif':\n      case 'GIF':\n          return true;\n      default:\n          return false;      \n  }\n}","import React, { useState, useEffect, FormEvent } from \"react\";\nimport {connect} from 'react-redux';\nimport { Modal, ModalBody, Input, Label, Button, Spinner } from \"reactstrap\";\n\nimport { FormWrapper, InputGroup } from \"../Form/styled\";\nimport { validateEmail } from \"../../utils/validate\";\n\nimport {loginUser} from '../../redux/actions';\nimport {StoreState} from '../../redux/root-reducer';\n\nexport interface SignInProps {\n  modal: boolean,\n  toggleModal: any,\n  changeModalType: any,\n  loginUser: Function,\n  user: any\n}\nexport interface ILoginErrors {\n  [key: string]: any;\n}\n \nconst SignIn: React.SFC<SignInProps> = ({\n  modal,\n  toggleModal,\n  changeModalType,\n  loginUser,\n  user\n}) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({\n    email: \"\"\n  });\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    const errorsObj: any = { ...errors };\n    e.preventDefault();\n    errorsObj.email = validateEmail(email);\n\n    //set the state's errors object\n    setErrors(errorsObj);\n    //check if any errors exist, don't submit form if errors\n    for (let errorItem in errorsObj) {\n      if (errorsObj[errorItem] !== \"\") {\n        return;\n      }\n    }\n    // at this point it passed validation, \n    // set loading state true\n    // make graphQL call\n    loginUser( email, password);\n  };\n\n  useEffect(()=> {\n    //#Todo - If user.registering is true -> show a loader\n    if(user.loggingIn ===false && Object.keys(user.currentUser).length>0 && modal===true) {\n      //close modal\n      toggleModal();\n    }\n  }, [user])\n\n  const renderErrors = () => {\n    if(user.errors) {\n      return user.errors.map((error:any) => {\n        return <p className=\"text-danger\">{error.message}</p>\n      })\n    }\n  }\n\n  return (\n    <Modal isOpen={modal} toggle={toggleModal} className=\"sign-in-modal\">\n      <ModalBody>\n        {user.loggingIn?\n          <p>Loading ...</p>\n          :\n          <h3 className=\"text-center\">Login</h3>\n        }\n        <FormWrapper>\n          {renderErrors()}\n          <form onSubmit={handleSubmit}>\n            <InputGroup>\n              {errors.email && <p className=\"text-danger\">{errors.email}</p>}\n              <Label for=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"you@example.com\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </InputGroup>\n            <InputGroup>\n              <Label for=\"password\">Password</Label>\n              <div className=\"password-container\">\n                <Input\n                  type={showPassword ? \"text\" : \"password\"}\n                  name=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  minLength={8}\n                  maxLength={20}\n                  required\n                />\n                <span \n                  className=\"password-container__show\"\n                  onClick={() => setShowPassword(!showPassword)}>\n                  {showPassword ? \"Hide\" : \"Show\"}\n                </span>\n              </div>\n            </InputGroup>\n            <Button \n              color=\"primary\" \n              type=\"submit\" \n              block\n              disabled={user.loggingIn? true:false}\n            >\n              {user.loggingIn?\n                  <Spinner color=\"light\"></Spinner>\n              :\n              \"SignIn\"\n              }\n            </Button>\n          </form>\n        </FormWrapper>\n        <div className=\"switch-form text-center\">\n          <p>\n            Don't have an account?{\" \"}\n            <span \n              onClick={() => changeModalType(\"register\")}\n              className=\"link\"\n            >Register</span>\n          </p>\n        </div>\n      </ModalBody>\n    </Modal>\n  );\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps,{\n  loginUser\n})(SignIn);","import React, { useState, useEffect, FormEvent } from \"react\";\nimport {connect} from 'react-redux';\nimport { Modal, ModalBody, Input, Label, Button, Spinner } from \"reactstrap\";\n\nimport { FormWrapper, InputGroup } from \"../Form/styled\";\nimport { validateEmail, validateConfirmPassword } from \"../../utils/validate\";\n\nimport {registerUser} from '../../redux/actions';\nimport {StoreState} from '../../redux/root-reducer';\n\nexport interface RegisterProps {\n  modal: boolean;\n  toggleModal: any;\n  changeModalType: any;\n  registerUser: Function;\n  user: any;\n}\nexport interface IRegisterErrors {\n  [key: string]: any;\n}\n\nconst Register: React.SFC<RegisterProps> = ({\n  modal,\n  toggleModal,\n  changeModalType,\n  registerUser,\n  user\n}) => {\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState({\n    fullName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    const errorsObj: any = { ...errors };\n    e.preventDefault();\n    errorsObj.email = validateEmail(email);\n    errorsObj.confirmPassword = validateConfirmPassword(\n      password,\n      confirmPassword\n    );\n    //set the state's errors object\n    setErrors(errorsObj);\n    //check if any errors exist, don't submit form if errors\n    for (let errorItem in errorsObj) {\n      if (errorsObj[errorItem] !== \"\") {\n        return;\n      }\n    }\n    // at this point it passed validation, \n    // set loading state true\n    // make graphQL call\n    registerUser(fullName, email, password);\n    \n  };\n\n  useEffect(()=> {\n    //#Todo - If user.registering is true -> show a loader\n    if(user.registering ===false && Object.keys(user.currentUser).length>0 && modal===true) {\n      //close modal\n      toggleModal();\n    }\n  }, [user])\n\n  const renderErrors = () => {\n    if(user.errors) {\n      return user.errors.map((error:any) => {\n        return <p className=\"text-danger\">{error.message}</p>\n      })\n    }\n  }\n\n  return (\n    <Modal isOpen={modal} toggle={toggleModal} className=\"sign-in-modal\">\n      <ModalBody>\n        <h3 className=\"text-center\">Register</h3>\n        <FormWrapper>\n          {renderErrors()}\n          <form onSubmit={handleSubmit}>\n            <InputGroup>\n              <Label for=\"full_name\">Name</Label>\n              <Input\n                type=\"text\"\n                name=\"full_name\"\n                placeholder=\"Joe Smith\"\n                value={fullName}\n                onChange={(e) => setFullName(e.target.value)}\n                required\n              />\n            </InputGroup>\n            <InputGroup>\n              {errors.email && <p className=\"text-danger\">{errors.email}</p>}\n              <Label for=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"you@example.com\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </InputGroup>\n            <InputGroup>\n              <Label for=\"password\">Password</Label>\n              <div className=\"password-container\">\n                <Input\n                  type={showPassword ? \"text\" : \"password\"}\n                  name=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  minLength={8}\n                  maxLength={20}\n                  required\n                />\n                <span \n                  className=\"password-container__show\"\n                  onClick={() => setShowPassword(!showPassword)}>\n                  {showPassword ? \"Hide\" : \"Show\"}\n                </span>\n              </div>\n            </InputGroup>\n            <InputGroup>\n              {errors.confirmPassword && (\n                <p className=\"text-danger\">{errors.confirmPassword}</p>\n              )}\n              <Label for=\"confirm_password\">Confirm Password</Label>\n              <Input\n                type={showPassword ? \"text\" : \"password\"}\n                name=\"confirm_password\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                minLength={8}\n                maxLength={20}\n                required\n              />\n            </InputGroup>\n            <Button \n              color=\"primary\" \n              type=\"submit\" \n              block\n              disabled={user.registering? true:false}\n            >\n              {user.registering?\n                  <Spinner color=\"light\"></Spinner>\n              :\n              \"Register\"\n              }\n            </Button>\n          </form>\n        </FormWrapper>\n        <div className=\"switch-form text-center\">\n          <p>\n            Already have an account?{\" \"}\n            <span \n              onClick={() => changeModalType(\"signin\")}\n              className=\"link\"\n            >Signin</span>\n          </p>\n        </div>\n      </ModalBody>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state: StoreState) => ({\n  user: state.user\n})\n\nexport default connect(\n  mapStateToProps, \n  {registerUser}\n)(Register);\n","import styled, {css} from 'styled-components';\n\nconst StyledNavigation = styled.div`\n  .navbar {\n    background-color: ${props=>props.theme.colors.blue};\n  }\n  & .navbar-brand {\n    color: ${props=>props.theme.colors.logo};\n    font-size: 1.6rem;\n  }\n .navbar-light .navbar-nav .nav-item .nav-link {\n    color: ${props=>props.theme.colors.white} !important;\n  }\n`;\n\nexport default StyledNavigation;","import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n  Button\n} from 'reactstrap';\nimport {Link} from 'react-router-dom';\n\nimport SignIn from '../SignIn';\nimport Register from '../Register';\n\nimport StyledNavigation from './styled';\n// types\nimport user, {IUser} from '../../redux/reducers/user';\nimport {StoreState} from '../../redux/root-reducer';\n\nimport {logoutUser} from \"../../redux/actions\";\n\nexport interface NavigationProps {\n  user: IUser,\n  logoutUser: Function\n}\n \nconst Navigation: React.SFC<NavigationProps> = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [modalType, setModalType] = useState('signin');// can also be 'register'\n\n  const toggleCollapse = () => setIsOpen(!isOpen);\n  const toggleModal = () => setModal(!modal);\n\n  const isLoggedIn = ():boolean => {\n    return Object.keys(props.user.currentUser).length>0;\n  }\n\n  return ( \n    <StyledNavigation>\n      <Navbar light expand=\"md\">\n        <NavbarBrand tag={Link} to=\"/\">Noticely</NavbarBrand>\n        {/* <NavbarBrand href=\"/\"><img src={require(\"../../Logo.png\")} /></NavbarBrand> */}\n        <NavbarToggler onClick={toggleCollapse} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n              <NavItem>\n                <NavLink tag={Link} to=\"/\">Home</NavLink>\n              </NavItem>\n            {isLoggedIn() &&\n              <NavItem>\n                <NavLink tag={Link} to=\"/manage\">Manage</NavLink>\n              </NavItem>            \n            }\n          </Nav>\n          <NavbarText>\n            {isLoggedIn()? (\n              <React.Fragment>\n                <Button color=\"primary\" onClick={()=>props.logoutUser()}>Logout</Button>\n              </React.Fragment>\n            )\n              :\n              <Button color=\"primary\" onClick={()=>toggleModal()}>Sign In</Button>\n            }\n            {modalType==='signin'? \n              <SignIn modal={modal} toggleModal={toggleModal} changeModalType={setModalType} /> \n              :\n              <Register modal={modal} toggleModal={toggleModal} changeModalType={setModalType} />\n            }\n          </NavbarText>\n        </Collapse>\n      </Navbar>\n    </StyledNavigation>\n   );\n}\n\nconst mapStateToProps = (state:StoreState) => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps ,{\n  logoutUser\n})(Navigation);","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n\n    & .MapContainer {\n        \n    } \n\n    & .BtnControls {\n        display: flex;\n        justify-content: space-between;\n        align-items: baseline;\n        margin-bottom: 20px;\n        width: 100%;\n    }\n\n    & .about {\n        margin-top: 20px;\n        border: 1px solid #ccc;\n        padding: 1rem;\n        background-color: #eee;\n\n        li {\n            list-style: none;\n        }\n    }\n`;\n\nexport const HomeStyle = ({children}) => {\n    return (\n    <Wrapper>\n        {children}\n    </Wrapper>\n    )\n};","export const limitText = (text:string, charLimit:number) => {\n    if(text.length >= charLimit) {\n        return text.slice(0, charLimit) + \"...\";\n    } else {\n        return text;\n    }\n}\n\n  //slidepanel comp needs proper width based on windowwidth\nexport const getWindowWidth = () => {\n    let w = window.innerWidth;\n    if (w > 768) {\n      return \"50%\";\n    } else if (w <= 768 && w > 425) {\n      return \"70%\";\n    } else if (w <= 425) {\n      return \"90%\";\n    }\n  };\n\nexport const IsEmptyObj = (obj:any):boolean => {\n  return Object.keys(obj).length === 0;\n}","/* eslint-disable no-undef */\nimport React from 'react';\nimport _ from \"lodash\";\nimport { compose, withProps, lifecycle } from \"recompose\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\";\nimport  SearchBox from \"react-google-maps/lib/components/places/SearchBox\";\nimport { connect } from 'react-redux';\nimport {setSelectedPlace, setValidPlace, setOpenFlyerPane, getPlaces} from '../../redux/actions';\nimport './Map.css';\nimport { Spinner } from 'reactstrap';\nimport {IsEmptyObj} from '../../utils/functions';\n\nconst MapWithASearchBox = compose(\n  withProps({\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAPS_KEY}&v=3&libraries=geometry,drawing,places`,\n    loadingElement: <div style={{ height: `100%` }}><Spinner color=\"success\"></Spinner></div>,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n  }),\n  lifecycle({\n    componentWillMount() {\n      const refs = {}\n\n      this.setState({\n        bounds: null,\n        center: {\n          lat: this.props.location.ipLocation.lat, \n          lng: this.props.location.ipLocation.lng\n        },\n        markers: [],\n        onMapMounted: ref => {\n          refs.map = ref;\n        },\n        onBoundsChanged: () => {\n          this.setState({\n            bounds: refs.map.getBounds(),\n            center: refs.map.getCenter(),\n          })\n        },\n        onSearchBoxMounted: ref => {\n          refs.searchBox = ref;\n        },\n        onPlacesChanged: () => {\n\n          const places = refs.searchBox.getPlaces();\n          console.log('places', places);\n          // ******** Check Validity of Place\n          if( !checkPlaceValidity(places, this.props) ) {\n              return;\n          }\n           // ******* Set selected place\n          const selectedPlace = {\n              placeId: places[0].place_id,\n              formatted_address: places[0].formatted_address,\n              name: places[0].name,\n              latlng: {\n                lat: places[0].geometry.location.lat(),\n                lng: places[0].geometry.location.lng()\n              }\n          }\n\n          this.props.setSelectedPlace(selectedPlace);\n          // action to open place slider\n          this.props.setOpenFlyerPane(true);\n\n          const bounds = new google.maps.LatLngBounds();\n\n          places.forEach(place => {\n            if (place.geometry.viewport) {\n              bounds.union(place.geometry.viewport)\n            } else {\n              bounds.extend(place.geometry.location)\n            }\n          });\n          const nextMarkers = places.map(place => ({\n            position: place.geometry.location,\n            name: place.name,\n            place_id: place.place_id\n          }));\n          const nextCenter = _.get(nextMarkers, '0.position', this.state.center);\n          console.log(\"markers\", this.state.markers)\n          console.log(\"nextmarkers\", nextMarkers)\n          this.setState({\n            center: nextCenter,\n            markers: nextMarkers,\n          });\n          // refs.map.fitBounds(bounds);\n        },        \n      })\n    },\n    componentDidMount() {\n      //go fetch all places\n      this.props.getPlaces();\n    },\n    componentDidUpdate(prevProps,prevState) {\n      // if(!prevProps.location.gettingPlaces && this.props.location.gettingPlaces && this.props.location.allPlaces.length > 0) {\n      //   console.log(\"reaches here\")\n      //   this.setState({markers: [ ...this.props.location.allPlaces]})\n      // }\n      if(prevProps.location.selectedPlace !==null &&\n        !IsEmptyObj(prevProps.location.selectedPlace) && \n        this.props.location.selectedPlace===null) \n        {\n        //force update\n        this.setState({state: this.state});\n      }\n    }\n  }),\n  withScriptjs,\n  withGoogleMap\n)(props =>\n  <GoogleMap\n    ref={props.onMapMounted}\n    defaultZoom={12}\n    defaultCenter={props.center}\n    onBoundsChanged={props.onBoundsChanged}\n    className={\"Map\"}\n  >\n    <SearchBox\n      ref={props.onSearchBoxMounted}\n      bounds={props.bounds}\n      //controlPosition={google.maps.ControlPosition.TOP_RIGHT}\n      controlPosition={2}\n      onPlacesChanged={props.onPlacesChanged}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"Search location for flyers\"\n        className={\"Map_Input\"}\n      />\n    </SearchBox>\n    {props.markers.map((marker, index) => {\n      console.log(\"props\", props);\n      return <Marker \n        key={index} \n        position={marker.position} \n        title={marker.name}\n        onClick={()=> {\n            props.onPlacesChanged()\n            props.setOpenFlyerPane(true)\n        }}\n        >\n        </Marker>\n\n    }\n    )}\n\n    {/* For other markers */}\n    {props.location.allPlaces.map((otherMarker, index) => {\n      let restructuredLatLng = {\n        lat: parseFloat(otherMarker.latlng.lat),\n        lng: parseFloat(otherMarker.latlng.lng)\n      }\n      const selectedPlace = {\n        placeId: otherMarker.place_id,\n        formatted_address: otherMarker.formattedAddress,\n        name: otherMarker.name,\n        latlng: {\n          lat: parseFloat(otherMarker.latlng.lat),\n          lng: parseFloat(otherMarker.latlng.lng)\n        }\n      }\n      return <Marker \n        key={index} \n        position={restructuredLatLng} \n        title={otherMarker.name}\n        onClick={()=> {\n          props.setSelectedPlace(selectedPlace);\n          props.setOpenFlyerPane(true)\n        }}\n        >\n        </Marker>\n    }\n    )}\n  </GoogleMap>\n);\n\nconst checkPlaceValidity = (places, props) => {\n    let foundStreetNumber = false;\n    //typed in a made up address\n    if(places.length===0 || !places[0].address_components) {\n        props.setValidPlace(false);\n        return false;\n    }\n\n    for (let c of places[0].address_components) {\n        if (c.types[0] === 'street_number') {\n            foundStreetNumber = true;\n        }\n    }\n\n    if (foundStreetNumber) {\n        // set validPlace on locationRedux ot true\n        props.setValidPlace(true);\n        return true;\n    } else {\n        props.setValidPlace(false);\n        return false;\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        location: state.location,\n        //userRedux: state.userRedux,\n        flyerRedux: state.flyer\n    }\n}\n\nexport default connect(mapStateToProps, {\n    setValidPlace,\n    setSelectedPlace,\n    setOpenFlyerPane,\n    getPlaces\n})(MapWithASearchBox);","import React from 'react';\nimport { Modal, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport {connect} from 'react-redux';\nimport {withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { StoreState } from '../../redux/root-reducer';\nimport { IFlyer } from '../../redux/reducers/flyer';\nimport {deleteFlyer} from '../../redux/actions';\nimport { RouterProps } from 'react-router';\n\nexport interface DeleteFlyerModalProps extends RouteComponentProps {\n    modal: boolean,\n    toggleModal: any,\n    flyer: IFlyer,\n    deleteFlyer: any,\n    manageMode?: boolean\n}\n \nconst DeleteFlyerModal: React.SFC<DeleteFlyerModalProps> = ({\n    modal,\n    toggleModal,\n    flyer,\n    deleteFlyer,\n    history\n}) => {\n\n    const renderErrors = () => {\n        if(flyer.errors) {\n            return flyer.errors.map((error:any, idx:number) => {\n            return <p key={idx} className=\"text-danger\">{error.message}</p>\n            })\n        }\n    }\n\n    return ( \n        <Modal isOpen={modal} toggle={toggleModal}>\n            <ModalBody>\n                <p>Are you sure you want to delete this flyer?</p>\n                {flyer.errors && renderErrors()}\n            </ModalBody>\n            <ModalFooter>\n                <Button \n                    color=\"primary\" \n                    onClick={()=> {\n                        deleteFlyer(flyer.selectedFlyer, history.push);\n                    }}\n                >Yes</Button>{' '}\n                <Button color=\"secondary\" onClick={()=>toggleModal(false)}>No</Button>\n            </ModalFooter>\n        </Modal>\n     );\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n    flyer: state.flyer\n});\n\nexport default connect(mapStateToProps, {\n    deleteFlyer\n})(withRouter(DeleteFlyerModal));","import React from 'react';\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport SlidingPane from 'react-sliding-pane';\nimport {connect} from 'react-redux';\n\nimport { StoreState } from \"../../redux/root-reducer\";\nimport { ILocation } from '../../redux/reducers/location';\nimport { IFlyer } from '../../redux/reducers/flyer';\nimport {  \n    setSelectedPlace,\n    setFlyersInit,\n    setOpenFlyerPane,\n    setWishToDeleteFlyer,\n    setUsingTemplate\n} from '../../redux/actions';\nimport {getWindowWidth} from '../../utils/functions';\n\nimport DeleteFlyerModal from '../DeleteFlyerModal';\n\nexport interface FlyerListSlidepaneProps {\n    reduxLocation: ILocation,\n    flyer: IFlyer,\n    setSelectedPlace: any,\n    setFlyersInit: any,\n    setWishToDeleteFlyer: any,\n    setOpenFlyerPane: any,\n    setUsingTemplate: any,\n    children: any,\n    manageMode?: boolean\n}\n \nconst FlyerListSlidepane: React.SFC<FlyerListSlidepaneProps> = ({\n    children,\n    setSelectedPlace,\n    setFlyersInit,\n    setOpenFlyerPane,\n    setWishToDeleteFlyer,\n    setUsingTemplate,\n    flyer,\n    reduxLocation,\n    manageMode\n}) => {\n\n    return ( \n        <div>\n            <SlidingPane \n                isOpen={flyer.openFlyerPane}\n                from=\"left\"\n                width={getWindowWidth()}\n                title={`${((reduxLocation||{}).selectedPlace||{}).name||\"\"}`}\n                shouldCloseOnEsc\n                onRequestClose={() => {\n                    if(!manageMode) {\n                        setFlyersInit([]);\n                    }\n                    setOpenFlyerPane(false);\n                    setSelectedPlace(null);\n                    setUsingTemplate(false);\n                }}\n            >\n                {children}\n            </SlidingPane>\n            <DeleteFlyerModal modal={flyer.wishToDeleteFlyer} toggleModal={setWishToDeleteFlyer} />\n        </div>\n     );\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n    reduxLocation: state.location,\n    flyer: state.flyer,\n})\nexport default connect(mapStateToProps, {\n    setSelectedPlace,\n    setFlyersInit,\n    setOpenFlyerPane,\n    setWishToDeleteFlyer,\n    setUsingTemplate\n})(FlyerListSlidepane);","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n    height: 80%;\n    min-height: 500px;\n    overflow-y: auto;\n`;\n\nexport const FlyerListByPlaceStyle = ({children}) => {\n    return <Wrapper>\n        {children}\n    </Wrapper>\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n    & .flyer-list-item-wrapper {\n        width: 80%;\n        padding: 20px;\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        margin-bottom: 25px;\n        border-top: 10px solid #FAB156;\n        transition: all .3s;\n    }\n    & .flyer-list-item-wrapper.belongsToUser{\n        animation-name: blueToLightBlue;\n        animation-iteration-count: infinite;\n        animation-duration: 2s;\n    }\n\n    & .flyer-list-item-wrapper:hover {\n        cursor: pointer;\n        box-shadow: 6px 6px 14px 2px rgba(0,0,0,0.75);\n        transform: translateX(6px);\n        border-top: 10px solid #4CAD98;\n    }\n    & .flyer-controls {\n        justify-content: flex-end;\n\n        .btn {\n            margin-left: 10px;\n        }\n    }\n`;\n\nconst FlyerListItemStyled = ({children}) => {\n    return <Wrapper>{children}</Wrapper>\n}\n\nexport default FlyerListItemStyled;","import React from 'react';\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport {ButtonToolbar, Button} from 'reactstrap';\nimport {FontAwesomeIcon, FontAwesomeIconProps} from '@fortawesome/react-fontawesome';\nimport {faTimes, faEdit} from '@fortawesome/free-solid-svg-icons';\n\nimport FlyerListItemStyle from './styled/index';\nimport { IFlyer } from '../../redux/reducers/flyer';\nimport { setSelectedFlyer, setWishToDeleteFlyer } from '../../redux/actions';\n\nimport {limitText} from '../../utils/functions';\n\nexport interface FlyerListItemProps extends RouteComponentProps {\n    flyer: any,\n    belongsToUser: boolean,\n    setSelectedFlyer: any,\n    setWishToDeleteFlyer: any,\n    history: any\n}\n \nconst FlyerListItem: React.SFC<FlyerListItemProps> = ({\n    flyer,\n    belongsToUser,\n    setSelectedFlyer,\n    setWishToDeleteFlyer,\n    history\n}) => {\n\n    const handleClick = () => {\n        // set selected flyer\n        setSelectedFlyer(flyer)\n        // redirect to flyer view\n        history.push('/view-flyer');\n    }\n\n    const handleDelete = () => {\n        // set selected flyer\n        setSelectedFlyer(flyer);\n        setWishToDeleteFlyer(true)\n    }\n\n    const handleEdit = () => {\n        setSelectedFlyer(flyer);\n        history.push(\"/edit-flyer\");\n    }\n\n    return ( \n        <FlyerListItemStyle>\n            <div className={`flyer-list-item-wrapper ${belongsToUser?\"belongsToUser\":\"\"}`} onClick={handleClick} >\n                <h3>{flyer.heading}</h3>\n                <p>{limitText(flyer.description, 49)}</p>\n                {belongsToUser && (\n                <React.Fragment>\n                    <hr/>\n                    <ButtonToolbar className=\"flyer-controls\">\n                        <Button\n                            color=\"warning\"\n                            size=\"sm\"\n                            onClick={(e)=>{\n                                e.stopPropagation();\n                                handleEdit()\n                            }}\n                        >\n                            <FontAwesomeIcon icon={faEdit} />\n                        </Button>\n                        <Button\n                            color=\"danger\"\n                            size=\"sm\"\n                            onClick={(e)=>{\n                                e.stopPropagation();\n                                handleDelete();\n                            } }\n                        >\n                            {\" \"}<FontAwesomeIcon icon={faTimes} />{\" \"}\n                        </Button>\n                    </ButtonToolbar>\n                </React.Fragment>\n                )}\n            </div>\n        </FlyerListItemStyle>\n    );\n}\n \nexport default connect( null,{\n    setSelectedFlyer,\n    setWishToDeleteFlyer\n})(withRouter(FlyerListItem));","import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {Spinner} from 'reactstrap';\n\nimport {FlyerListByPlaceStyle} from './styled';\nimport { StoreState } from '../../redux/root-reducer';\nimport {ILocation} from '../../redux/reducers/location';\nimport { IFlyer } from '../../redux/reducers/flyer';\nimport {getFlyersByPlace} from '../../redux/actions/flyer';\nimport FlyerListItem from '../FlyerListItem';\nimport { IUser } from '../../redux/reducers/user';\nimport { Surface } from 'react-native';\nimport { IsEmptyObj } from '../../utils/functions';\n\nexport interface FlyerListByPlaceProps {\n    reduxLocation: ILocation,\n    reduxFlyer: IFlyer,\n    getFlyersByPlace: any,\n    user: IUser\n}\n \nconst FlyerListByPlace: React.SFC<FlyerListByPlaceProps> = ({\n    reduxLocation,\n    reduxFlyer,\n    getFlyersByPlace,\n    user\n}) => {\n    useEffect(() => {\n        // fetch all flyers from this location\n        getFlyersByPlace(reduxLocation.selectedPlace.placeId);\n    },[]);\n\n    const determineIfBelongsToUser = (flyer:any) => {\n        if(\n            flyer.user && \n            !IsEmptyObj(user.currentUser) &&\n            (flyer.user._id ===user.currentUser._id)\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    return ( \n        <FlyerListByPlaceStyle>\n            {reduxFlyer.flyers.length>0 && \n            reduxFlyer.flyers.map((flyer, idx) => (\n                <FlyerListItem flyer={flyer} belongsToUser={determineIfBelongsToUser(flyer)} />\n            ))}\n            {reduxFlyer.fetchingFlyers && <Spinner color=\"success\" />}\n            {!reduxFlyer.fetchingFlyers && reduxFlyer.flyers.length===0 &&\n                <p>There are no flyer notices here. Would you like to place one here?</p>\n            }\n        </FlyerListByPlaceStyle>\n     );\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n    reduxLocation: state.location,\n    reduxFlyer: state.flyer,\n    user: state.user\n})\n\nexport default connect(mapStateToProps, {\n    getFlyersByPlace\n})(FlyerListByPlace);","import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {RouteComponentProps} from 'react-router-dom'\n\nimport {setIpLocation ,setSelectedPlace ,setFlyersInit, setOpenFlyerPane, setSelectedFlyer , setInitialMapShow} from '../../redux/actions'\nimport { StoreState} from '../../redux/root-reducer';\nimport user, { IUser } from \"../../redux/reducers/user\";\nimport { IFlyer } from \"../../redux/reducers/flyer\";\nimport { ILocation} from \"../../redux/reducers/location\";\n\nimport {HomeStyle} from './styled';\nimport MapWithASearchBox from '../../components/Map/MapWithASearchBox';\nimport FlyerListSlidePane from '../../components/FlyerListSlidePane'\n\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport SlidingPane from 'react-sliding-pane';\nimport { Button, Spinner } from 'reactstrap';\nimport FlyerListByPlace from '../../components/FlyerListByPlace';\nimport {getWindowWidth} from '../../utils/functions';\n\nexport interface HomeProps extends RouteComponentProps {\n  setIpLocation: any,\n  setSelectedPlace: any,\n  setSelectedFlyer: any,\n  setFlyersInit: any,\n  setOpenFlyerPane: any,\n  setInitialMapShow: any,\n  reduxLocation: ILocation,\n  user: IUser,\n  flyer: IFlyer\n}\n \nconst Home: React.SFC<HomeProps> = (props) => {\n  const [ipWasSet, setIpWasSet] = useState(false);\n  const [showMap, setShowMap] = useState(false);\n  const [gettingLocation, setGettingLocation] = useState(false)\n\n  useEffect(()=> {\n    props.setSelectedFlyer({});\n    if(props.reduxLocation.initialMapShow) {\n      setShowMap(true);\n    }\n    //clean up work\n    return () => {\n      setFlyersInit([])\n    }\n\n  },[])\n  useEffect(()=> {\n    if(showMap===true) {\n      setGettingLocation(true);\n      navigator.geolocation.getCurrentPosition((position) => {\n        setGettingLocation(false);\n        const ltlng = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        }\n        props.setIpLocation(ltlng);\n        setIpWasSet(true);\n        setTimeout( () => {\n          props.setFlyersInit([]);\n        }, 1000);\n        props.setSelectedPlace(null);\n      })\n    }\n  },[showMap]);\n\n\n  const showMapToggle = () => {\n    setShowMap(!showMap)\n    props.setInitialMapShow();\n}\n\n  return (  \n    <HomeStyle>\n      <div className=\"MapContainer\">\n        <div className=\"BtnControls\">\n          <div>\n            <button\n              onClick={showMapToggle}\n              className=\"btn btn-info\"\n            >\n              {showMap? \"Hide\":\"Show\"} Map {\" \"}\n              {gettingLocation && <Spinner size=\"sm\" color=\"light\"></Spinner>}\n            </button>\n          </div>\n          <p>{Object.keys(props.user.currentUser).length > 0? props.user.currentUser.name: 'Anonymous User'}</p>\n        </div>\n        {props.reduxLocation.validPlace === false && <p className=\"text-danger\">Your search is too broad. Please search a business location or address.</p>}\n        {ipWasSet && showMap && <MapWithASearchBox/>}\n        {/* SLIDE PANE  */}\n        <FlyerListSlidePane>\n          <Button\n            color=\"primary\"\n            outline={false}\n            onClick={()=>props.history.push(\"/make-flyer\")}\n          >Place flyer here</Button>\n          <hr/>\n          <FlyerListByPlace />\n        </FlyerListSlidePane>\n      </div>\n      {/* About Content */}\n      <div className=\"about\">\n        <h2>What is Noticely?</h2>\n        <hr/>\n        <p>Noticely is designed the bring the \"age-old\" task of \"putting up flyers\" into the future. \n          It used to be that if you wanted to make notices or spread information, you would have to:\n        </p>\n        <ul>\n          <li>Design flyer and print out many copies.</li>\n          <li>Find locations with high foot traffic to place the flyers.</li>\n          <li>Physically walk to each location.</li>\n          <li>Many times, the location does not have a designated area to place your flyer.</li>\n        </ul>\n        <h2>How does Noticely help?</h2>\n        <hr />\n        <p>Noticely simplifies this process. </p>\n        <ul>\n          <li>No more wasting paper; the flyers are virtual! </li>  \n          <li>Find a location with ease using our map. Simply Search any location.</li>\n          <li>Select a location and immediately create a flyer there.</li>\n          <li>No more worrying if the place has a designated area for flyers.</li>\n        </ul>\n      </div>\n    </HomeStyle>\n  );\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n  reduxLocation: state.location,\n  flyer: state.flyer,\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  setIpLocation,\n  setSelectedPlace,\n  setFlyersInit,\n  setOpenFlyerPane,\n  setSelectedFlyer,\n  setInitialMapShow\n})(Home);","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n    height: 80%;\n    min-height: 500px;\n    overflow-y: auto;\n`;\n\nexport const FlyerListByUserTemplateStyle = ({children}) => {\n    return <Wrapper>\n        {children}\n    </Wrapper>\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n    & .flyer-list-item-wrapper {\n        width: 80%;\n        padding: 20px;\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        margin-bottom: 25px;\n        border-top: 10px solid #FAB156;\n        transition: all .3s;\n    }\n    & .flyer-list-item-wrapper.belongsToUser{\n        animation-name: blueToLightBlue;\n        animation-iteration-count: infinite;\n        animation-duration: 2s;\n    }\n\n    & .flyer-list-item-wrapper:hover {\n        cursor: pointer;\n        box-shadow: 6px 6px 14px 2px rgba(0,0,0,0.75);\n        transform: translateX(6px);\n        border-top: 10px solid #4CAD98;\n    }\n\n`;\n\nconst FlyerListItemStyled = ({children}) => {\n    return <Wrapper>{children}</Wrapper>\n}\n\nexport default FlyerListItemStyled;","import React from 'react';\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport {ButtonToolbar, Button} from 'reactstrap';\nimport {FontAwesomeIcon, FontAwesomeIconProps} from '@fortawesome/react-fontawesome';\nimport {faTimes, faEdit} from '@fortawesome/free-solid-svg-icons';\n\nimport FlyerListItemStyle from './styled/index';\nimport { IFlyer } from '../../redux/reducers/flyer';\nimport { setSelectedFlyer} from '../../redux/actions';\n\nimport {limitText} from '../../utils/functions';\n\nexport interface FlyerListItemForTemplateProps extends RouteComponentProps {\n    flyer: any,\n    belongsToUser: boolean,\n    setSelectedFlyer: any,\n    history: any\n}\n \nconst FlyerListItemForTemplate: React.SFC<FlyerListItemForTemplateProps> = ({\n    flyer,\n    belongsToUser,\n    setSelectedFlyer,\n    history\n}) => {\n\n    const handleClick = () => {\n        console.log(\"reach here\")\n        // set selected flyer\n        setSelectedFlyer(flyer)\n        // redirect to flyer view\n        history.push('/make-from-template');\n    }\n\n    return ( \n        <FlyerListItemStyle>\n            <div className={`flyer-list-item-wrapper ${belongsToUser?\"belongsToUser\":\"\"}`} onClick={handleClick} >\n                <h3>{flyer.heading}</h3>\n                <p>{limitText(flyer.description, 49)}</p>\n            </div>\n        </FlyerListItemStyle>\n    );\n}\n \nexport default connect( null,{\n    setSelectedFlyer\n})(withRouter(FlyerListItemForTemplate));","import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {Spinner} from 'reactstrap';\n\nimport {FlyerListByUserTemplateStyle} from './styled';\nimport { StoreState } from '../../redux/root-reducer';\nimport {ILocation} from '../../redux/reducers/location';\nimport { IFlyer } from '../../redux/reducers/flyer';\nimport {getFlyersByUser} from '../../redux/actions/flyer';\nimport { IUser } from '../../redux/reducers/user';\nimport { IsEmptyObj } from '../../utils/functions';\nimport FlyerListItemForTemplate from '../FlyerListItemForTemplate';\n\nexport interface FlyerListByUserTemplateProps {\n    reduxLocation: ILocation,\n    reduxFlyer: IFlyer,\n    getFlyersByUser: any,\n    user: IUser\n}\n \nconst FlyerListByUserTemplate: React.SFC<FlyerListByUserTemplateProps> = ({\n    reduxLocation,\n    reduxFlyer,\n    getFlyersByUser,\n    user\n}) => {\n    useEffect(() => {\n        // fetch all flyers from this location\n        getFlyersByUser(user.currentUser._id);\n    },[]);\n\n    const determineIfBelongsToUser = (flyer:any) => {\n        if(\n            flyer.user && \n            !IsEmptyObj(user.currentUser) &&\n            (flyer.user._id ===user.currentUser._id)\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    return ( \n        <FlyerListByUserTemplateStyle>\n            {reduxFlyer.flyers.length>0 && \n            reduxFlyer.flyers.filter((flyer,idx)=>flyer.template===\"template\").map((flyer, idx) => (\n                <FlyerListItemForTemplate key={idx} flyer={flyer} belongsToUser={determineIfBelongsToUser(flyer)} />\n            ))}\n            {reduxFlyer.fetchingFlyers && <Spinner color=\"success\" />}\n            {!reduxFlyer.fetchingFlyers && reduxFlyer.flyers.filter((flyer,idx)=>flyer.template===\"template\").length===0 &&\n                <p>There are no templates to chose from. When making a flyer, check off the option to make flyer into a template.</p>\n            }\n        </FlyerListByUserTemplateStyle>\n     );\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n    reduxLocation: state.location,\n    reduxFlyer: state.flyer,\n    user: state.user\n})\n\nexport default connect(mapStateToProps, {\n    getFlyersByUser\n})(FlyerListByUserTemplate);","import React, {useState, useEffect, FormEvent} from 'react';\nimport {connect} from 'react-redux';\nimport axios from 'axios';\nimport {Label, Input, Button, Spinner} from 'reactstrap';\nimport {uuid} from 'uuidv4';\n\nimport { FormWrapper, InputGroup, CheckBoxContainer } from \"../../components/Form/styled\";\nimport agent from '../../agent';\n\nimport { StoreState} from '../../redux/root-reducer';\nimport { IFlyer } from '../../redux/reducers/flyer';\nimport { ILocation } from '../../redux/reducers/location';\nimport { IUser } from '../../redux/reducers/user';\nimport {validateImage, validateEmail} from '../../utils/validate';\n\nimport FlyerListSlidePane from '../../components/FlyerListSlidePane';\nimport FlyerListByUserTemplate from '../../components/FlyerListByUserTemplate';\n\nimport {makeFlyer, setOpenFlyerPane, setUsingTemplate} from '../../redux/actions';\nimport { RouteComponentProps } from 'react-router';\n\nexport interface MakeFlyerProps extends RouteComponentProps {\n    reduxLocation: ILocation,\n    flyer: IFlyer,\n    user: IUser,\n    makeFlyer: any,\n    setOpenFlyerPane: any,\n    setUsingTemplate: any\n}\n\nconst MakeFlyer:React.SFC<MakeFlyerProps> = ({\n    reduxLocation,\n    flyer,\n    user,\n    makeFlyer,\n    setOpenFlyerPane,\n    setUsingTemplate,\n    history\n}) => {\n    // useState\n    const [heading, setHeading] = useState(\"\");\n    // img \n    const [imgNum, setImgNum] = useState(0);\n    const [img1, setImg1] = useState(\"\");\n    const [img2, setImg2] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    // email\n    const [email, setEmail] = useState(\"\")\n    const [selectedEmail, setSelectedEmail] = useState(\"\");\n    // phone\n    const [phoneSelected, setPhoneSelected] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [template, setTemplate] = useState(\"\");\n    // errors\n    const [errors, setErrors] = useState({\n        heading: \"\",\n        description: \"\",\n        email: \"\",\n        imgNum:\"\",\n        img1: \"\",\n        img2: \"\",\n        phone: \"\"\n    });\n\n    const isUserLoggedIn = ():boolean => {\n        return Object.keys(user.currentUser).length > 0;\n    }\n\n    const fileChanged = (e:React.ChangeEvent<HTMLInputElement>) => {\n        if(imgNum===0) {\n            // reset error\n            setErrors({...errors, img1:\"\"});\n            //add first pic\n            if(validateImage(e.target.value)) {\n                setImgNum(1)\n                //get Signed\n                if(e.target.files !==null) {\n                    const file = e.target.files[0];\n                    getSignedRequest(file);\n                }\n            } else {setErrors({...errors, img1:\"Wrong File Type\"})}\n        }else if (imgNum===1) {\n             // reset error\n             setErrors({...errors, img2:\"\"});\n            //add second pic\n            if(validateImage(e.target.value)) {\n                setImgNum(2)\n                //get Signed\n                if(e.target.files !==null) {\n                    const file = e.target.files[0];\n                    getSignedRequest(file);\n                }\n            }else {setErrors({...errors, img2:\"Wrong File Type\"})}\n        } else {\n            //set error 'max of 2 images'\n            setErrors({...errors, imgNum:\"Max of 2 images. This current image was not uploaded.\"})\n        }\n        // if(document && document.getElementById('flyerImg') && document.getElementById('flyerImg').value) {\n        //     document.getElementById('flyerImg').value = '';\n        // }\n    }\n    const getSignedRequest = async (file:any) => {\n        try {\n            const response = await axios.post('/graphql', \n                JSON.stringify({\n                    query: `\n                        query {\n                            signS3(s3Input: {fileName: \"${file.name}\", fileType: \"${file.type}\"}) {\n                                signedRequest,\n                                url\n                            } \n                        }\n                    `\n                })\n            )\n            const {data: {data: {signS3}}} = response;\n            uploadFile(file, signS3.signedRequest, signS3.url);\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const uploadFile = async (file:any, signedRequest:any, url:string) => {\n        try {\n            // delete Authorization header\n            delete axios.defaults.headers.common[\"Authorization\"];\n\n            // make aws call\n            const response = axios({\n                method: 'put',\n                url: signedRequest,\n                data: file,\n                headers: {'Content-Type': file.type}\n            })            \n\n            // store the image urls in state to be sent to the backend\n            if (imgNum === 0) {                    \n                setImg1(url);\n            } else if (imgNum === 1) {\n                setImg2(url);\n            }\n\n            // add auth header back\n            agent.setSession(user.currentUser.token);\n        } catch(error) {\n            console.dir(\"error\", error)\n        }\n    }\n\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n        //reset error 'max of 2 images'\n        setErrors({...errors, imgNum:\"\"})\n        e.preventDefault()\n        // validation\n        const errorsObj: any = { ...errors };\n        errorsObj.heading= heading.trim().length > 100? 'Heading must not be more than 100 characters':\"\";\n        errorsObj.description = description.trim().length < 3? \"Heading must be more than 3 characters\": \"\";\n        errorsObj.description = description.trim().length > 2000? \"Body must not be more than 2000 characters\": \"\";\n        errorsObj.description = description.trim().length < 3? \"Body must be more than 3 characters\": \"\";\n        errorsObj.phone = (phoneSelected && phone.trim().length > 30)? \"Phone must be less than 30 characters\": \"\";\n        errorsObj.phone = phoneSelected && !(/[0-9]/.test(phone)) && \"Phone must be all numbers\";\n        errorsObj.email = selectedEmail && validateEmail(email)===\"Not a Valid Email\" && \"Email is invalid\";\n\n        setErrors(errorsObj);\n        // check if any errors exist, don't submit form if errors\n        for (let errorItem in errorsObj) {\n            if(typeof errorsObj[errorItem] === \"boolean\" && errorsObj[errorItem] === true) {\n                return;\n            }\n            if(typeof errorsObj[errorItem] === \"string\" && errorsObj[errorItem].length >0 && errorItem !==\"imgNum\") {\n                return;\n            }\n        }\n\n        // construct flyer body to be sent\n        const images = [];\n        if(img1) {\n            images.push(img1)\n        }\n        if(img2) {\n            images.push(img2)\n        }\n        const flyerBody = {\n            placeId: reduxLocation.selectedPlace.placeId,\n            formattedAddress: reduxLocation.selectedPlace.formatted_address,\n            latlng: reduxLocation.selectedPlace.latlng,\n            name: reduxLocation.selectedPlace.name,\n            images: images,\n            heading: heading,\n            description: description,\n            phone: phoneSelected? phone:\"\",\n            email: selectedEmail? email: \"\",\n            template: template\n        }\n\n        // async action to make API call to make-flyer\n        makeFlyer(flyerBody);\n    }\n\n    const renderErrors = () => {\n        if(flyer.errors) {\n          return flyer.errors.map((error:any) => {\n            return <p className=\"text-danger\">{error.message}</p>\n          })\n        }\n    }\n\n    useEffect(()=> {\n        setOpenFlyerPane(false);\n        if(!reduxLocation.selectedPlace) {\n            history.push(\"/\")\n        }\n        return ()=> {\n            setOpenFlyerPane(false);\n        }\n    },[])\n    useEffect(()=> {\n        //redirect to View Flyer once flyer is made\n        if(flyer.selectedFlyer && Object.keys(flyer.selectedFlyer).length>0 && !flyer.usingTemplate) {\n            history.push(\"/view-flyer\");\n        }\n\n    }, [flyer])\n\n    return (\n        <div>\n            <h2>Make Your Flyer</h2>\n            <h5>at {(reduxLocation.selectedPlace||{}).name}</h5>\n            {isUserLoggedIn() && (\n                <React.Fragment>\n                    <Button\n                        color=\"primary\"\n                        onClick={()=>{\n                            setOpenFlyerPane(true)\n                            setUsingTemplate(true);\n                        }}\n                    >\n                        Use a saved template\n                    </Button>\n                    <span>{\" \"}or create a new flyer below</span>\n                </React.Fragment>\n            )\n            }\n            <hr/>\n            <FormWrapper>\n                {renderErrors()}\n                <form onSubmit={handleSubmit}>\n                    <InputGroup>\n                        {errors.heading && <p className=\"text-danger\">{errors.heading}</p>}                 \n                        <Label for=\"heading\">Flyer Heading</Label>\n                        <Input \n                            type=\"text\" \n                            name=\"heading\" \n                            onChange={(e)=>setHeading(e.target.value)}\n                            required\n                        />\n                    </InputGroup>\n                    {isUserLoggedIn() &&(\n                        <React.Fragment>\n                            <p>Num of Pics Uploaded: {imgNum}/2</p>\n                            <InputGroup>\n                                {errors.imgNum && <p className=\"text-danger\">{errors.imgNum}</p>}\n                                <Label for=\"img\">Upload Image</Label>\n                                <Input \n                                    type=\"file\" \n                                    name=\"img\" \n                                    id=\"flyerImg\"\n                                    onChange={(e)=>fileChanged(e)}\n                                />\n                            </InputGroup>\n                        </React.Fragment>                        \n                    )}\n                    <InputGroup>\n                        {errors.description && <p className=\"text-danger\">{errors.description}</p>}\n                        <Label for=\"description\">\n                            Body{isUserLoggedIn()?\"\":\"*\"}\n                        </Label>\n                        <Input \n                            type=\"textarea\" \n                            name=\"description\" \n                            rows=\"7\"\n                            onChange={(e)=>setDescription(e.target.value)}\n                            required\n                        />\n                    </InputGroup>\n                    {isUserLoggedIn()? (\n                        <React.Fragment>\n                            <InputGroup>\n                                <Label for=\"img\">Contact Information</Label>\n                                    <small>Deselect \"Email\" to use registered email</small>\n                                    <CheckBoxContainer>\n                                        <div className=\"CheckBoxItem\">\n                                            <Input \n                                                type=\"checkbox\" \n                                                value=\"email\" \n                                                onChange={(e)=>setSelectedEmail(selectedEmail==\"\"?e.target.value:\"\")}\n                                            />{\" \"}Email \n                                        </div>\n                                        <div className=\"CheckBoxItem\">\n                                            <Input \n                                                type=\"checkbox\" \n                                                value=\"addPhone\" \n                                                onChange={(e)=>setPhoneSelected(phoneSelected==\"\"?e.target.value:\"\")}\n                                            />{\" \"} Phone\n                                        </div>\n                                    </CheckBoxContainer>\n                                \n                            </InputGroup>\n                            {selectedEmail &&\n                                <InputGroup>\n                                    <Label for=\"email\">Email </Label>\n                                    {errors.email && <p className=\"text-danger\">{errors.email}</p>}\n                                    <Input \n                                        type=\"email\" \n                                        name=\"email\"\n                                        onChange={(e)=>setEmail(e.target.value)}\n                                    />                            \n                                </InputGroup>\n                            }\n                            {phoneSelected && \n                                <InputGroup>\n                                    <Label for=\"phone\">Phone</Label>\n                                    {errors.phone && <p className=\"text-danger\">{errors.phone}</p>}\n                                    <Input \n                                        type=\"tel\" \n                                        name=\"phone\"\n                                        onChange={(e)=>setPhone(e.target.value)}\n                                    />                            \n                                </InputGroup>                            \n                            }\n                        </React.Fragment>                        \n                    )\n                    :\n                    <React.Fragment>\n                        <cite className=\"text-muted d-block\">*Anonymous users must put their contact info in the body.</cite>\n                        <cite className=\"text-muted d-block\">SignIn/Register to have more options for your flyers.</cite>\n                    </React.Fragment>\n                    }\n                    {isUserLoggedIn() &&\n                        <InputGroup>\n                            <Label>\n                                <Input \n                                    type=\"checkbox\"\n                                    value=\"template\"\n                                    onChange={(e)=>setTemplate(template==\"\"?e.target.value:\"\")}\n                                />\n                                {\" \"}\n                                Want to make this flyer a template for future use?\n                            </Label>\n                        </InputGroup>                    \n                    }\n                    <Button \n                        type=\"submit\"\n                        color='primary'\n                        outline={false}\n                        disabled={flyer.makingFlyer? true:false}\n                    >\n                        {flyer.makingFlyer?\n                            <Spinner color=\"light\"></Spinner>\n                        :\n                        \"Make Flyer\"\n                        }\n                    </Button>\n                </form>\n            </FormWrapper>\n            {/* Slide Pane */}\n            {isUserLoggedIn() &&\n                <FlyerListSlidePane >\n                    <FlyerListByUserTemplate></FlyerListByUserTemplate>\n                </FlyerListSlidePane>            \n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n    reduxLocation: state.location,\n    flyer: state.flyer,\n    user: state.user\n  });\n\nexport default connect(mapStateToProps, {\n    makeFlyer,\n    setOpenFlyerPane,\n    setUsingTemplate\n})(MakeFlyer);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n    & .flyer-page {\n        margin-top: 20px;\n        min-height: 400px;\n        border: 1px solid #8492a6;\n        padding: 1rem;\n        box-shadow: 6px 6px 14px 2px rgba(0,0,0,0.75);\n\n        &__body {\n            white-space: pre-wrap;\n            word-break: break-word;\n        }\n    }\n\n`;\n\nconst ViewFyerStyled = ({children}) => (\n    <Wrapper>{children}</Wrapper>\n)\n\nexport default ViewFyerStyled;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n    & .photo-view__images {\n        display: flex;\n        width: 100%;\n        flex-wrap: wrap;\n\n        figure {\n            max-width: 50px;\n            max-height: 50px;\n            margin-right: 10px;\n            cursor: pointer;\n            transition: all .3s;\n\n            img {\n                width: 100%;\n            }\n        }\n        figure:hover {\n            transform: scale(1.05);\n        }\n    }\n    \n    & .photo-view__display {\n        figure {\n            max-width: 200px;\n            max-height: 200px;\n            img {\n                width: 100%;\n            }\n        }\n    }\n`;\n\nexport const PhotoViewStyle = ({children}) => {\n    return <Wrapper>\n        {children}\n    </Wrapper>\n}","import React, {useState} from 'react';\n\nimport {PhotoViewStyle} from './styled';\n\nexport interface PhotoViewProps {\n    images:string[],\n    editable: boolean\n}\n \nconst PhotoView: React.SFC<PhotoViewProps> = ({images}) => {\n    const [selectedImage, setSelectedImage] = useState(\"\");\n\n    return (    \n        <PhotoViewStyle>\n            <div className=\"photo-view__images\">\n                {images.map((img, idx) => (\n                    <figure key={idx} onClick={()=>setSelectedImage(img)}>\n                        <img src={img} className=\"img-fluid\" />\n                    </figure>\n                ))}\n            </div>\n            <div className=\"photo-view__display\" >\n                {selectedImage? (\n                    <figure>\n                        <img src={selectedImage} />\n                    </figure>\n                ): null}\n            </div>\n        </PhotoViewStyle>\n     );\n}\n \nexport default PhotoView;","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {RouteComponentProps} from 'react-router-dom';\nimport moment from 'moment';\n\nimport { StoreState } from '../../redux/root-reducer';\nimport { IFlyer } from '../../redux/reducers/flyer';\nimport ViewFlyerStyled from './styled';\nimport PhotoView from '../../components/PhotoView';\nimport ViewFyerStyled from './styled';\nimport {setSelectedFlyer, setFlyersInit, setOpenFlyerPane} from '../../redux/actions';\n\nexport interface ViewFlyerProps extends RouteComponentProps {\n    flyer: IFlyer,\n    setSelectedFlyer: any,\n    setFlyersInit: any,\n    setOpenFlyerPane: any\n}\n \nconst ViewFlyer: React.SFC<ViewFlyerProps> = ({\n    flyer,\n    history,\n    setSelectedFlyer,\n    setFlyersInit,\n    setOpenFlyerPane\n}) => {\n    let {selectedFlyer} = flyer;\n    selectedFlyer = selectedFlyer? selectedFlyer : {};\n    useEffect(()=> {\n        if(Object.keys(selectedFlyer).length ===0) {\n            history.push(\"/\")\n        }\n\n        // empty out Flyers Arr\n        setFlyersInit([]);\n        // openFlyerPan should be false\n        setOpenFlyerPane(false);\n        return ()=> {\n            setSelectedFlyer({})\n        }\n    },[]);\n\n    const determineUserOrAnonymous = () => {\n        if(selectedFlyer.user) {\n            return selectedFlyer.user.name;\n        } else {\n            return \"Anonymous\"\n        }\n    }\n\n    if(Object.keys(selectedFlyer).length > 0) {\n        return ( \n            <ViewFlyerStyled>\n                <h2>Flyer Notification</h2>\n                <div className=\"flyer-page\">\n                    <h3>{selectedFlyer.heading}</h3>\n                    <hr />\n            <cite className=\"text-muted\">Posted by: {determineUserOrAnonymous()} on {moment.unix(selectedFlyer.createdAt/1000).format(\"MM/DD/YY\")}</cite>\n                    {/* Images Logic goes here */}\n                    <PhotoView images={selectedFlyer.images||[]} editable={false}/>\n                    <div className=\"flyer-page__body\">\n                        {selectedFlyer.description}\n                    </div>\n                    {Object.keys(selectedFlyer.contact).length > 0 && (\n                    <React.Fragment>\n                        <hr/>\n                        <h5>Contact Info</h5>\n                        {selectedFlyer.contact.email && (\n                            <p>Email: {selectedFlyer.contact.email}</p>\n                        )}\n                        {selectedFlyer.contact.phone && (\n                            <p>Phone: {selectedFlyer.contact.phone}</p>\n                        )}\n                    </React.Fragment>\n                    )} \n                </div>\n            </ViewFlyerStyled>\n         );\n    } else {\n        return <ViewFyerStyled>\n            <p>loading..</p>\n        </ViewFyerStyled>\n    }\n}\n\nconst mapStateToProps = (state:StoreState) => ({\n    flyer: state.flyer\n})\n \nexport default connect(mapStateToProps ,{\n    setSelectedFlyer,\n    setFlyersInit,\n    setOpenFlyerPane\n})(ViewFlyer);","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n    & .manage-list {\n\n        &__container {\n            display: flex;\n            flex-wrap: wrap;\n        }\n        &__item {\n            width: 250px;\n            border: 1px solid #ccc;\n            margin-right: 1rem;\n            margin-bottom: 1rem;\n            border-radius: 3px;\n            cursor: pointer;\n            transition: all .3s;\n\n            &__header {\n                padding: 1rem;\n                background-color: ${props=>props.theme.colors.green};\n                color: ${props=>props.theme.colors.white};\n\n                h5 {\n                    margin-bottom: 0px;\n                }\n            }\n            &__body {\n                padding: 1rem;\n            }\n        }\n        &__item:hover {\n            transform: translateX(3px);\n            box-shadow: 5px 5px 12px 2px rgba(0,0,0,0.75);\n        }\n    }\n`;\n\nconst ManageStyled = ({children}) => (\n    <Wrapper>{children}</Wrapper>\n)\n\nexport default ManageStyled;","import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {RouteComponentProps} from 'react-router-dom';\n\nimport ManageStyled from './styled';\nimport { StoreState } from '../../redux/root-reducer';\nimport { IFlyer } from '../../redux/reducers/flyer';\nimport {getFlyersByUser, setOpenFlyerPane ,setSelectedPlace, setDeletedFlyer ,setFlyersInit} from '../../redux/actions'\nimport { IUser } from '../../redux/reducers/user';\nimport { IsEmptyObj, limitText } from '../../utils/functions';\nimport { Spinner } from 'reactstrap';\nimport FlyerListSlidePane from '../../components/FlyerListSlidePane';\nimport FlyerListItem from '../../components/FlyerListItem';\n\nexport interface ManageProps extends RouteComponentProps {\n    flyer: any,\n    user: IUser,\n    getFlyersByUser: any,\n    setOpenFlyerPane: any,\n    setSelectedPlace: any,\n    setDeletedFlyer: any,\n    setFlyersInit: any\n}\n \nconst Manage: React.SFC<ManageProps> = ({\n    flyer,\n    user,\n    history,\n    getFlyersByUser,\n    setOpenFlyerPane,\n    setSelectedPlace,\n    setDeletedFlyer,\n    setFlyersInit\n}) => {\n    const [selectedLocationItem, setSelectedLocationItem] = useState([]);\n    useEffect(()=> {\n        setFlyersInit([]);\n        //if not signed it, redirect to home\n        if(IsEmptyObj(user.currentUser)) {\n            history.push(\"/\");\n            return;\n        }\n        //get flyers by user\n        getFlyersByUser(user.currentUser._id);\n        // flyerpane closed by default\n        setOpenFlyerPane(false);\n\n        return () => {\n            // setDeletedFlyer to false\n            setDeletedFlyer({})\n        }\n    }, []);\n\n    useEffect(()=> {\n        //get flyers by user\n        getFlyersByUser(user.currentUser._id);\n    },[flyer.deletedFlyer])\n\n    const handleItemClick = (item:any) => {\n        setOpenFlyerPane(true);\n        setSelectedPlace(item[0].placeId)\n        setSelectedLocationItem(item);\n    }\n\n    const displayListByLocation = () => {\n        const arrayOfPlaceId:any = [];\n        for(let flyerItem of flyer.flyers) {\n            if(!arrayOfPlaceId.includes(flyerItem.placeId.place_id)) {\n                arrayOfPlaceId.push(flyerItem.placeId.place_id)\n            }\n        }\n        const arrayOfPlacesWithAssociatedFlyers:any = [];\n        for(let placeItem of arrayOfPlaceId) {\n            const tempArr = [];\n            for(let flyerItem of flyer.flyers) {\n                if(placeItem === flyerItem.placeId.place_id) {\n                    tempArr.push(flyerItem)\n                }\n            }\n            arrayOfPlacesWithAssociatedFlyers.push(tempArr)\n        }\n\n        return (\n            <div className=\"manage-list\">\n                <div className=\"manage-list__container\">\n                    {arrayOfPlacesWithAssociatedFlyers.map((item:any, idx:number) => (\n                        <div className=\"manage-list__item\" key={idx} onClick={()=>handleItemClick(item)}>\n                            <div className=\"manage-list__item__header\">\n                                <h5>{typeof item[0].placeId !== 'string' && limitText(item[0].placeId.name, 17)}</h5>\n                            </div>\n                            <div className=\"manage-list__item__body\">\n                                <cite>{typeof item[0].placeId !== 'string' && item[0].placeId.formattedAddress}</cite>\n                                <hr/>\n                                <p>{item.length} flyer notice(s)</p>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n                <FlyerListSlidePane manageMode>\n                    {selectedLocationItem.map((flyerItem:any,idx:number)=> (\n                        <FlyerListItem flyer={flyerItem} belongsToUser={true} key={idx}/>\n                    ))}\n                    {selectedLocationItem.length===0 &&\n                        <p>No Flyers at this location </p>\n                    }\n                </FlyerListSlidePane>\n            </div>\n        )\n    }\n\n    return ( \n        <ManageStyled>\n            <h2>Manage Flyers</h2>\n            <hr />\n            {flyer.fetchingflyers && <div><Spinner color=\"dark\" size=\"sm\" /></div>}\n            {!flyer.fetchingflyers && flyer.flyers && flyer.flyers.length > 0?\n                displayListByLocation()\n                :\n                <p>There are no flyers to manage yet. You must create a flyer first.</p>\n            }\n\n        </ManageStyled>\n     );\n}\n\nconst mapStateToProps = (state:StoreState) => ({\n    flyer: state.flyer,\n    user: state.user\n});\n\nexport default connect(mapStateToProps, {\n    getFlyersByUser,\n    setOpenFlyerPane,\n    setSelectedPlace,\n    setDeletedFlyer,\n    setFlyersInit\n})(Manage);","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n    & .edit-pics {\n        display: flex;\n        flex-wrap: wrap;\n\n        &__item {\n            width: 125px;\n            height: auto;\n            margin-right: 15px;\n            border: 1px solid #ccc;\n\n            &__controls {\n                border-bottom: 1px solid #ccc;\n                text-align: right;\n                padding-right: 5px;\n\n                span {\n                    cursor: pointer;\n                }\n            }\n            figure {\n                padding: 1rem;\n\n                img {\n                    width: 100%;\n                }\n            }\n        }\n    }\n`;\n\nexport const EditFlyerStyle = ({children}) => {\n    return (\n    <Wrapper>\n        {children}\n    </Wrapper>\n    )\n};","import React, {useState, useEffect, FormEvent} from 'react';\nimport {connect} from 'react-redux';\nimport axios from 'axios';\nimport {Label, Input, Button, Spinner} from 'reactstrap';\n\nimport { FormWrapper, InputGroup, CheckBoxContainer } from \"../../components/Form/styled\";\nimport agent from '../../agent';\n\nimport { StoreState} from '../../redux/root-reducer';\nimport { IFlyer } from '../../redux/reducers/flyer';\nimport { ILocation } from '../../redux/reducers/location';\nimport { IUser } from '../../redux/reducers/user';\nimport {validateImage, validateEmail} from '../../utils/validate';\n\n\nimport {editFlyer, setOpenFlyerPane} from '../../redux/actions';\nimport { RouteComponentProps } from 'react-router';\nimport { IsEmptyObj } from '../../utils/functions';\nimport { EditFlyerStyle } from './styled';\n\nexport interface EditFlyerProps extends RouteComponentProps {\n    reduxLocation: ILocation,\n    flyer: IFlyer,\n    user: IUser,\n    editFlyer: any,\n    setOpenFlyerPane: any\n}\n\nconst EditFlyer:React.SFC<EditFlyerProps> = ({\n    reduxLocation,\n    flyer,\n    user,\n    editFlyer,\n    history,\n    setOpenFlyerPane\n}) => {\n    // useState\n    const [heading, setHeading] = useState(((flyer.selectedFlyer||{}).heading)||\"\");\n    // img \n    const [imgNum, setImgNum] = useState(((flyer.selectedFlyer||{}).images||[]).length);\n    const [img1, setImg1] = useState(((flyer.selectedFlyer||{}).images || []).length > 0 ?flyer.selectedFlyer.images[0]:\"\");\n    const [img2, setImg2] = useState(((flyer.selectedFlyer||{}).images || []).length > 1 ?flyer.selectedFlyer.images[1]:\"\");\n    const [description, setDescription] = useState(((flyer.selectedFlyer||{}).description)||\"\");\n    // email\n    const [email, setEmail] = useState(((flyer.selectedFlyer||{}).contact||{}).email? flyer.selectedFlyer.contact.email:\"\")\n    const [selectedEmail, setSelectedEmail] = useState(((flyer.selectedFlyer||{}).contact||{}).email? \"email\":\"\");\n    // phone\n    const [phone, setPhone] = useState(((flyer.selectedFlyer||{}).contact||{}).phone? flyer.selectedFlyer.contact.phone:\"\");\n    const [phoneSelected, setPhoneSelected] = useState(((flyer.selectedFlyer||{}).contact||{}).phone? \"phone\":\"\");\n    const [template, setTemplate] = useState((flyer.selectedFlyer||{}).template === \"template\"? \"template\":\"\")\n    // errors\n    const [errors, setErrors] = useState({\n        heading: \"\",\n        description: \"\",\n        email: \"\",\n        imgNum:\"\",\n        img1: \"\",\n        img2: \"\",\n        phone: \"\"\n    });\n\n    const isUserLoggedIn = ():boolean => {\n        return Object.keys(user.currentUser).length > 0;\n    }\n\n    const fileChanged = (e:React.ChangeEvent<HTMLInputElement>) => {\n        if(imgNum===0) {\n            // reset error\n            setErrors({...errors, img1:\"\"});\n            //add first pic\n            if(validateImage(e.target.value)) {\n                setImgNum(1)\n                //get Signed\n                if(e.target.files !==null) {\n                    const file = e.target.files[0];\n                    getSignedRequest(file);\n                }\n            } else {setErrors({...errors, img1:\"Wrong File Type\"})}\n        }else if (imgNum===1) {\n             // reset error\n             setErrors({...errors, img2:\"\"});\n            //add second pic\n            if(validateImage(e.target.value)) {\n                setImgNum(2)\n                //get Signed\n                if(e.target.files !==null) {\n                    const file = e.target.files[0];\n                    getSignedRequest(file);\n                }\n            }else {setErrors({...errors, img2:\"Wrong File Type\"})}\n        } else {\n            //set error 'max of 2 images'\n            setErrors({...errors, imgNum:\"Max of 2 images. This current image was not uploaded.\"})\n        }\n        // if(document && document.getElementById('flyerImg') && document.getElementById('flyerImg').value) {\n        //     document.getElementById('flyerImg').value = '';\n        // }\n    }\n    const getSignedRequest = async (file:any) => {\n        try {\n            const response = await axios.post('/graphql', \n                JSON.stringify({\n                    query: `\n                        query {\n                            signS3(s3Input: {fileName: \"${file.name}\", fileType: \"${file.type}\"}) {\n                                signedRequest,\n                                url\n                            } \n                        }\n                    `\n                })\n            )\n            const {data: {data: {signS3}}} = response;\n            uploadFile(file, signS3.signedRequest, signS3.url);\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const uploadFile = async (file:any, signedRequest:any, url:string) => {\n        try {\n            // delete Authorization header\n            delete axios.defaults.headers.common[\"Authorization\"];\n\n            // make aws call\n            const response = axios({\n                method: 'put',\n                url: signedRequest,\n                data: file,\n                headers: {'Content-Type': file.type}\n            })            \n\n            // store the image urls in state to be sent to the backend\n            if (imgNum === 0) {                    \n                setImg1(url);\n            } else if (imgNum === 1) {\n                setImg2(url);\n            }\n\n            // add auth header back\n            agent.setSession(user.currentUser.token);\n        } catch(error) {\n            console.dir(\"error\", error)\n        }\n    }\n\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n        //reset error 'max of 2 images'\n        setErrors({...errors, imgNum:\"\"})\n        e.preventDefault()\n        // validation\n        const errorsObj: any = { ...errors };\n        errorsObj.heading= heading.trim().length > 100? 'Heading must not be more than 100 characters':\"\";\n        errorsObj.description = description.trim().length < 3? \"Heading must be more than 3 characters\": \"\";\n        errorsObj.description = description.trim().length > 2000? \"Body must not be more than 2000 characters\": \"\";\n        errorsObj.description = description.trim().length < 3? \"Body must be more than 3 characters\": \"\";\n        errorsObj.phone = (phoneSelected && phone.trim().length > 30)? \"Phone must be less than 30 characters\": \"\";\n        errorsObj.phone = phoneSelected && !(/[0-9]/.test(phone)) && \"Phone must be all numbers\";\n        errorsObj.email = selectedEmail && validateEmail(email)===\"Not a Valid Email\" && \"Email is invalid\";\n\n        setErrors(errorsObj);\n        // check if any errors exist, don't submit form if errors\n        for (let errorItem in errorsObj) {\n            if(typeof errorsObj[errorItem] === \"boolean\" && errorsObj[errorItem] === true) {\n                return;\n            }\n            if(typeof errorsObj[errorItem] === \"string\" && errorsObj[errorItem].length >0) {\n                return;\n            }\n        }\n\n        // construct flyer body to be sent\n        const images = [];\n        if(img1) {\n            images.push(img1)\n        }\n        if(img2) {\n            images.push(img2)\n        }\n        const flyerBody = {\n            _id: flyer.selectedFlyer._id,\n            placeId: reduxLocation.selectedPlace.placeId,\n            formattedAddress: reduxLocation.selectedPlace.formatted_address,\n            latlng: reduxLocation.selectedPlace.latlng,\n            name: reduxLocation.selectedPlace.name,\n            images: images,\n            heading: heading,\n            description: description,\n            phone: phoneSelected? phone:\"\",\n            email: selectedEmail? email: \"\",\n            template: template\n        }\n\n        // async action to make API call to make-flyer\n        editFlyer(flyerBody, ()=>history.push(\"/view-flyer\"));\n    }\n\n    const handleDeletePic = (img: string, index:number) => {\n      if(index===1) {\n        setImg1(img2)\n        setImg2(\"\")\n      } else if (index === 2) {\n        setImg2(\"\")        \n      }\n      let newImgNum = imgNum -1;\n      setImgNum(newImgNum);\n    }\n\n    const renderErrors = () => {\n        if(flyer.errors) {\n          return flyer.errors.map((error:any) => {\n            return <p className=\"text-danger\">{error.message}</p>\n          })\n        }\n    }\n\n    useEffect(()=> {\n        if(IsEmptyObj(flyer.selectedFlyer)) {\n            history.push(\"/\")\n        }\n\n        return () => {\n            setOpenFlyerPane(false)\n        }\n    },[])\n\n    return !flyer.selectedFlyer? null : (            \n        <EditFlyerStyle>\n            <h2>Edit Your Flyer</h2>\n            <h5>{(reduxLocation.selectedPlace||{}).name}</h5>\n            <hr />\n            <FormWrapper>\n                {renderErrors()}\n                <form onSubmit={handleSubmit}>\n                    <InputGroup>\n                        {errors.heading && <p className=\"text-danger\">{errors.heading}</p>}                 \n                        <Label for=\"heading\">Flyer Heading</Label>\n                        <Input \n                            type=\"text\" \n                            name=\"heading\" \n                            value={heading}\n                            onChange={(e)=>setHeading(e.target.value)}\n                            required\n                        />\n                    </InputGroup>\n                    {isUserLoggedIn() &&(\n                        <React.Fragment>\n                            <p>Num of Pics Uploaded: {imgNum}/2</p>\n                            <div className=\"edit-pics\">\n                                {img1 !==\"\" && (\n                                <div className=\"edit-pics__item\">\n                                    <p className=\"edit-pics__item__controls\">\n                                    <span onClick={()=>handleDeletePic(img1, 1)}>X</span>\n                                    </p>\n                                    <figure>\n                                        <img src={img1} />\n                                    </figure>                                        \n                                </div>\n                                )}\n                                {img2 !== \"\" && (\n                                <div className=\"edit-pics__item\">\n                                    <p className=\"edit-pics__item__controls\">\n                                    <span onClick={()=>handleDeletePic(img2, 2)}>X</span>\n                                    </p>\n                                    <figure>\n                                        <img src={img2} />\n                                    </figure>                                        \n                                </div>\n                                )}\n                            </div>\n                            <InputGroup>\n                                {errors.imgNum && <p className=\"text-danger\">{errors.imgNum}</p>}\n                                <Label for=\"img\">Upload Image</Label>\n                                <Input \n                                    type=\"file\" \n                                    name=\"img\" \n                                    id=\"flyerImg\"\n                                    onChange={(e)=>fileChanged(e)}\n                                />\n                            </InputGroup>\n                        </React.Fragment>                        \n                    )}\n                    <InputGroup>\n                        {errors.description && <p className=\"text-danger\">{errors.description}</p>}\n                        <Label for=\"description\">\n                            Body{isUserLoggedIn()?\"\":\"*\"}\n                        </Label>\n                        <Input \n                            type=\"textarea\" \n                            name=\"description\" \n                            rows=\"7\"\n                            value={description}\n                            onChange={(e)=>setDescription(e.target.value)}\n                            required\n                        />\n                    </InputGroup>\n                    {isUserLoggedIn()? (\n                        <React.Fragment>\n                            <InputGroup>\n                                <Label for=\"img\">Contact Information</Label>\n                                <small>Deselect \"Email\" to use registered email</small>\n                                    <CheckBoxContainer>\n                                        <div className=\"CheckBoxItem\">\n                                            <Input \n                                                type=\"checkbox\" \n                                                value=\"email\" \n                                                checked={selectedEmail? true:false}\n                                                onChange={(e)=>setSelectedEmail(selectedEmail==\"\"?e.target.value:\"\")}\n                                            />{\" \"}Email \n                                        </div>\n                                        <div className=\"CheckBoxItem\">\n                                            <Input \n                                                type=\"checkbox\" \n                                                value=\"addPhone\" \n                                                checked={phoneSelected? true:false}\n                                                onChange={(e)=>setPhoneSelected(phoneSelected==\"\"?e.target.value:\"\")}\n                                            />{\" \"} Phone\n                                        </div>\n                                    </CheckBoxContainer>\n                                \n                            </InputGroup>\n                            {selectedEmail &&\n                                <InputGroup>\n                                    <Label for=\"email\">Email </Label>\n                                    {errors.email && <p className=\"text-danger\">{errors.email}</p>}\n                                    <Input \n                                        type=\"email\" \n                                        name=\"email\"\n                                        value={email}\n                                        onChange={(e)=>setEmail(e.target.value)}\n                                    />                            \n                                </InputGroup>\n                            }\n                            {phoneSelected && \n                                <InputGroup>\n                                    <Label for=\"phone\">Phone</Label>\n                                    {errors.phone && <p className=\"text-danger\">{errors.phone}</p>}\n                                    <Input \n                                        type=\"tel\" \n                                        name=\"phone\"\n                                        value={phone}\n                                        onChange={(e)=>setPhone(e.target.value)}\n                                    />                            \n                                </InputGroup>                            \n                            }\n                        </React.Fragment>                        \n                    )\n                    :\n                    <React.Fragment>\n                        <cite className=\"text-muted d-block\">*Anonymous users must put their contact info in the body.</cite>\n                        <cite className=\"text-muted d-block\">SignIn/Register to have more options for your flyers.</cite>\n                    </React.Fragment>\n                    }\n                    {isUserLoggedIn() &&\n                        <InputGroup>\n                            <Label>\n                                <Input \n                                    type=\"checkbox\"\n                                    name=\"template\"\n                                    value=\"template\"\n                                    checked={template? true:false}\n                                    onChange={(e)=>setTemplate(template==\"\"?e.target.value:\"\")}\n                                />\n                                {\" \"}\n                                Want to make this flyer a template for future use?\n                            </Label>\n                        </InputGroup>                    \n                    }\n                    <Button \n                        type=\"submit\"\n                        color='primary'\n                        outline={false}\n                        disabled={flyer.editingFlyer? true:false}\n                    >\n                        {flyer.editingFlyer?\n                            <Spinner color=\"light\"></Spinner>\n                        :\n                        \"Edit Flyer\"\n                        }\n                    </Button>\n                </form>\n            </FormWrapper>\n        </EditFlyerStyle>\n    )}\n\nconst mapStateToProps = (state: StoreState) => ({\n    reduxLocation: state.location,\n    flyer: state.flyer,\n    user: state.user\n  });\n\nexport default connect(mapStateToProps, {\n    editFlyer,\n    setOpenFlyerPane\n})(EditFlyer);\n","import React, {useState, useEffect, FormEvent} from 'react';\nimport {connect} from 'react-redux';\nimport axios from 'axios';\nimport {Label, Input, Button, Spinner} from 'reactstrap';\nimport {uuid} from 'uuidv4';\n\nimport { FormWrapper, InputGroup, CheckBoxContainer } from \"../../components/Form/styled\";\nimport agent from '../../agent';\n\nimport { StoreState} from '../../redux/root-reducer';\nimport { IFlyer } from '../../redux/reducers/flyer';\nimport { ILocation } from '../../redux/reducers/location';\nimport { IUser } from '../../redux/reducers/user';\nimport {validateImage, validateEmail} from '../../utils/validate';\n\nimport FlyerListSlidePane from '../../components/FlyerListSlidePane';\nimport FlyerListByUserTemplate from '../../components/FlyerListByUserTemplate';\n\nimport {makeFlyer, setOpenFlyerPane, setUsingTemplate} from '../../redux/actions';\nimport { RouteComponentProps } from 'react-router';\n\nexport interface MakeFlyerFromTemplateProps extends RouteComponentProps {\n    reduxLocation: ILocation,\n    flyer: IFlyer,\n    user: IUser,\n    makeFlyer: any,\n    setOpenFlyerPane: any,\n    setUsingTemplate: any\n}\n\nconst MakeFlyerFromTemplate:React.SFC<MakeFlyerFromTemplateProps> = ({\n    reduxLocation,\n    flyer,\n    user,\n    makeFlyer,\n    setOpenFlyerPane,\n    setUsingTemplate,\n    history\n}) => {\n    // useState\n    const [heading, setHeading] = useState(((flyer.selectedFlyer||{}).heading)||\"\");\n    // img \n    const [imgNum, setImgNum] = useState(0);\n    const [img1, setImg1] = useState(\"\");\n    const [img2, setImg2] = useState(\"\");\n    const [description, setDescription] = useState(((flyer.selectedFlyer||{}).description)||\"\");\n    // email\n    const [email, setEmail] = useState(((flyer.selectedFlyer||{}).contact||{}).email? flyer.selectedFlyer.contact.email:\"\")\n    const [selectedEmail, setSelectedEmail] = useState(((flyer.selectedFlyer||{}).contact||{}).email? \"email\":\"\");\n    // phone\n    const [phone, setPhone] = useState(((flyer.selectedFlyer||{}).contact||{}).phone? flyer.selectedFlyer.contact.phone:\"\");\n    const [phoneSelected, setPhoneSelected] = useState(((flyer.selectedFlyer||{}).contact||{}).phone? \"phone\":\"\");\n    const [template, setTemplate] = useState(\"\")\n    // errors\n    const [errors, setErrors] = useState({\n        heading: \"\",\n        description: \"\",\n        email: \"\",\n        imgNum:\"\",\n        img1: \"\",\n        img2: \"\",\n        phone: \"\"\n    });\n\n    const isUserLoggedIn = ():boolean => {\n        return Object.keys(user.currentUser).length > 0;\n    }\n\n    const fileChanged = (e:React.ChangeEvent<HTMLInputElement>) => {\n        if(imgNum===0) {\n            // reset error\n            setErrors({...errors, img1:\"\"});\n            //add first pic\n            if(validateImage(e.target.value)) {\n                setImgNum(1)\n                //get Signed\n                if(e.target.files !==null) {\n                    const file = e.target.files[0];\n                    getSignedRequest(file);\n                }\n            } else {setErrors({...errors, img1:\"Wrong File Type\"})}\n        }else if (imgNum===1) {\n             // reset error\n             setErrors({...errors, img2:\"\"});\n            //add second pic\n            if(validateImage(e.target.value)) {\n                setImgNum(2)\n                //get Signed\n                if(e.target.files !==null) {\n                    const file = e.target.files[0];\n                    getSignedRequest(file);\n                }\n            }else {setErrors({...errors, img2:\"Wrong File Type\"})}\n        } else {\n            //set error 'max of 2 images'\n            setErrors({...errors, imgNum:\"Max of 2 images. This current image was not uploaded.\"})\n        }\n        // if(document && document.getElementById('flyerImg') && document.getElementById('flyerImg').value) {\n        //     document.getElementById('flyerImg').value = '';\n        // }\n    }\n    const getSignedRequest = async (file:any) => {\n        try {\n            const response = await axios.post('/graphql', \n                JSON.stringify({\n                    query: `\n                        query {\n                            signS3(s3Input: {fileName: \"${file.name}\", fileType: \"${file.type}\"}) {\n                                signedRequest,\n                                url\n                            } \n                        }\n                    `\n                })\n            )\n            const {data: {data: {signS3}}} = response;\n            uploadFile(file, signS3.signedRequest, signS3.url);\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const uploadFile = async (file:any, signedRequest:any, url:string) => {\n        try {\n            // delete Authorization header\n            delete axios.defaults.headers.common[\"Authorization\"];\n\n            // make aws call\n            const response = axios({\n                method: 'put',\n                url: signedRequest,\n                data: file,\n                headers: {'Content-Type': file.type}\n            })            \n\n            // store the image urls in state to be sent to the backend\n            if (imgNum === 0) {                    \n                setImg1(url);\n            } else if (imgNum === 1) {\n                setImg2(url);\n            }\n\n            // add auth header back\n            agent.setSession(user.currentUser.token);\n        } catch(error) {\n            console.dir(\"error\", error)\n        }\n    }\n\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n        //reset error 'max of 2 images'\n        setErrors({...errors, imgNum:\"\"})\n        e.preventDefault()\n        // validation\n        const errorsObj: any = { ...errors };\n        errorsObj.heading= heading.trim().length > 100? 'Heading must not be more than 100 characters':\"\";\n        errorsObj.description = description.trim().length < 3? \"Heading must be more than 3 characters\": \"\";\n        errorsObj.description = description.trim().length > 2000? \"Body must not be more than 2000 characters\": \"\";\n        errorsObj.description = description.trim().length < 3? \"Body must be more than 3 characters\": \"\";\n        errorsObj.phone = (phoneSelected && phone.trim().length > 30)? \"Phone must be less than 30 characters\": \"\";\n        errorsObj.phone = phoneSelected && !(/[0-9]/.test(phone)) && \"Phone must be all numbers\";\n        errorsObj.email = selectedEmail && validateEmail(email)===\"Not a Valid Email\" && \"Email is invalid\";\n\n        setErrors(errorsObj);\n        // check if any errors exist, don't submit form if errors\n        for (let errorItem in errorsObj) {\n            if(typeof errorsObj[errorItem] === \"boolean\" && errorsObj[errorItem] === true) {\n                return;\n            }\n            if(typeof errorsObj[errorItem] === \"string\" && errorsObj[errorItem].length >0 && errorItem !==\"imgNum\") {\n                return;\n            }\n        }\n\n        // construct flyer body to be sent\n        const images = [];\n        if(img1) {\n            images.push(img1)\n        }\n        if(img2) {\n            images.push(img2)\n        }\n        const flyerBody = {\n            placeId: reduxLocation.selectedPlace.placeId,\n            formattedAddress: reduxLocation.selectedPlace.formatted_address,\n            latlng: reduxLocation.selectedPlace.latlng,\n            name: reduxLocation.selectedPlace.name,\n            images: images,\n            heading: heading,\n            description: description,\n            phone: phoneSelected? phone:\"\",\n            email: selectedEmail? email: \"\",\n            template: template\n        }\n\n        // async action to make API call to make-flyer\n        makeFlyer(flyerBody, );\n    }\n\n    const renderErrors = () => {\n        if(flyer.errors) {\n          return flyer.errors.map((error:any) => {\n            return <p className=\"text-danger\">{error.message}</p>\n          })\n        }\n    }\n\n    useEffect(()=> {\n        setOpenFlyerPane(false);\n        if(!reduxLocation.selectedPlace) {\n            history.push(\"/\")\n        }\n        return ()=> {\n            setOpenFlyerPane(false);\n            setUsingTemplate(false);\n        }\n    },[])\n    useEffect(()=> {\n        //redirect to View Flyer once flyer is made\n        if(flyer.selectedFlyer && Object.keys(flyer.selectedFlyer).length>0 && !flyer.usingTemplate) {\n            history.push(\"/view-flyer\");\n        }\n\n    }, [flyer])\n\n    return (\n        <div>\n            <h2>Make Your Flyer</h2>\n            <h5>at {(reduxLocation.selectedPlace||{}).name}</h5>\n            <hr/>\n            <FormWrapper>\n                {renderErrors()}\n                <form onSubmit={handleSubmit}>\n                    <InputGroup>\n                        {errors.heading && <p className=\"text-danger\">{errors.heading}</p>}                 \n                        <Label for=\"heading\">Flyer Heading</Label>\n                        <Input \n                            type=\"text\" \n                            name=\"heading\" \n                            value={heading}\n                            onChange={(e)=>setHeading(e.target.value)}\n                            required\n                        />\n                    </InputGroup>\n                    {isUserLoggedIn() &&(\n                        <React.Fragment>\n                            <p>Num of Pics Uploaded: {imgNum}/2</p>\n                            <InputGroup>\n                                {errors.imgNum && <p className=\"text-danger\">{errors.imgNum}</p>}\n                                <Label for=\"img\">Upload Image</Label>\n                                <Input \n                                    type=\"file\" \n                                    name=\"img\" \n                                    id=\"flyerImg\"\n                                    onChange={(e)=>fileChanged(e)}\n                                />\n                            </InputGroup>\n                        </React.Fragment>                        \n                    )}\n                    <InputGroup>\n                        {errors.description && <p className=\"text-danger\">{errors.description}</p>}\n                        <Label for=\"description\">\n                            Body{isUserLoggedIn()?\"\":\"*\"}\n                        </Label>\n                        <Input \n                            type=\"textarea\" \n                            name=\"description\" \n                            value={description}\n                            rows=\"7\"\n                            onChange={(e)=>setDescription(e.target.value)}\n                            required\n                        />\n                    </InputGroup>\n                    {isUserLoggedIn()? (\n                        <React.Fragment>\n                            <InputGroup>\n                                <Label for=\"img\">Contact Information</Label>\n                                    <small>Deselect \"Email\" to use registered email</small>\n                                    <CheckBoxContainer>\n                                        <div className=\"CheckBoxItem\">\n                                            <Input \n                                                type=\"checkbox\" \n                                                value=\"email\" \n                                                checked={selectedEmail? true:false}\n                                                onChange={(e)=>setSelectedEmail(selectedEmail==\"\"?e.target.value:\"\")}\n                                            />{\" \"}Email \n                                        </div>\n                                        <div className=\"CheckBoxItem\">\n                                            <Input \n                                                type=\"checkbox\" \n                                                value=\"addPhone\" \n                                                checked={phoneSelected? true:false}\n                                                onChange={(e)=>setPhoneSelected(phoneSelected==\"\"?e.target.value:\"\")}\n                                            />{\" \"} Phone\n                                        </div>\n                                    </CheckBoxContainer>\n                                \n                            </InputGroup>\n                            {selectedEmail &&\n                                <InputGroup>\n                                    <Label for=\"email\">Email </Label>\n                                    {errors.email && <p className=\"text-danger\">{errors.email}</p>}\n                                    <Input \n                                        type=\"email\" \n                                        name=\"email\"\n                                        value={email}\n                                        onChange={(e)=>setEmail(e.target.value)}\n                                    />                            \n                                </InputGroup>\n                            }\n                            {phoneSelected && \n                                <InputGroup>\n                                    <Label for=\"phone\">Phone</Label>\n                                    {errors.phone && <p className=\"text-danger\">{errors.phone}</p>}\n                                    <Input \n                                        type=\"tel\" \n                                        name=\"phone\"\n                                        value={phone}\n                                        onChange={(e)=>setPhone(e.target.value)}\n                                    />                            \n                                </InputGroup>                            \n                            }\n                        </React.Fragment>                        \n                    )\n                    :\n                    <React.Fragment>\n                        <cite className=\"text-muted d-block\">*Anonymous users must put their contact info in the body.</cite>\n                        <cite className=\"text-muted d-block\">SignIn/Register to have more options for your flyers.</cite>\n                    </React.Fragment>\n                    }\n                    {isUserLoggedIn() &&\n                        <InputGroup>\n                            <Label>\n                                <Input \n                                    type=\"checkbox\"\n                                    value=\"template\"\n                                    checked={template? true:false}\n                                    onChange={(e)=>setTemplate(template==\"\"?e.target.value:\"\")}\n                                />\n                                {\" \"}\n                                Want to make this flyer a template for future use?\n                            </Label>\n                        </InputGroup>                    \n                    }\n                    <Button \n                        type=\"submit\"\n                        color='primary'\n                        outline={false}\n                        disabled={flyer.makingFlyer? true:false}\n                    >\n                        {flyer.makingFlyer?\n                            <Spinner color=\"light\"></Spinner>\n                        :\n                        \"Make Flyer\"\n                        }\n                    </Button>\n                </form>\n            </FormWrapper>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n    reduxLocation: state.location,\n    flyer: state.flyer,\n    user: state.user\n  });\n\nexport default connect(mapStateToProps, {\n    makeFlyer,\n    setOpenFlyerPane,\n    setUsingTemplate\n})(MakeFlyerFromTemplate);","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport agent from './agent';\nimport {getUserInfo} from './redux/actions';\n\nimport Navigation from './components/Navigation';\n\n//Containers\nimport Home from './containers/Home/index';\nimport MakeFlyer from './containers/MakeFlyer/index';\nimport ViewFlyer from './containers/ViewFlyer';\nimport Manage from './containers/Manage';\nimport EditFlyer from './containers/EditFlyer';\n\nimport {StoreState} from './redux/root-reducer';\nimport MakeFlyerFromTemplate from './containers/MakeFlyerFromTemplate';\n\nexport interface AppProps {\n  getUserInfo: Function\n}\n\nconst App:React.SFC<AppProps> = ({getUserInfo}) => {\n  useEffect(()=> {\n    //check if jwt is set\n    if(agent.getSession()) {\n      //log him in\n      getUserInfo();\n    }\n  },[]);\n\n  return (\n    <div className=\"App\">\n        {/* Navigation goes here */}\n        <Router>\n          <Navigation />\n          <div className=\"container mt-4 mb-4\">\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/make-flyer\" component={MakeFlyer} />\n                <Route exact path=\"/make-from-template\" component={MakeFlyerFromTemplate} />\n                <Route exact path=\"/view-flyer\" component={ViewFlyer} />\n                <Route exact path=\"/manage\" component={Manage} />\n                <Route exact path=\"/edit-flyer\" component={EditFlyer} />\n              </Switch>\n          </div>\n        </Router>\n      {/* Footer goes here */}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state:StoreState) => ({\n});\n\nexport default connect(mapStateToProps ,{\n  getUserInfo\n})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {Action} from \"../actions/types\";\nimport constants from '../constants';\n\nexport interface IUser {\n  registering: boolean,\n  loggingIn: boolean,\n  currentUser: any,\n  errors: any\n}\nconst initialState = {\n  registering: false,\n  loggingIn: false,\n  currentUser: {},\n  errors: null\n}\n\nexport default (state:IUser=initialState, action:Action) => {\n  switch(action.type) {\n    case constants.USER.REGISTER_USER:\n      return {\n        ...state,\n        registering: true\n      }\n    case constants.USER.REGISTER_USER_SUCCESS:\n      return {\n        ...state,\n        registering: false,\n        currentUser: action.payload\n      }\n    case constants.USER.REGISTER_USER_FAIL:\n      return {\n        ...state,\n        registering: false,\n        errors: action.payload\n      }\n    case constants.USER.LOGIN_USER:\n      return {\n        ...state,\n        loggingIn: true,\n      }\n    case constants.USER.LOGIN_USER_SUCCESS:\n      return {\n        ...state,\n        loggingIn: false,\n        currentUser: action.payload\n      }\n    case constants.USER.LOGIN_USER_FAIL:\n      return {\n        ...state,\n        loggingIn: false,\n        errors: action.payload\n      }\n    case constants.USER.LOGOUT_USER: \n      return {\n        ...initialState\n      }\n    default: \n      return state;\n  }\n}","import {Action} from \"../actions/types\";\nimport constants from '../constants';\n\nexport interface ILocation {\n    ipLocation: {lat:number, lng:number}|null,\n    initialMapShow: boolean,\n    validPlace: any|null,\n    selectedPlace: any|null,\n    allPlaces: any[],\n    errors: any,\n    gettingPlaces: boolean\n}\nconst initialState = {\n    ipLocation: {\n        lat:41.500710,\n        lng: -74.021347\n    },\n    initialMapShow: false,\n    validPlace: null,\n    selectedPlace: null,\n    allPlaces: [],\n    errors: null,\n    gettingPlaces: false\n}\n\nexport default (state:ILocation=initialState, action:Action) => {\n  switch(action.type) {\n    case constants.LOCATION.SET_IP_LOCATION:\n        return {\n            ...state,\n            ipLocation: action.payload\n        };\n    case constants.LOCATION.INITIAL_MAP_SHOW:\n        return {\n            ...state,\n            initialMapShow: true\n        }\n    case constants.LOCATION.SET_VALID_PLACE:\n        return {\n            ...state,\n            validPlace: action.payload\n        }\n    case constants.LOCATION.SET_SELECTED_PLACE:\n        return {\n            ...state,\n            selectedPlace: action.payload\n        }\n    case constants.LOCATION.GET_PLACES:\n        return {\n            ...state,\n            gettingPlaces: true\n        }\n    case constants.LOCATION.GET_PLACES_SUCCESS:\n        return {\n            ...state,\n            gettingPlaces: false,\n            allPlaces: action.payload\n        }\n    case constants.LOCATION.GET_PLACES_ERROR:\n        return {\n            ...state,\n            gettingPlaces: false,\n            errors: action.payload\n        }\n    default: \n      return state;\n  }\n}","import {Action} from \"../actions/types\";\nimport constants from '../constants';\n\nexport interface IFlyer {\n    openFlyerPane: boolean,\n    flyerMade: boolean,\n    makingFlyer: boolean,\n    editingFlyer: boolean,\n    fetchingFlyers: boolean,\n    flyers: any[],\n    selectedFlyer: any,\n    wishToDeleteFlyer: boolean,\n    deletingFlyer: boolean,\n    deletedFlyer: any,\n    usingTemplate: boolean,\n    errors: any\n}\nconst initialState = {\n    openFlyerPane:  false,\n    flyerMade: false,\n    makingFlyer: false,\n    editingFlyer: false,\n    fetchingFlyers: false,\n    flyers: [],\n    selectedFlyer: {},\n    wishToDeleteFlyer: false,\n    deletingFlyer: false,\n    deletedFlyer: {},\n    usingTemplate: false,\n    errors: null\n}\n\nexport default (state:IFlyer=initialState, action:Action) => {\n  switch(action.type) {\n    case constants.FLYER.SET_FLYERS:\n        return {\n            ...state,\n            fetchingFlyers: true\n        };\n    case constants.FLYER.SET_FLYERS_SUCCESS:\n        return {\n            ...state,\n            flyers: action.payload,\n            fetchingFlyers: false,\n            errors: null\n        };\n    case constants.FLYER.SET_FLYERS_FAIL:\n        return {\n            ...state,\n            fetchingFlyers: false,\n            errors: action.payload\n        };\n    case constants.FLYER.OPEN_FLYER_PANE:\n        return {\n            ...state,\n            openFlyerPane: action.payload\n        };\n    case constants.FLYER.SET_MAKING_FLYER:\n        return {\n            ...state,\n            makingFlyer: true\n        }\n    case constants.FLYER.SET_MAKING_FLYER_SUCCESS:\n        return {\n            ...state,\n            makingFlyer: false,\n            flyerMade: true,\n            selectedFlyer: action.payload,\n            usingTemplate: false,\n            errors: null\n        }\n    case constants.FLYER.SET_MAKING_FLYER_FAIL:\n        return {\n            ...state,\n            makingFlyer: false,\n            flyerMade: false,\n            errors: action.payload\n        }\n    case constants.FLYER.SET_EDITING_FLYER:\n        return {\n            ...state,\n            editingFlyer: true\n        }\n    case constants.FLYER.SET_EDITING_FLYER_SUCCESS:\n        return {\n            ...state,\n            editingFlyer: false,\n            flyerMade: true,\n            selectedFlyer: action.payload,\n            errors: null\n        }\n    case constants.FLYER.SET_EDITING_FLYER_FAIL:\n        return {\n            ...state,\n            editingFlyer: false,\n            flyerMade: false,\n            errors: action.payload\n        }\n    case constants.FLYER.SET_SELECTED_FLYER:\n        return {\n            ...state,\n            selectedFlyer: action.payload\n        }\n    case constants.FLYER.SET_WISH_TO_DELETE_FLYER: \n        return {\n            ...state,\n            wishToDeleteFlyer: action.payload\n        }\n    case constants.FLYER.SET_DELETING_FLYER:\n        return {\n            ...state,\n            deletingFlyer: action.payload\n        }\n    case constants.FLYER.SET_DELETED_FLYER:\n        return {\n            ...state,\n            deletedFlyer: action.payload\n        }\n    case constants.FLYER.SET_DELETING_FLYER_SUCCESS:\n        return {\n            ...state,\n            deletingFlyer: false,\n            deletedFlyer: action.payload\n        }\n    case constants.FLYER.SET_DELETING_FLYER_FAIL:\n        return {\n            ...state,\n            deletingFlyer: false,\n            errors: action.payload            \n        }\n    case constants.FLYER.SET_USING_TEMPLATE:\n        return {\n            ...state,\n            usingTemplate: action.payload            \n        }\n    \n    default: \n      return state;\n  }\n}","import {combineReducers} from 'redux';\nimport userReducer, {IUser} from './reducers/user';\nimport locationReducer, {ILocation} from './reducers/location';\nimport flyerReducer, {IFlyer} from './reducers/flyer';\n\nexport interface StoreState {\n  user: IUser,\n  location: ILocation,\n  flyer: IFlyer\n}\n\nexport default combineReducers<StoreState>({\n  user: userReducer,\n  location: locationReducer,\n  flyer: flyerReducer\n});","import {createStore, applyMiddleware} from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from './redux/root-reducer';\n\nexport const middlewares = process.env.NODE_ENV===\"production\"? [ReduxThunk] : [ReduxThunk, logger];\n\n//create a store with the middleware\nconst createStoreWithMiddleware = applyMiddleware(...middlewares)(createStore);\n\nconst store = createStoreWithMiddleware(rootReducer);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {ThemeProvider} from 'styled-components';\n\n//\nimport './agent';\n\n//styles\nimport GlobalStyle from './theme/globalStyles';\nimport Theme from './theme/theme';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={Theme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default {\n  colors: {\n    logo: '#FAB156',\n    blue: '#2A3DAD',\n    blueLight: '#4863FA',\n    green: '#4CAD98',\n    greenLight: '#61FAD9',\n    white: \"#FFFFFF\",\n    textPrimary: '#060d46',\n    textSecondary: '#8492a6',\n  },\n  spacers: {\n\n  },\n  mediaQueries: {\n    below425: `only screen and (max-width: 425px)`,\n    below768: `only screen and (max-width: 768px)`,\n    below1024: `only screen and (max-width: 1024px)`,\n    below1440: `only screen and (max-width: 1440px)`\n  }\n}","import constants from \"../constants\";\nimport { Dispatch } from \"redux\";\nimport axios from \"axios\";\n\nexport interface IFlyerData {\n  _id?:string,\n  placeId: string;\n  formattedAddress: string;\n  name: string;\n  latlng: {\n    lat: number,\n    lng: number\n  };\n  images: string[];\n  heading: string;\n  description: string;\n  phone: string;\n  email: string;\n  template: string;\n}\nexport interface IFlyerAction {\n  type: string;\n  payload: any;\n}\n\nexport const makeFlyer = (flyer: IFlyerData) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<IFlyerAction>({\n      type: constants.FLYER.SET_MAKING_FLYER,\n      payload: true\n    });\n    try {\n        const response = await axios.post(\n                \"/graphql\",\n                JSON.stringify({\n                    query: `\n                        mutation {\n                            makeFlyer(flyerInput: {\n                                placeId: \"${flyer.placeId}\", formattedAddress: \"${flyer.formattedAddress}\" , \n                                latlng: {lat:\"${flyer.latlng.lat}\", lng: \"${flyer.latlng.lng}\"},\n                                name: \"${flyer.name}\", heading: \"${flyer.heading}\", \n                                description: \"\"\"${flyer.description}\"\"\", images: \"${flyer.images}\",\n                                contact: {phone:\"${flyer.phone}\", email: \"${flyer.email}\"},\n                                template: \"${flyer.template}\"\n                            }) {\n                                _id\n                                placeId\n                                user {\n                                  _id\n                                  name\n                                  email\n                                }\n                                images\n                                heading\n                                description\n                                contact {\n                                  phone\n                                  email\n                                }\n                                template\n                                createdAt\n                                updatedAt\n                            }\n                        } \n                    `\n                })\n            );\n            const {data:{data:{makeFlyer}}} = response;\n            dispatch<IFlyerAction>({\n              type: constants.FLYER.SET_MAKING_FLYER_SUCCESS,\n              payload: makeFlyer\n            });\n    } catch(error) {\n        dispatch<IFlyerAction>({\n            type: constants.FLYER.SET_MAKING_FLYER_FAIL,\n            payload: error.response.data.errors\n        })\n    }\n  };\n};\n\nexport const editFlyer = (flyer: IFlyerData ,redirectCb:any) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<IFlyerAction>({\n      type: constants.FLYER.SET_EDITING_FLYER,\n      payload: true\n    });\n    try {\n        const response = await axios.post(\n                \"/graphql\",\n                JSON.stringify({\n                    query: `\n                        mutation {\n                            editFlyer(editFlyerInput: {\n                                _id: \"${flyer._id}\",\n                                placeId: \"${flyer.placeId}\", formattedAddress: \"${flyer.formattedAddress}\" , \n                                latlng: {lat:\"${flyer.latlng.lat}\", lng: \"${flyer.latlng.lng}\"},\n                                name: \"${flyer.name}\", heading: \"${flyer.heading}\", \n                                description: \"\"\"${flyer.description}\"\"\", images: \"${flyer.images}\",\n                                contact: {phone:\"${flyer.phone}\", email: \"${flyer.email}\"},\n                                template: \"${flyer.template}\"\n                            }) {\n                                _id\n                                placeId\n                                user {\n                                  _id\n                                  name\n                                  email\n                                }\n                                images\n                                heading\n                                description\n                                contact {\n                                  phone\n                                  email\n                                }\n                                template\n                                createdAt\n                                updatedAt\n                            }\n                        } \n                    `\n                })\n            );\n            const {data:{data:{editFlyer}}} = response;\n            dispatch<IFlyerAction>({\n              type: constants.FLYER.SET_EDITING_FLYER_SUCCESS,\n              payload: editFlyer\n            });\n            //redirect to view-flyer page\n            redirectCb();\n    } catch(error) {\n        console.dir(\"error\", error);\n        dispatch<IFlyerAction>({\n            type: constants.FLYER.SET_EDITING_FLYER_FAIL,\n            payload: error.response.data.errors\n        })\n    }\n  };\n};\n\nexport const setOpenFlyerPane = (bool: boolean) => {\n  return {\n    type: constants.FLYER.OPEN_FLYER_PANE,\n    payload: bool\n  };\n};\n\nexport const setFlyersInit = (flyers: any) => {\n  return {\n    type: constants.FLYER.SET_FLYERS_SUCCESS,\n    payload: flyers\n  };\n};\n\nexport const getFlyersByPlace = (place_id: String) => {\n  return async (dispatch: Dispatch) => {\n    dispatch({type: constants.FLYER.SET_FLYERS});\n    try {\n      const response = await axios.post(\"graphql\", JSON.stringify({\n        query: `\n          query {\n            getFlyersByPlace(flyersByPlaceInput: {place_id: \"${place_id}\"}) {\n              _id\n              placeId \n              user {\n                _id\n                name\n                email\n              }\n              heading\n              description\n              images\n              contact {\n                phone\n                email\n              }\n              template\n              createdAt\n              updatedAt\n            }\n          }\n        `\n      }))\n      const {data:{data:{getFlyersByPlace}}} = response;\n      dispatch({type: constants.FLYER.SET_FLYERS_SUCCESS, payload: getFlyersByPlace});\n    } catch(error) {\n      dispatch({type: constants.FLYER.SET_FLYERS_FAIL, payload: error.response.data.errors});\n    }\n  }\n};\n\nexport const getFlyersByUser = (userId: String) => {\n  return async (dispatch: Dispatch) => {\n    dispatch({type: constants.FLYER.SET_FLYERS});\n    try {\n      const response = await axios.post(\"graphql\", JSON.stringify({\n        query: `\n          query {\n            getFlyersByUser(userId: \"${userId}\") {\n              _id\n              placeId {\n                _id\n                place_id\n                name\n                formattedAddress\n              }\n              user {\n                _id\n                name\n                email\n              }\n              heading\n              description\n              images\n              contact {\n                phone\n                email\n              }\n              template\n              createdAt\n              updatedAt\n            }\n          }\n        `\n      }))\n      const {data:{data:{getFlyersByUser}}} = response;\n      dispatch({type: constants.FLYER.SET_FLYERS_SUCCESS, payload: getFlyersByUser});\n    } catch(error) {\n      dispatch({type: constants.FLYER.SET_FLYERS_FAIL, payload: error.response.data.errors});\n    }\n  }\n};\n\nexport const setSelectedFlyer = (flyer: any) => {\n  return {\n    type: constants.FLYER.SET_SELECTED_FLYER,\n    payload: flyer\n  };\n};\n\nexport const setWishToDeleteFlyer = (bool: boolean) => {\n  return {\n    type: constants.FLYER.SET_WISH_TO_DELETE_FLYER,\n    payload: bool\n  }\n}\n\nexport const deleteFlyer = (flyer:any, redirectCb:any) => {\n  return async(dispatch:Dispatch) => {\n    // set DeletingFlyer true\n    dispatch({type: constants.FLYER.SET_DELETING_FLYER, payload: true})\n    try {\n      const response = await axios.post(\"graphql\",JSON.stringify({\n        query: `\n          mutation {\n            deleteFlyer(flyerId:\"${flyer._id}\") {\n              _id\n              placeId \n              user {\n                _id\n                name\n                email\n              }\n              heading\n              description\n              images\n              contact {\n                phone\n                email\n              }\n              template\n              createdAt\n              updatedAt\n            }\n          }\n        `        \n      }))\n      const {data:{data:{deleteFlyer}}} = response;\n      dispatch({type: constants.FLYER.SET_DELETING_FLYER_SUCCESS, payload: deleteFlyer})\n      dispatch({type: constants.FLYER.SET_WISH_TO_DELETE_FLYER, payload: false});\n      // close the slide pane\n      dispatch({type: constants.FLYER.OPEN_FLYER_PANE, payload: false})\n      // selectedFlyer should be {}\n      dispatch({type: constants.FLYER.SET_SELECTED_FLYER, payload: {}})\n        //redirect to manage\n        redirectCb(\"/manage\");\n\n    } catch(error) {\n      dispatch({type: constants.FLYER.SET_DELETING_FLYER_FAIL, payload: error.response.data.errors});\n    }\n  }\n}\n\nexport const setDeletedFlyer = (load:any) => {\n  return {\n    type: constants.FLYER.SET_DELETED_FLYER,\n    payload: load\n  };\n};\n\nexport const setUsingTemplate = (bool: boolean) => {\n  return {\n    type: constants.FLYER.SET_USING_TEMPLATE,\n    payload: bool\n  }\n}\n\n// export const setNewFlyer = (newFlyer: any) => {\n//   return {\n//     type: constants.FLYER.SET_NEW_FLYER,\n//     newFlyer: newFlyer\n//   };\n// };\n\n// export const removeFlyer = (flyerId: any) => {\n//   return {\n//     type: constants.FLYER.REMOVE_FLYER,\n//     flyerId: flyerId\n//   };\n// };\n\n\n\n","export * from './types'; \n\nexport * from './user';\nexport * from './location';\nexport * from './flyer';\n"],"sourceRoot":""}