{"version":3,"sources":["redux/actions/dummy.tsx","redux/actions/user.tsx","redux/actions/location.tsx","agent.ts","redux/constants/dummy.tsx","redux/constants/user.tsx","redux/constants/location.tsx","redux/constants/flyer.tsx","redux/constants/index.tsx","theme/globalStyles.js","components/Form/styled/index.js","utils/validate.tsx","components/SignIn/index.tsx","components/Register/index.tsx","components/Navigation/styled/index.js","components/Navigation/index.tsx","containers/Home/styled/index.js","utils/functions.tsx","components/Map/MapWithASearchBox.js","components/DeleteFlyerModal/index.tsx","components/FlyerListSlidePane/index.tsx","components/FlyerListByPlace/styled/index.js","components/FlyerListItem/styled/index.js","components/FlyerListItem/index.tsx","components/FlyerListByPlace/index.tsx","containers/Home/index.tsx","containers/MakeFlyer/index.tsx","containers/ViewFlyer/styled/index.js","components/PhotoView/styled/index.js","components/PhotoView/index.tsx","containers/ViewFlyer/index.tsx","containers/Manage/styled/index.js","containers/Manage/index.tsx","containers/EditFlyer/index.tsx","App.tsx","serviceWorker.ts","redux/reducers/dummy.tsx","redux/reducers/user.tsx","redux/reducers/location.tsx","redux/reducers/flyer.tsx","redux/root-reducer.tsx","configureStore.ts","index.tsx","theme/theme.js","redux/actions/index.tsx","redux/actions/flyer.tsx"],"names":["registerUser","fullName","email","password","dispatch","a","type","constants","USER","REGISTER_USER","axios","post","JSON","stringify","query","response","data","REGISTER_USER_SUCCESS","payload","agent","setSession","token","REGISTER_USER_FAIL","errors","getUserInfo","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","loginUser","console","log","logoutUser","clearSession","LOGOUT_USER","setIpLocation","ipLocation","LOCATION","SET_IP_LOCATION","setValidPlace","bool","SET_VALID_PLACE","setSelectedPlace","place","SET_SELECTED_PLACE","getPlaces","GET_PLACES","GET_PLACES_SUCCESS","GET_PLACES_ERROR","getSession","security_token","window","localStorage","getItem","defaults","headers","common","setItem","removeItem","DUMMY","ADD_DUMMY","FLYER","OPEN_FLYER_PANE","SET_FLYER_MADE","SET_MAKING_FLYER","SET_MAKING_FLYER_SUCCESS","SET_MAKING_FLYER_FAIL","SET_FLYERS","SET_FLYERS_SUCCESS","SET_FLYERS_FAIL","SET_SELECTED_FLYER","SET_WISH_TO_DELETE_FLYER","SET_DELETING_FLYER","SET_DELETED_FLYER","SET_DELETING_FLYER_SUCCESS","SET_DELETING_FLYER_FAIL","GlobalStyle","createGlobalStyle","FormWrapper","styled","section","InputGroup","div","theme","colors","green","CheckBoxContainer","validateEmail","trim","match","validateImage","str","indexOfPeriod","indexOf","slice","length","connect","state","user","modal","toggleModal","changeModalType","useState","setEmail","setPassword","setErrors","showPassword","setShowPassword","useEffect","loggingIn","Object","keys","currentUser","Modal","isOpen","toggle","className","ModalBody","map","error","message","renderErrors","onSubmit","e","errorsObj","errorItem","preventDefault","Label","for","Input","name","placeholder","value","onChange","target","required","minLength","maxLength","onClick","Button","color","block","disabled","Spinner","setFullName","confirmPassword","setConfirmPassword","registering","validateConfirmPassword","StyledNavigation","props","blue","logo","white","setIsOpen","setModal","modalType","setModalType","isLoggedIn","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","tag","Link","to","NavbarText","Fragment","Wrapper","HomeStyle","children","limitText","text","charLimit","getWindowWidth","w","innerWidth","IsEmptyObj","obj","MapWithASearchBox","compose","withProps","googleMapURL","process","loadingElement","style","height","containerElement","mapElement","lifecycle","componentWillMount","refs","this","setState","bounds","center","lat","location","lng","markers","onMapMounted","ref","onBoundsChanged","getBounds","getCenter","onSearchBoxMounted","searchBox","onPlacesChanged","places","checkPlaceValidity","selectedPlace","placeId","place_id","formatted_address","latlng","geometry","setOpenFlyerPane","google","maps","LatLngBounds","forEach","viewport","union","extend","nextMarkers","position","nextCenter","_","get","componentDidMount","componentDidUpdate","prevProps","prevState","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","controlPosition","marker","index","key","title","allPlaces","otherMarker","restructuredLatLng","parseFloat","formattedAddress","foundStreetNumber","address_components","types","flyerRedux","flyer","deleteFlyer","withRouter","history","idx","ModalFooter","selectedFlyer","push","reduxLocation","setFlyersInit","setWishToDeleteFlyer","manageMode","openFlyerPane","from","width","shouldCloseOnEsc","onRequestClose","wishToDeleteFlyer","FlyerListByPlaceStyle","FlyerListItemStyled","setSelectedFlyer","belongsToUser","heading","description","ButtonToolbar","size","stopPropagation","icon","faEdit","faTimes","reduxFlyer","getFlyersByPlace","determineIfBelongsToUser","_id","flyers","fetchingFlyers","ipWasSet","setIpWasSet","showMap","setShowMap","gettingLocation","setGettingLocation","navigator","geolocation","getCurrentPosition","ltlng","coords","latitude","longitude","setTimeout","validPlace","FlyerListSlidePane","outline","makeFlyer","setHeading","imgNum","setImgNum","img1","setImg1","img2","setImg2","setDescription","selectedEmail","setSelectedEmail","phoneSelected","setPhoneSelected","phone","setPhone","isUserLoggedIn","getSignedRequest","file","signS3","uploadFile","signedRequest","url","method","dir","test","images","flyerBody","id","files","fileChanged","rows","makingFlyer","ViewFyerStyled","PhotoViewStyle","PhotoView","selectedImage","setSelectedImage","img","src","moment","unix","createdAt","format","editable","contact","ManageStyled","getFlyersByUser","setDeletedFlyer","selectedLocationItem","setSelectedLocationItem","deletedFlyer","fetchingflyers","arrayOfPlaceId","flyerItem","includes","arrayOfPlacesWithAssociatedFlyers","placeItem","tempArr","item","handleItemClick","displayListByLocation","handleDeletePic","checked","dummy","exact","path","component","Home","MakeFlyer","ViewFlyer","Manage","EditFlyer","Boolean","hostname","defaultState","isDummy","initialState","gettingPlaces","flyerMade","deletingFlyer","combineReducers","action","middlewares","ReduxThunk","store","applyMiddleware","createStore","createStoreWithMiddleware","rootReducer","ReactDOM","render","StrictMode","blueLight","greenLight","textPrimary","textSecondary","spacers","mediaQueries","below425","below768","below1024","below1440","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","userId","redirectCb","load"],"mappings":"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","file":"static/js/main.b5bca56a.chunk.js","sourcesContent":["import constants from '../constants';\r\n\r\nexport interface IAddDummyAction {\r\n  type: typeof constants.DUMMY.ADD_DUMMY,\r\n  payload?:any\r\n}\r\n\r\nexport const add_dummy = ()=> {\r\n    return {\r\n      type: constants.DUMMY.ADD_DUMMY\r\n    }\r\n}\r\n\r\n","import axios from 'axios';\r\nimport {Dispatch} from 'redux';\r\n\r\nimport agent from '../../agent';\r\nimport constants from '../constants';\r\n\r\n//Interfaces\r\nexport interface IRegisterUserAction {\r\n  type: typeof constants.USER.REGISTER_USER,\r\n  payload?: any\r\n}\r\nexport interface IRegisterUserActionSuccess {\r\n  type: typeof constants.USER.REGISTER_USER_SUCCESS,\r\n  payload: any // #TODO - should be fleshed out with real response payload\r\n}\r\nexport interface IRegisterUserActionFail {\r\n  type: typeof constants.USER.REGISTER_USER_FAIL,\r\n  payload?:any\r\n}\r\nexport interface ILoginUserAction {\r\n  type: string,\r\n  payload?:any\r\n}\r\nexport interface ILoginUserActionSuccess {\r\n  type: string,\r\n  payload?:any\r\n}\r\nexport interface ILoginUserActionFail {\r\n  type: string,\r\n  payload?:any\r\n}\r\n\r\nexport const registerUser = (fullName: string, email: string, password: string) => {\r\n  return async (dispatch: Dispatch) => {\r\n    dispatch<IRegisterUserAction>({type: constants.USER.REGISTER_USER});\r\n    try {\r\n      const response = await axios.post(\"/graphql\", \r\n        JSON.stringify({\r\n          query: `\r\n            mutation {\r\n              registerUser(userInput: {name: \"${fullName}\", email: \"${email}\", password: \"${password}\"}) {\r\n                _id\r\n                name,\r\n                email,\r\n                token\r\n              }\r\n            }\r\n          `\r\n        }));\r\n      const {data:{data:{registerUser}}} = response;\r\n      dispatch<IRegisterUserActionSuccess>({\r\n        type: constants.USER.REGISTER_USER_SUCCESS,\r\n        payload: registerUser\r\n      });\r\n      //set session\r\n      agent.setSession(registerUser.token);\r\n\r\n    } catch (error) {\r\n      dispatch<IRegisterUserActionFail>({\r\n        type: constants.USER.REGISTER_USER_FAIL,\r\n        payload: error.response.data.errors\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const getUserInfo = () => {\r\n  return async (dispatch:Dispatch) => {\r\n    dispatch<IRegisterUserAction>({type: constants.USER.LOGIN_USER});\r\n    try {\r\n      const response = await axios.post(\"/graphql\", \r\n      JSON.stringify({\r\n        query: `\r\n          query {\r\n            getUserInfo {\r\n              _id\r\n              name,\r\n              email,\r\n              token\r\n            }\r\n          }\r\n        `\r\n      }));\r\n      const {data:{data:{getUserInfo}}} = response;\r\n      dispatch<ILoginUserActionSuccess>({\r\n        type: constants.USER.LOGIN_USER_SUCCESS,\r\n        payload: getUserInfo\r\n      });\r\n      //set session\r\n      agent.setSession(getUserInfo.token);\r\n\r\n    } catch(error) {\r\n      dispatch<ILoginUserActionFail>({\r\n        type: constants.USER.LOGIN_USER_FAIL,\r\n        payload: error.response.data.errors\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const loginUser = (email: string, password: string) => {\r\n  return async (dispatch:Dispatch) => {\r\n    dispatch<ILoginUserAction>({type: constants.USER.LOGIN_USER});\r\n    try {\r\n      const response = await axios.post(\"/graphql\", \r\n      JSON.stringify({\r\n        query: `\r\n          query {\r\n            loginUser(loginInput: {email: \"${email}\", password: \"${password}\"}) {\r\n              _id\r\n              name,\r\n              email,\r\n              token\r\n            }\r\n          }\r\n        `\r\n      }));\r\n      const {data:{data:{loginUser}}} = response;\r\n      dispatch<ILoginUserActionSuccess>({\r\n        type: constants.USER.LOGIN_USER_SUCCESS,\r\n        payload: loginUser\r\n      });\r\n      //set session\r\n      agent.setSession(loginUser.token);\r\n\r\n    } catch(error) {\r\n      console.log(\"error\",error.response)\r\n      dispatch<ILoginUserActionFail>({\r\n        type: constants.USER.LOGIN_USER_FAIL,\r\n        payload: error.response.data.errors\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n  agent.clearSession();\r\n  return {\r\n    type: constants.USER.LOGOUT_USER\r\n  }\r\n}","import constants from '../constants';\r\nimport axios from 'axios';\r\nimport { async } from 'q';\r\nimport { Dispatch } from 'redux';\r\n\r\n//Interfaces\r\nexport interface ISetIpLocationAction {\r\n    type: string,\r\n    payload?: any\r\n}\r\nexport interface ISetValidPlaceAction {\r\n    type: string,\r\n    payload?: any\r\n}\r\nexport interface ISetSelectedPlace {\r\n    type: string,\r\n    payload?: any\r\n}\r\n\r\nexport const setIpLocation = (ipLocation:{lat:number, lng:number}) => {\r\n    return {\r\n        type: constants.LOCATION.SET_IP_LOCATION,\r\n        payload: ipLocation\r\n    }\r\n}\r\n\r\nexport const setValidPlace = (bool:boolean) => {\r\n    return {\r\n        type: constants.LOCATION.SET_VALID_PLACE,\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const setSelectedPlace = (place:any) => {\r\n    return {\r\n        type: constants.LOCATION.SET_SELECTED_PLACE,\r\n        payload: place\r\n    }\r\n}\r\n\r\nexport const getPlaces = () => {\r\n    return async(dispatch: Dispatch) => {\r\n        dispatch({type: constants.LOCATION.GET_PLACES})\r\n        try {\r\n            const response = await axios.post(\r\n                \"/graphql\",\r\n                JSON.stringify({\r\n                    query: `\r\n                        query {\r\n                            getPlaces {\r\n                                _id\r\n                                place_id\r\n                                name\r\n                                formattedAddress\r\n                                latlng {\r\n                                    lat\r\n                                    lng\r\n                                }\r\n                            }\r\n                        } \r\n                    `\r\n                })\r\n            );\r\n            const {data:{data:{getPlaces}}} = response;\r\n            dispatch({type: constants.LOCATION.GET_PLACES_SUCCESS, payload:getPlaces})\r\n\r\n        } catch(error) {\r\n            dispatch({type: constants.LOCATION.GET_PLACES_ERROR, payload:error.response.data.errors})\r\n        }\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst setSession = (security_token: string) => {\r\n  window.localStorage.setItem(\"jwt\", security_token);\r\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${security_token}`;\r\n  axios.defaults.headers.post['Content-Type'] = \"application/json\";\r\n}\r\nconst getSession = ():string|null => {\r\n  let security_token:string|null = window.localStorage.getItem(\"jwt\");\r\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${security_token}`;\r\n  axios.defaults.headers.post['Content-Type'] = \"application/json\";\r\n  return security_token;\r\n}\r\nconst clearSession = () => {\r\n  window.localStorage.removeItem(\"jwt\");\r\n  axios.defaults.headers.common[\"Authorization\"] = \"\";\r\n}\r\n\r\ngetSession();\r\n\r\nexport default {\r\n  setSession,\r\n  getSession,\r\n  clearSession\r\n}","const DUMMY = {\r\n  ADD_DUMMY: \"ADD_DUMMY\"\r\n}\r\n\r\nexport default DUMMY;","const USER = {\r\n  REGISTER_USER: \"REGISTER_USER\",\r\n  REGISTER_USER_SUCCESS: \"REGISTER_USER_SUCCESS\",\r\n  REGISTER_USER_FAIL: \"REGISTER_USER_FAIL\",\r\n  LOGIN_USER:\"LOGIN_USER\",\r\n  LOGIN_USER_SUCCESS:\"LOGIN_USER_SUCCESS\",\r\n  LOGIN_USER_FAIL:\"LOGIN_USER_FAIL\",\r\n  LOGOUT_USER:\"LOGOUT_USER\"\r\n}\r\n\r\nexport default USER;","const LOCATION = {\r\n    SET_IP_LOCATION:\"SET_IP_LOCATION\",\r\n    SET_VALID_PLACE: \"SET_VALID_PLACE\",\r\n    SET_SELECTED_PLACE: \"SET_SELECTED_PLACE\",\r\n    GET_PLACES: \"GET_PLACES\",\r\n    GET_PLACES_SUCCESS: \"GET_PLACES_SUCCESS\",\r\n    GET_PLACES_ERROR: \"GET_PLACES_ERROR\"\r\n}\r\n\r\nexport default LOCATION;","const FLYER = {\r\n    OPEN_FLYER_PANE:\"OPEN_FLYER_PANE\",\r\n    SET_FLYER_MADE:\"SET_FLYER_MADE\",\r\n    SET_MAKING_FLYER:\"SET_MAKING_FLYER\",\r\n    SET_MAKING_FLYER_SUCCESS:\"SET_MAKING_FLYER_SUCCESS\",\r\n    SET_MAKING_FLYER_FAIL:\"SET_MAKING_FLYER_FAIL\",\r\n    SET_FLYERS:\"SET_FLYERS\",\r\n    SET_FLYERS_SUCCESS:\"SET_FLYERS_SUCCESS\",\r\n    SET_FLYERS_FAIL:\"SET_FLYERS_FAIL\",\r\n    SET_SELECTED_FLYER: \"SET_SELECTED_FLYER\",\r\n    SET_WISH_TO_DELETE_FLYER: \"SET_WISH_TO_DELETE_FLYER\",\r\n    SET_DELETING_FLYER:\"SET_DELETING_FLYER\",\r\n    SET_DELETED_FLYER:\"SET_DELETED_FLYER\",\r\n    SET_DELETING_FLYER_SUCCESS:\"SET_DELETING_FLYER_SUCCESS\",\r\n    SET_DELETING_FLYER_FAIL:\"SET_DELETING_FLYER_FAIL\"\r\n}\r\n\r\nexport default FLYER;","import DUMMY from './dummy';\r\nimport USER from './user';\r\nimport LOCATION from './location';\r\nimport FLYER from './flyer';\r\n\r\nexport default {\r\n  DUMMY,\r\n  USER,\r\n  LOCATION,\r\n  FLYER\r\n}","import {createGlobalStyle} from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    height: 100%;\r\n    /*background-color: red;*/\r\n  }\r\n  * {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n\r\n  /*Button colors override  */\r\n  .btn-primary {\r\n    background-color: #4CAD98;\r\n    border-color: #4CAD98;\r\n  }\r\n  .btn-primary:hover {\r\n    backgrond-color: #61FAD9;\r\n  }\r\n\r\n  .btn-secondary {\r\n    background-color: #61FAD9;\r\n    border-color: #61FAD9;\r\n  }\r\n\r\n  .link {\r\n    cursor: pointer;\r\n    color: #2A3DAD;\r\n  }\r\n\r\n  .slide-pane__header {\r\n    background: #4863FA;\r\n    color: #ffffff;\r\n  }\r\n\r\n  // Animations\r\n  @keyframes blueToLightBlue {\r\n    0% {\r\n      border-top-color: #FAB156\r\n    }\r\n\r\n    50% {\r\n      border-top-color: #4863FA\r\n    }\r\n\r\n    100% {\r\n      border-top-color: #FAB156\r\n    }\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const FormWrapper = styled.section`\r\n  max-width: 600px;\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n  width: 100%;  \r\n  margin-bottom: 20px;\r\n\r\n  & label {\r\n    display: block;\r\n  }\r\n  & input {\r\n    width: 100%;\r\n  }\r\n  & .password-container {\r\n    position: relative;\r\n    &__show {\r\n      position: absolute;\r\n      right: 10px;\r\n      top: 6px;\r\n      color: ${({theme})=>theme.colors.green};\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CheckBoxContainer = styled.div`\r\n  display: flex;\r\n\r\n  .CheckBoxItem {\r\n    display: inline-block;\r\n\r\n    .form-check-input {\r\n      width: 25px;\r\n      position: unset;\r\n      margin-top: unset;\r\n      margin-left: unset;\r\n    }\r\n  }\r\n`;","\r\nexport const validateEmail = (email: string):string => {\r\n  if (!email.trim().match(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)) {\r\n    return \"Not a Valid Email\";\r\n  }\r\n  return \"\"\r\n}\r\n\r\nexport const validateConfirmPassword = (password: string, confirmPassword: string): string => {\r\n  if(password.trim() !== confirmPassword.trim()) {\r\n    return \"Passwords do not match. Check your typing.\";\r\n  }\r\n  return \"\";\r\n}\r\n\r\nexport const validateImage = (str:string): boolean => {\r\n  const indexOfPeriod = str.indexOf('.');\r\n  const fileType = str.slice(indexOfPeriod+ 1, str.length);\r\n  switch (fileType) {\r\n      case 'png':\r\n      case 'PNG':\r\n          return true;\r\n      case 'jpg':\r\n      case 'JPG':\r\n          return true;\r\n      case 'jpeg': \r\n      case 'JPEG':\r\n          return true;\r\n      case 'gif':\r\n      case 'GIF':\r\n          return true;\r\n      default:\r\n          return false;      \r\n  }\r\n}","import React, { useState, useEffect, FormEvent } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport { Modal, ModalBody, Input, Label, Button, Spinner } from \"reactstrap\";\r\n\r\nimport { FormWrapper, InputGroup } from \"../Form/styled\";\r\nimport { validateEmail } from \"../../utils/validate\";\r\n\r\nimport {loginUser} from '../../redux/actions';\r\nimport {StoreState} from '../../redux/root-reducer';\r\n\r\nexport interface SignInProps {\r\n  modal: boolean,\r\n  toggleModal: any,\r\n  changeModalType: any,\r\n  loginUser: Function,\r\n  user: any\r\n}\r\nexport interface ILoginErrors {\r\n  [key: string]: any;\r\n}\r\n \r\nconst SignIn: React.SFC<SignInProps> = ({\r\n  modal,\r\n  toggleModal,\r\n  changeModalType,\r\n  loginUser,\r\n  user\r\n}) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errors, setErrors] = useState({\r\n    email: \"\"\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    const errorsObj: any = { ...errors };\r\n    e.preventDefault();\r\n    errorsObj.email = validateEmail(email);\r\n\r\n    //set the state's errors object\r\n    setErrors(errorsObj);\r\n    //check if any errors exist, don't submit form if errors\r\n    for (let errorItem in errorsObj) {\r\n      if (errorsObj[errorItem] !== \"\") {\r\n        return;\r\n      }\r\n    }\r\n    // at this point it passed validation, \r\n    // set loading state true\r\n    // make graphQL call\r\n    loginUser( email, password);\r\n  };\r\n\r\n  useEffect(()=> {\r\n    //#Todo - If user.registering is true -> show a loader\r\n    if(user.loggingIn ===false && Object.keys(user.currentUser).length>0 && modal===true) {\r\n      //close modal\r\n      console.log('called')\r\n      toggleModal();\r\n    }\r\n  }, [user])\r\n\r\n  const renderErrors = () => {\r\n    if(user.errors) {\r\n      return user.errors.map((error:any) => {\r\n        return <p className=\"text-danger\">{error.message}</p>\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={modal} toggle={toggleModal} className=\"sign-in-modal\">\r\n      <ModalBody>\r\n        {user.loggingIn?\r\n          <p>Loading ...</p>\r\n          :\r\n          <h3 className=\"text-center\">Login</h3>\r\n        }\r\n        <FormWrapper>\r\n          {renderErrors()}\r\n          <form onSubmit={handleSubmit}>\r\n            <InputGroup>\r\n              {errors.email && <p className=\"text-danger\">{errors.email}</p>}\r\n              <Label for=\"email\">Email</Label>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"you@example.com\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <Label for=\"password\">Password</Label>\r\n              <div className=\"password-container\">\r\n                <Input\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  minLength={8}\r\n                  maxLength={20}\r\n                  required\r\n                />\r\n                <span \r\n                  className=\"password-container__show\"\r\n                  onClick={() => setShowPassword(!showPassword)}>\r\n                  {showPassword ? \"Hide\" : \"Show\"}\r\n                </span>\r\n              </div>\r\n            </InputGroup>\r\n            <Button \r\n              color=\"primary\" \r\n              type=\"submit\" \r\n              block\r\n              disabled={user.loggingIn? true:false}\r\n            >\r\n              {user.loggingIn?\r\n                  <Spinner color=\"light\"></Spinner>\r\n              :\r\n              \"SignIn\"\r\n              }\r\n            </Button>\r\n          </form>\r\n        </FormWrapper>\r\n        <div className=\"switch-form text-center\">\r\n          <p>\r\n            Don't have an account?{\" \"}\r\n            <span \r\n              onClick={() => changeModalType(\"register\")}\r\n              className=\"link\"\r\n            >Register</span>\r\n          </p>\r\n        </div>\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n  loginUser\r\n})(SignIn);","import React, { useState, useEffect, FormEvent } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport { Modal, ModalBody, Input, Label, Button, Spinner } from \"reactstrap\";\r\n\r\nimport { FormWrapper, InputGroup } from \"../Form/styled\";\r\nimport { validateEmail, validateConfirmPassword } from \"../../utils/validate\";\r\n\r\nimport {registerUser} from '../../redux/actions';\r\nimport {StoreState} from '../../redux/root-reducer';\r\n\r\nexport interface RegisterProps {\r\n  modal: boolean;\r\n  toggleModal: any;\r\n  changeModalType: any;\r\n  registerUser: Function;\r\n  user: any;\r\n}\r\nexport interface IRegisterErrors {\r\n  [key: string]: any;\r\n}\r\n\r\nconst Register: React.SFC<RegisterProps> = ({\r\n  modal,\r\n  toggleModal,\r\n  changeModalType,\r\n  registerUser,\r\n  user\r\n}) => {\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [errors, setErrors] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    const errorsObj: any = { ...errors };\r\n    e.preventDefault();\r\n    errorsObj.email = validateEmail(email);\r\n    errorsObj.confirmPassword = validateConfirmPassword(\r\n      password,\r\n      confirmPassword\r\n    );\r\n    //set the state's errors object\r\n    setErrors(errorsObj);\r\n    //check if any errors exist, don't submit form if errors\r\n    for (let errorItem in errorsObj) {\r\n      if (errorsObj[errorItem] !== \"\") {\r\n        return;\r\n      }\r\n    }\r\n    // at this point it passed validation, \r\n    // set loading state true\r\n    // make graphQL call\r\n    registerUser(fullName, email, password);\r\n    \r\n  };\r\n\r\n  useEffect(()=> {\r\n    //#Todo - If user.registering is true -> show a loader\r\n    if(user.registering ===false && Object.keys(user.currentUser).length>0 && modal===true) {\r\n      //close modal\r\n      toggleModal();\r\n    }\r\n  }, [user])\r\n\r\n  const renderErrors = () => {\r\n    if(user.errors) {\r\n      return user.errors.map((error:any) => {\r\n        return <p className=\"text-danger\">{error.message}</p>\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={modal} toggle={toggleModal} className=\"sign-in-modal\">\r\n      <ModalBody>\r\n        <h3 className=\"text-center\">Register</h3>\r\n        <FormWrapper>\r\n          {renderErrors()}\r\n          <form onSubmit={handleSubmit}>\r\n            <InputGroup>\r\n              <Label for=\"full_name\">Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"full_name\"\r\n                placeholder=\"Joe Smith\"\r\n                value={fullName}\r\n                onChange={(e) => setFullName(e.target.value)}\r\n                required\r\n              />\r\n            </InputGroup>\r\n            <InputGroup>\r\n              {errors.email && <p className=\"text-danger\">{errors.email}</p>}\r\n              <Label for=\"email\">Email</Label>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"you@example.com\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <Label for=\"password\">Password</Label>\r\n              <div className=\"password-container\">\r\n                <Input\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  minLength={8}\r\n                  maxLength={20}\r\n                  required\r\n                />\r\n                <span \r\n                  className=\"password-container__show\"\r\n                  onClick={() => setShowPassword(!showPassword)}>\r\n                  {showPassword ? \"Hide\" : \"Show\"}\r\n                </span>\r\n              </div>\r\n            </InputGroup>\r\n            <InputGroup>\r\n              {errors.confirmPassword && (\r\n                <p className=\"text-danger\">{errors.confirmPassword}</p>\r\n              )}\r\n              <Label for=\"confirm_password\">Confirm Password</Label>\r\n              <Input\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                name=\"confirm_password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                minLength={8}\r\n                maxLength={20}\r\n                required\r\n              />\r\n            </InputGroup>\r\n            <Button \r\n              color=\"primary\" \r\n              type=\"submit\" \r\n              block\r\n              disabled={user.registering? true:false}\r\n            >\r\n              {user.registering?\r\n                  <Spinner color=\"light\"></Spinner>\r\n              :\r\n              \"Register\"\r\n              }\r\n            </Button>\r\n          </form>\r\n        </FormWrapper>\r\n        <div className=\"switch-form text-center\">\r\n          <p>\r\n            Already have an account?{\" \"}\r\n            <span \r\n              onClick={() => changeModalType(\"signin\")}\r\n              className=\"link\"\r\n            >Signin</span>\r\n          </p>\r\n        </div>\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  user: state.user\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {registerUser}\r\n)(Register);\r\n","import styled, {css} from 'styled-components';\r\n\r\nconst StyledNavigation = styled.div`\r\n  .navbar {\r\n    background-color: ${props=>props.theme.colors.blue};\r\n  }\r\n  & .navbar-brand {\r\n    color: ${props=>props.theme.colors.logo};\r\n    font-size: 1.6rem;\r\n  }\r\n .navbar-light .navbar-nav .nav-item .nav-link {\r\n    color: ${props=>props.theme.colors.white} !important;\r\n  }\r\n`;\r\n\r\nexport default StyledNavigation;","import React, {useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Button\r\n} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport SignIn from '../SignIn';\r\nimport Register from '../Register';\r\n\r\nimport StyledNavigation from './styled';\r\n// types\r\nimport user, {IUser} from '../../redux/reducers/user';\r\nimport {StoreState} from '../../redux/root-reducer';\r\n\r\nimport {logoutUser} from \"../../redux/actions\";\r\n\r\nexport interface NavigationProps {\r\n  user: IUser,\r\n  logoutUser: Function\r\n}\r\n \r\nconst Navigation: React.SFC<NavigationProps> = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [modalType, setModalType] = useState('signin');// can also be 'register'\r\n\r\n  const toggleCollapse = () => setIsOpen(!isOpen);\r\n  const toggleModal = () => setModal(!modal);\r\n\r\n  const isLoggedIn = ():boolean => {\r\n    return Object.keys(props.user.currentUser).length>0;\r\n  }\r\n\r\n  return ( \r\n    <StyledNavigation>\r\n      <Navbar light expand=\"md\">\r\n        <NavbarBrand href=\"/\">Noticely</NavbarBrand>\r\n        {/* <NavbarBrand href=\"/\"><img src={require(\"../../Logo.png\")} /></NavbarBrand> */}\r\n        <NavbarToggler onClick={toggleCollapse} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/\">Home</NavLink>\r\n              </NavItem>\r\n            {isLoggedIn() &&\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/manage\">Manage</NavLink>\r\n              </NavItem>            \r\n            }\r\n          </Nav>\r\n          <NavbarText>\r\n            {isLoggedIn()? (\r\n              <React.Fragment>\r\n                <Button color=\"primary\" onClick={()=>props.logoutUser()}>Logout</Button>\r\n              </React.Fragment>\r\n            )\r\n              :\r\n              <Button color=\"primary\" onClick={()=>toggleModal()}>Sign In</Button>\r\n            }\r\n            {modalType==='signin'? \r\n              <SignIn modal={modal} toggleModal={toggleModal} changeModalType={setModalType} /> \r\n              :\r\n              <Register modal={modal} toggleModal={toggleModal} changeModalType={setModalType} />\r\n            }\r\n          </NavbarText>\r\n        </Collapse>\r\n      </Navbar>\r\n    </StyledNavigation>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state:StoreState) => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps ,{\r\n  logoutUser\r\n})(Navigation);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.section`\r\n\r\n    & .MapContainer {\r\n        \r\n    } \r\n\r\n    & .BtnControls {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: baseline;\r\n        margin-bottom: 20px;\r\n        width: 100%;\r\n    }\r\n\r\n    & .about {\r\n        margin-top: 20px;\r\n        border: 1px solid #ccc;\r\n        padding: 1rem;\r\n        background-color: #eee;\r\n\r\n        li {\r\n            list-style: none;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const HomeStyle = ({children}) => {\r\n    return (\r\n    <Wrapper>\r\n        {children}\r\n    </Wrapper>\r\n    )\r\n};","export const limitText = (text:string, charLimit:number) => {\r\n    if(text.length >= charLimit) {\r\n        return text.slice(0, charLimit) + \"...\";\r\n    } else {\r\n        return text;\r\n    }\r\n}\r\n\r\n  //slidepanel comp needs proper width based on windowwidth\r\nexport const getWindowWidth = () => {\r\n    let w = window.innerWidth;\r\n    if (w > 768) {\r\n      return \"50%\";\r\n    } else if (w <= 768 && w > 425) {\r\n      return \"70%\";\r\n    } else if (w <= 425) {\r\n      return \"90%\";\r\n    }\r\n  };\r\n\r\nexport const IsEmptyObj = (obj:any):boolean => {\r\n  return Object.keys(obj).length === 0;\r\n}","/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport _ from \"lodash\";\r\nimport { compose, withProps, lifecycle } from \"recompose\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow\r\n} from \"react-google-maps\";\r\nimport  SearchBox from \"react-google-maps/lib/components/places/SearchBox\";\r\nimport { connect } from 'react-redux';\r\nimport {setSelectedPlace, setValidPlace, setOpenFlyerPane, getPlaces} from '../../redux/actions';\r\nimport './Map.css';\r\nimport { Spinner } from 'reactstrap';\r\nimport {IsEmptyObj} from '../../utils/functions';\r\n\r\nconst MapWithASearchBox = compose(\r\n  withProps({\r\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAPS_KEY}&v=3&libraries=geometry,drawing,places`,\r\n    loadingElement: <div style={{ height: `100%` }}><Spinner color=\"success\"></Spinner></div>,\r\n    containerElement: <div style={{ height: `400px` }} />,\r\n    mapElement: <div style={{ height: `100%` }} />,\r\n  }),\r\n  lifecycle({\r\n    componentWillMount() {\r\n      const refs = {}\r\n\r\n      this.setState({\r\n        bounds: null,\r\n        center: {\r\n          lat: this.props.location.ipLocation.lat, \r\n          lng: this.props.location.ipLocation.lng\r\n        },\r\n        markers: [],\r\n        onMapMounted: ref => {\r\n          refs.map = ref;\r\n        },\r\n        onBoundsChanged: () => {\r\n          this.setState({\r\n            bounds: refs.map.getBounds(),\r\n            center: refs.map.getCenter(),\r\n          })\r\n        },\r\n        onSearchBoxMounted: ref => {\r\n          refs.searchBox = ref;\r\n        },\r\n        onPlacesChanged: () => {\r\n\r\n          const places = refs.searchBox.getPlaces();\r\n          console.log('places', places);\r\n          // ******** Check Validity of Place\r\n          if( !checkPlaceValidity(places, this.props) ) {\r\n              return;\r\n          }\r\n           // ******* Set selected place\r\n          const selectedPlace = {\r\n              placeId: places[0].place_id,\r\n              formatted_address: places[0].formatted_address,\r\n              name: places[0].name,\r\n              latlng: {\r\n                lat: places[0].geometry.location.lat(),\r\n                lng: places[0].geometry.location.lng()\r\n              }\r\n          }\r\n\r\n          this.props.setSelectedPlace(selectedPlace);\r\n          // action to open place slider\r\n          this.props.setOpenFlyerPane(true);\r\n\r\n          const bounds = new google.maps.LatLngBounds();\r\n\r\n          places.forEach(place => {\r\n            if (place.geometry.viewport) {\r\n              bounds.union(place.geometry.viewport)\r\n            } else {\r\n              bounds.extend(place.geometry.location)\r\n            }\r\n          });\r\n          const nextMarkers = places.map(place => ({\r\n            position: place.geometry.location,\r\n          }));\r\n          const nextCenter = _.get(nextMarkers, '0.position', this.state.center);\r\n          console.log(\"markers\", this.state.markers)\r\n          console.log(\"nextmarkers\", nextMarkers)\r\n          this.setState({\r\n            center: nextCenter,\r\n            markers: nextMarkers,\r\n          });\r\n          // refs.map.fitBounds(bounds);\r\n        },        \r\n      })\r\n    },\r\n    componentDidMount() {\r\n      //go fetch all places\r\n      this.props.getPlaces();\r\n    },\r\n    componentDidUpdate(prevProps,prevState) {\r\n      // if(!prevProps.location.gettingPlaces && this.props.location.gettingPlaces && this.props.location.allPlaces.length > 0) {\r\n      //   console.log(\"reaches here\")\r\n      //   this.setState({markers: [ ...this.props.location.allPlaces]})\r\n      // }\r\n      console.log('reched before')\r\n      if(prevProps.location.selectedPlace !==null &&\r\n        !IsEmptyObj(prevProps.location.selectedPlace) && \r\n        this.props.location.selectedPlace===null) \r\n        {\r\n        //force update\r\n        console.log('reached here')\r\n        this.setState({state: this.state});\r\n      }\r\n    }\r\n  }),\r\n  withScriptjs,\r\n  withGoogleMap\r\n)(props =>\r\n  <GoogleMap\r\n    ref={props.onMapMounted}\r\n    defaultZoom={12}\r\n    defaultCenter={props.center}\r\n    onBoundsChanged={props.onBoundsChanged}\r\n    className={\"Map\"}\r\n  >\r\n    <SearchBox\r\n      ref={props.onSearchBoxMounted}\r\n      bounds={props.bounds}\r\n      //controlPosition={google.maps.ControlPosition.TOP_RIGHT}\r\n      controlPosition={2}\r\n      onPlacesChanged={props.onPlacesChanged}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search location for flyers\"\r\n        className={\"Map_Input\"}\r\n      />\r\n    </SearchBox>\r\n    {props.markers.map((marker, index) => {\r\n      console.log(\"props\", props);\r\n      return <Marker \r\n        key={index} \r\n        position={marker.position} \r\n        title={marker.name}\r\n        onClick={()=> {\r\n            props.onPlacesChanged()\r\n            props.setOpenFlyerPane(true)\r\n        }}\r\n        >\r\n        </Marker>\r\n\r\n    }\r\n    )}\r\n    {/* For other markers */}\r\n    {props.location.allPlaces.map((otherMarker, index) => {\r\n      let restructuredLatLng = {\r\n        lat: parseFloat(otherMarker.latlng.lat),\r\n        lng: parseFloat(otherMarker.latlng.lng)\r\n      }\r\n      const selectedPlace = {\r\n        placeId: otherMarker.place_id,\r\n        formatted_address: otherMarker.formattedAddress,\r\n        name: otherMarker.name,\r\n        latlng: {\r\n          lat: parseFloat(otherMarker.latlng.lat),\r\n          lng: parseFloat(otherMarker.latlng.lng)\r\n        }\r\n      }\r\n      return <Marker \r\n        key={index} \r\n        position={restructuredLatLng} \r\n        title={otherMarker.name}\r\n        onClick={()=> {\r\n          props.setSelectedPlace(selectedPlace);\r\n          props.setOpenFlyerPane(true)\r\n        }}\r\n        >\r\n        </Marker>\r\n    }\r\n    )}\r\n  </GoogleMap>\r\n);\r\n\r\nconst checkPlaceValidity = (places, props) => {\r\n    let foundStreetNumber = false;\r\n    //typed in a made up address\r\n    if(places.length===0 || !places[0].address_components) {\r\n        props.setValidPlace(false);\r\n        return false;\r\n    }\r\n\r\n    for (let c of places[0].address_components) {\r\n        if (c.types[0] === 'street_number') {\r\n            foundStreetNumber = true;\r\n        }\r\n    }\r\n\r\n    if (foundStreetNumber) {\r\n        // set validPlace on locationRedux ot true\r\n        props.setValidPlace(true);\r\n        return true;\r\n    } else {\r\n        props.setValidPlace(false);\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        location: state.location,\r\n        //userRedux: state.userRedux,\r\n        flyerRedux: state.flyerRedux\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    setValidPlace,\r\n    setSelectedPlace,\r\n    setOpenFlyerPane,\r\n    getPlaces\r\n})(MapWithASearchBox);","import React from 'react';\r\nimport { Modal, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { StoreState } from '../../redux/root-reducer';\r\nimport { IFlyer } from '../../redux/reducers/flyer';\r\nimport {deleteFlyer} from '../../redux/actions';\r\nimport { RouterProps } from 'react-router';\r\n\r\nexport interface DeleteFlyerModalProps extends RouteComponentProps {\r\n    modal: boolean,\r\n    toggleModal: any,\r\n    flyer: IFlyer,\r\n    deleteFlyer: any,\r\n    manageMode?: boolean\r\n}\r\n \r\nconst DeleteFlyerModal: React.SFC<DeleteFlyerModalProps> = ({\r\n    modal,\r\n    toggleModal,\r\n    flyer,\r\n    deleteFlyer,\r\n    history\r\n}) => {\r\n\r\n    const renderErrors = () => {\r\n        if(flyer.errors) {\r\n            return flyer.errors.map((error:any, idx:number) => {\r\n            return <p key={idx} className=\"text-danger\">{error.message}</p>\r\n            })\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <Modal isOpen={modal} toggle={toggleModal}>\r\n            <ModalBody>\r\n                <p>Are you sure you want to delete this flyer?</p>\r\n                {flyer.errors && renderErrors()}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button \r\n                    color=\"primary\" \r\n                    onClick={()=> {\r\n                        deleteFlyer(flyer.selectedFlyer, history.push);\r\n                    }}\r\n                >Yes</Button>{' '}\r\n                <Button color=\"secondary\" onClick={()=>toggleModal(false)}>No</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n     );\r\n}\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n    flyer: state.flyer\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    deleteFlyer\r\n})(withRouter(DeleteFlyerModal));","import React from 'react';\r\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\r\nimport SlidingPane from 'react-sliding-pane';\r\nimport {connect} from 'react-redux';\r\n\r\nimport { StoreState } from \"../../redux/root-reducer\";\r\nimport { ILocation } from '../../redux/reducers/location';\r\nimport { IFlyer } from '../../redux/reducers/flyer';\r\nimport {  \r\n    setSelectedPlace,\r\n    setFlyersInit,\r\n    setOpenFlyerPane,\r\n    setWishToDeleteFlyer\r\n} from '../../redux/actions';\r\nimport {getWindowWidth} from '../../utils/functions';\r\n\r\nimport DeleteFlyerModal from '../DeleteFlyerModal';\r\n\r\nexport interface FlyerListSlidepaneProps {\r\n    reduxLocation: ILocation,\r\n    flyer: IFlyer,\r\n    setSelectedPlace: any,\r\n    setFlyersInit: any,\r\n    setWishToDeleteFlyer: any,\r\n    setOpenFlyerPane: any,\r\n    children: any,\r\n    manageMode?: boolean\r\n}\r\n \r\nconst FlyerListSlidepane: React.SFC<FlyerListSlidepaneProps> = ({\r\n    children,\r\n    setSelectedPlace,\r\n    setFlyersInit,\r\n    setOpenFlyerPane,\r\n    setWishToDeleteFlyer,\r\n    flyer,\r\n    reduxLocation,\r\n    manageMode\r\n}) => {\r\n\r\n    return ( \r\n        <div>\r\n            <SlidingPane \r\n                isOpen={flyer.openFlyerPane}\r\n                from=\"left\"\r\n                width={getWindowWidth()}\r\n                title={`${((reduxLocation||{}).selectedPlace||{}).name||\"\"}`}\r\n                shouldCloseOnEsc\r\n                onRequestClose={() => {\r\n                    if(!manageMode) {\r\n                        setFlyersInit([]);\r\n                    }\r\n                    setOpenFlyerPane(false);\r\n                    setSelectedPlace(null);\r\n                }}\r\n            >\r\n                {children}\r\n            </SlidingPane>\r\n            <DeleteFlyerModal modal={flyer.wishToDeleteFlyer} toggleModal={setWishToDeleteFlyer} />\r\n        </div>\r\n     );\r\n}\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n    reduxLocation: state.location,\r\n    flyer: state.flyer,\r\n})\r\nexport default connect(mapStateToProps, {\r\n    setSelectedPlace,\r\n    setFlyersInit,\r\n    setOpenFlyerPane,\r\n    setWishToDeleteFlyer\r\n})(FlyerListSlidepane);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.section`\r\n    height: 80%;\r\n    min-height: 500px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nexport const FlyerListByPlaceStyle = ({children}) => {\r\n    return <Wrapper>\r\n        {children}\r\n    </Wrapper>\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.section`\r\n    & .flyer-list-item-wrapper {\r\n        width: 80%;\r\n        padding: 20px;\r\n        border: 1px solid #ccc;\r\n        border-radius: 5px;\r\n        margin-bottom: 25px;\r\n        border-top: 10px solid #FAB156;\r\n        transition: all .3s;\r\n    }\r\n    & .flyer-list-item-wrapper.belongsToUser{\r\n        animation-name: blueToLightBlue;\r\n        animation-iteration-count: infinite;\r\n        animation-duration: 2s;\r\n    }\r\n\r\n    & .flyer-list-item-wrapper:hover {\r\n        cursor: pointer;\r\n        box-shadow: 6px 6px 14px 2px rgba(0,0,0,0.75);\r\n        transform: translateX(6px);\r\n        border-top: 10px solid #4CAD98;\r\n    }\r\n    & .flyer-controls {\r\n        justify-content: flex-end;\r\n\r\n        .btn {\r\n            margin-left: 10px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst FlyerListItemStyled = ({children}) => {\r\n    return <Wrapper>{children}</Wrapper>\r\n}\r\n\r\nexport default FlyerListItemStyled;","import React from 'react';\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\nimport {ButtonToolbar, Button} from 'reactstrap';\r\nimport {FontAwesomeIcon, FontAwesomeIconProps} from '@fortawesome/react-fontawesome';\r\nimport {faTimes, faEdit} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport FlyerListItemStyle from './styled/index';\r\nimport { IFlyer } from '../../redux/reducers/flyer';\r\nimport { setSelectedFlyer, setWishToDeleteFlyer } from '../../redux/actions';\r\n\r\nimport {limitText} from '../../utils/functions';\r\n\r\nexport interface FlyerListItemProps extends RouteComponentProps {\r\n    flyer: any,\r\n    belongsToUser: boolean,\r\n    setSelectedFlyer: any,\r\n    setWishToDeleteFlyer: any,\r\n    history: any\r\n}\r\n \r\nconst FlyerListItem: React.SFC<FlyerListItemProps> = ({\r\n    flyer,\r\n    belongsToUser,\r\n    setSelectedFlyer,\r\n    setWishToDeleteFlyer,\r\n    history\r\n}) => {\r\n\r\n    const handleClick = () => {\r\n        // set selected flyer\r\n        setSelectedFlyer(flyer)\r\n        // redirect to flyer view\r\n        history.push('/view-flyer');\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        // set selected flyer\r\n        setSelectedFlyer(flyer);\r\n        setWishToDeleteFlyer(true)\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        setSelectedFlyer(flyer);\r\n        history.push(\"/edit-flyer\");\r\n    }\r\n\r\n    return ( \r\n        <FlyerListItemStyle>\r\n            <div className={`flyer-list-item-wrapper ${belongsToUser?\"belongsToUser\":\"\"}`} onClick={handleClick} >\r\n                <h3>{flyer.heading}</h3>\r\n                <p>{limitText(flyer.description, 49)}</p>\r\n                {belongsToUser && (\r\n                <React.Fragment>\r\n                    <hr/>\r\n                    <ButtonToolbar className=\"flyer-controls\">\r\n                        <Button\r\n                            color=\"warning\"\r\n                            size=\"sm\"\r\n                            onClick={(e)=>{\r\n                                e.stopPropagation();\r\n                                handleEdit()\r\n                            }}\r\n                        >\r\n                            <FontAwesomeIcon icon={faEdit} />\r\n                        </Button>\r\n                        <Button\r\n                            color=\"danger\"\r\n                            size=\"sm\"\r\n                            onClick={(e)=>{\r\n                                e.stopPropagation();\r\n                                handleDelete();\r\n                            } }\r\n                        >\r\n                            {\" \"}<FontAwesomeIcon icon={faTimes} />{\" \"}\r\n                        </Button>\r\n                    </ButtonToolbar>\r\n                </React.Fragment>\r\n                )}\r\n            </div>\r\n        </FlyerListItemStyle>\r\n    );\r\n}\r\n \r\nexport default connect( null,{\r\n    setSelectedFlyer,\r\n    setWishToDeleteFlyer\r\n})(withRouter(FlyerListItem));","import React, {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Spinner} from 'reactstrap';\r\n\r\nimport {FlyerListByPlaceStyle} from './styled';\r\nimport { StoreState } from '../../redux/root-reducer';\r\nimport {ILocation} from '../../redux/reducers/location';\r\nimport { IFlyer } from '../../redux/reducers/flyer';\r\nimport {getFlyersByPlace} from '../../redux/actions/flyer';\r\nimport FlyerListItem from '../FlyerListItem';\r\nimport { IUser } from '../../redux/reducers/user';\r\nimport { Surface } from 'react-native';\r\nimport { IsEmptyObj } from '../../utils/functions';\r\n\r\nexport interface FlyerListByPlaceProps {\r\n    reduxLocation: ILocation,\r\n    reduxFlyer: IFlyer,\r\n    getFlyersByPlace: any,\r\n    user: IUser\r\n}\r\n \r\nconst FlyerListByPlace: React.SFC<FlyerListByPlaceProps> = ({\r\n    reduxLocation,\r\n    reduxFlyer,\r\n    getFlyersByPlace,\r\n    user\r\n}) => {\r\n    useEffect(() => {\r\n        // fetch all flyers from this location\r\n        getFlyersByPlace(reduxLocation.selectedPlace.placeId);\r\n    },[]);\r\n\r\n    const determineIfBelongsToUser = (flyer:any) => {\r\n        if(\r\n            flyer.user && \r\n            !IsEmptyObj(user.currentUser) &&\r\n            (flyer.user._id ===user.currentUser._id)\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <FlyerListByPlaceStyle>\r\n            {reduxFlyer.flyers.length>0 && \r\n            reduxFlyer.flyers.map((flyer, idx) => (\r\n                <FlyerListItem flyer={flyer} belongsToUser={determineIfBelongsToUser(flyer)} />\r\n            ))}\r\n            {reduxFlyer.fetchingFlyers && <Spinner color=\"success\" />}\r\n            {!reduxFlyer.fetchingFlyers && reduxFlyer.flyers.length===0 &&\r\n                <p>There are no flyer notices here. Would you like to place one here?</p>\r\n            }\r\n        </FlyerListByPlaceStyle>\r\n     );\r\n}\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n    reduxLocation: state.location,\r\n    reduxFlyer: state.flyer,\r\n    user: state.user\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getFlyersByPlace\r\n})(FlyerListByPlace);","import React, {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {RouteComponentProps} from 'react-router-dom'\r\n\r\nimport {setIpLocation ,setSelectedPlace ,setFlyersInit, setOpenFlyerPane, setSelectedFlyer} from '../../redux/actions'\r\nimport { StoreState} from '../../redux/root-reducer';\r\nimport user, { IUser } from \"../../redux/reducers/user\";\r\nimport { IFlyer } from \"../../redux/reducers/flyer\";\r\nimport { ILocation} from \"../../redux/reducers/location\";\r\n\r\nimport {HomeStyle} from './styled';\r\nimport MapWithASearchBox from '../../components/Map/MapWithASearchBox';\r\nimport FlyerListSlidePane from '../../components/FlyerListSlidePane'\r\n\r\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\r\nimport SlidingPane from 'react-sliding-pane';\r\nimport { Button, Spinner } from 'reactstrap';\r\nimport FlyerListByPlace from '../../components/FlyerListByPlace';\r\nimport {getWindowWidth} from '../../utils/functions';\r\n\r\nexport interface HomeProps extends RouteComponentProps {\r\n  setIpLocation: any,\r\n  setSelectedPlace: any,\r\n  setSelectedFlyer: any,\r\n  setFlyersInit: any,\r\n  setOpenFlyerPane: any,\r\n  reduxLocation: ILocation,\r\n  user: IUser,\r\n  flyer: IFlyer\r\n}\r\n \r\nconst Home: React.SFC<HomeProps> = (props) => {\r\n  const [ipWasSet, setIpWasSet] = useState(false);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [gettingLocation, setGettingLocation] = useState(false)\r\n  //const [isPaneOpenLeft, setIsPaneOpenLeft] = useState(false);\r\n\r\n  useEffect(()=> {\r\n    props.setSelectedFlyer({});\r\n    //clean up work\r\n    return () => {\r\n      setFlyersInit([])\r\n    }\r\n\r\n  },[])\r\n  useEffect(()=> {\r\n    if(showMap===true) {\r\n      setGettingLocation(true);\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        setGettingLocation(false);\r\n        const ltlng = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude\r\n        }\r\n        props.setIpLocation(ltlng);\r\n        setIpWasSet(true);\r\n        setTimeout( () => {\r\n          props.setFlyersInit([]);\r\n        }, 1000);\r\n        props.setSelectedPlace(null);\r\n      })\r\n    }\r\n  },[showMap]);\r\n\r\n\r\n  const showMapToggle = () => {\r\n    setShowMap(!showMap)\r\n}\r\n\r\n  return (  \r\n    <HomeStyle>\r\n      <div className=\"MapContainer\">\r\n        <div className=\"BtnControls\">\r\n          <div>\r\n            <button\r\n              onClick={showMapToggle}\r\n              className=\"btn btn-info\"\r\n            >\r\n              {showMap? \"Hide\":\"Show\"} Map {\" \"}\r\n              {gettingLocation && <Spinner size=\"sm\" color=\"light\"></Spinner>}\r\n            </button>\r\n          </div>\r\n          <p>{Object.keys(props.user.currentUser).length > 0? props.user.currentUser.name: 'Anonymous User'}</p>\r\n        </div>\r\n        {props.reduxLocation.validPlace === false && <p className=\"text-danger\">Your search is too broad. Please search a business location or address.</p>}\r\n        {ipWasSet && showMap && <MapWithASearchBox/>}\r\n        {/* SLIDE PANE  */}\r\n        <FlyerListSlidePane>\r\n          <Button\r\n            color=\"primary\"\r\n            outline={false}\r\n            onClick={()=>props.history.push(\"/make-flyer\")}\r\n          >Place flyer here</Button>\r\n          <hr/>\r\n          <FlyerListByPlace />\r\n        </FlyerListSlidePane>\r\n      </div>\r\n      {/* About Content */}\r\n      <div className=\"about\">\r\n        <h2>What is Noticely?</h2>\r\n        <hr/>\r\n        <p>Noticely is designed the bring the \"age-old\" task of \"putting up flyers\" into the future. \r\n          It used to be that if you wanted to make notices or spread information, you would have to:\r\n        </p>\r\n        <ul>\r\n          <li>Design flyer and print out many copies.</li>\r\n          <li>Find locations with high foot traffic to place the flyers.</li>\r\n          <li>Physically walk to each location.</li>\r\n          <li>Many times, the location does not have a designated area to place your flyer.</li>\r\n        </ul>\r\n        <h2>How does Noticely help?</h2>\r\n        <hr />\r\n        <p>Noticely simplifies this process. </p>\r\n        <ul>\r\n          <li>No more wasting paper; the flyers are virtual! </li>  \r\n          <li>Find a location with ease using our map. Simply Search any location.</li>\r\n          <li>Select a location and immediately create a flyer there.</li>\r\n          <li>No more worrying if the place has a designated area for flyers.</li>\r\n        </ul>\r\n      </div>\r\n    </HomeStyle>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  reduxLocation: state.location,\r\n  flyer: state.flyer,\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  setIpLocation,\r\n  setSelectedPlace,\r\n  setFlyersInit,\r\n  setOpenFlyerPane,\r\n  setSelectedFlyer\r\n})(Home);","import React, {useState, useEffect, FormEvent} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios';\r\nimport {Label, Input, Button, Spinner} from 'reactstrap';\r\nimport {uuid} from 'uuidv4';\r\n\r\nimport { FormWrapper, InputGroup, CheckBoxContainer } from \"../../components/Form/styled\";\r\nimport agent from '../../agent';\r\n\r\nimport { StoreState} from '../../redux/root-reducer';\r\nimport { IFlyer } from '../../redux/reducers/flyer';\r\nimport { ILocation } from '../../redux/reducers/location';\r\nimport { IUser } from '../../redux/reducers/user';\r\nimport {validateImage, validateEmail} from '../../utils/validate';\r\n\r\n\r\nimport {makeFlyer, setOpenFlyerPane} from '../../redux/actions';\r\nimport { RouteComponentProps } from 'react-router';\r\n\r\nexport interface MakeFlyerProps extends RouteComponentProps {\r\n    reduxLocation: ILocation,\r\n    flyer: IFlyer,\r\n    user: IUser,\r\n    makeFlyer: any,\r\n    setOpenFlyerPane: any\r\n}\r\n\r\nconst MakeFlyer:React.SFC<MakeFlyerProps> = ({\r\n    reduxLocation,\r\n    flyer,\r\n    user,\r\n    makeFlyer,\r\n    setOpenFlyerPane,\r\n    history\r\n}) => {\r\n    // useState\r\n    const [heading, setHeading] = useState(\"\");\r\n    // img \r\n    const [imgNum, setImgNum] = useState(0);\r\n    const [img1, setImg1] = useState(\"\");\r\n    const [img2, setImg2] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    // email\r\n    const [email, setEmail] = useState(\"\")\r\n    const [selectedEmail, setSelectedEmail] = useState(\"\");\r\n    // phone\r\n    const [phoneSelected, setPhoneSelected] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    // errors\r\n    const [errors, setErrors] = useState({\r\n        heading: \"\",\r\n        description: \"\",\r\n        email: \"\",\r\n        imgNum:\"\",\r\n        img1: \"\",\r\n        img2: \"\",\r\n        phone: \"\"\r\n    });\r\n\r\n    const isUserLoggedIn = ():boolean => {\r\n        return Object.keys(user.currentUser).length > 0;\r\n    }\r\n\r\n    const fileChanged = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n        if(imgNum===0) {\r\n            // reset error\r\n            setErrors({...errors, img1:\"\"});\r\n            //add first pic\r\n            if(validateImage(e.target.value)) {\r\n                setImgNum(1)\r\n                //get Signed\r\n                if(e.target.files !==null) {\r\n                    const file = e.target.files[0];\r\n                    getSignedRequest(file);\r\n                }\r\n            } else {setErrors({...errors, img1:\"Wrong File Type\"})}\r\n        }else if (imgNum===1) {\r\n             // reset error\r\n             setErrors({...errors, img2:\"\"});\r\n            //add second pic\r\n            if(validateImage(e.target.value)) {\r\n                setImgNum(2)\r\n                //get Signed\r\n                if(e.target.files !==null) {\r\n                    const file = e.target.files[0];\r\n                    getSignedRequest(file);\r\n                }\r\n            }else {setErrors({...errors, img2:\"Wrong File Type\"})}\r\n        } else {\r\n            //set error 'max of 2 images'\r\n            setErrors({...errors, imgNum:\"Max of 2 images. This current image was not uploaded.\"})\r\n        }\r\n        // if(document && document.getElementById('flyerImg') && document.getElementById('flyerImg').value) {\r\n        //     document.getElementById('flyerImg').value = '';\r\n        // }\r\n    }\r\n    const getSignedRequest = async (file:any) => {\r\n        try {\r\n            const response = await axios.post('/graphql', \r\n                JSON.stringify({\r\n                    query: `\r\n                        query {\r\n                            signS3(s3Input: {fileName: \"${file.name}\", fileType: \"${file.type}\"}) {\r\n                                signedRequest,\r\n                                url\r\n                            } \r\n                        }\r\n                    `\r\n                })\r\n            )\r\n            const {data: {data: {signS3}}} = response;\r\n            uploadFile(file, signS3.signedRequest, signS3.url);\r\n        } catch(error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    const uploadFile = async (file:any, signedRequest:any, url:string) => {\r\n        try {\r\n            // delete Authorization header\r\n            delete axios.defaults.headers.common[\"Authorization\"];\r\n\r\n            // make aws call\r\n            const response = axios({\r\n                method: 'put',\r\n                url: signedRequest,\r\n                data: file,\r\n                headers: {'Content-Type': file.type}\r\n            })            \r\n\r\n            // store the image urls in state to be sent to the backend\r\n            if (imgNum === 0) {                    \r\n                setImg1(url);\r\n            } else if (imgNum === 1) {\r\n                setImg2(url);\r\n            }\r\n\r\n            // add auth header back\r\n            agent.setSession(user.currentUser.token);\r\n        } catch(error) {\r\n            console.dir(\"error\", error)\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        console.log(\"here\")\r\n        //reset error 'max of 2 images'\r\n        setErrors({...errors, imgNum:\"\"})\r\n        e.preventDefault()\r\n        // validation\r\n        const errorsObj: any = { ...errors };\r\n        errorsObj.heading= heading.trim().length > 100? 'Heading must not be more than 100 characters':\"\";\r\n        errorsObj.description = description.trim().length < 3? \"Heading must be more than 3 characters\": \"\";\r\n        errorsObj.description = description.trim().length > 2000? \"Body must not be more than 2000 characters\": \"\";\r\n        errorsObj.description = description.trim().length < 3? \"Body must be more than 3 characters\": \"\";\r\n        errorsObj.phone = (phoneSelected && phone.trim().length > 30)? \"Phone must be less than 30 characters\": \"\";\r\n        errorsObj.phone = phoneSelected && !(/[0-9]/.test(phone)) && \"Phone must be all numbers\";\r\n        errorsObj.email = selectedEmail && validateEmail(email)===\"Not a Valid Email\" && \"Email is invalid\";\r\n\r\n        setErrors(errorsObj);\r\n        console.log(errorsObj)\r\n        // check if any errors exist, don't submit form if errors\r\n        for (let errorItem in errorsObj) {\r\n            // if (!errorsObj[errorItem]) {\r\n            //     console.log(errorItem, errorsObj[errorItem])\r\n            //     console.log('reached here');\r\n            // return;\r\n            // }\r\n            if(typeof errorsObj[errorItem] === \"boolean\" && errorsObj[errorItem] === true) {\r\n                console.log(\"false\")\r\n                console.log(errorItem, errorsObj[errorItem])\r\n                console.log('reached here');\r\n                return;\r\n            }\r\n            if(typeof errorsObj[errorItem] === \"string\" && errorsObj[errorItem].length >0) {\r\n                console.log(\"empty\")\r\n                console.log(errorItem, errorsObj[errorItem])\r\n                console.log('reached here');\r\n                return;\r\n            }\r\n        }\r\n\r\n        // construct flyer body to be sent\r\n        const images = [];\r\n        if(img1) {\r\n            images.push(img1)\r\n        }\r\n        if(img2) {\r\n            images.push(img2)\r\n        }\r\n        const flyerBody = {\r\n            placeId: reduxLocation.selectedPlace.placeId,\r\n            formattedAddress: reduxLocation.selectedPlace.formatted_address,\r\n            latlng: reduxLocation.selectedPlace.latlng,\r\n            name: reduxLocation.selectedPlace.name,\r\n            images: images,\r\n            heading: heading,\r\n            description: description,\r\n            phone: phoneSelected? phone:\"\",\r\n            email: selectedEmail? email: \"\"\r\n        }\r\n\r\n        // async action to make API call to make-flyer\r\n        makeFlyer(flyerBody);\r\n    }\r\n\r\n    const renderErrors = () => {\r\n        if(flyer.errors) {\r\n          return flyer.errors.map((error:any) => {\r\n            return <p className=\"text-danger\">{error.message}</p>\r\n          })\r\n        }\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if(!reduxLocation.selectedPlace) {\r\n            history.push(\"/\")\r\n        }\r\n        return ()=> {\r\n            setOpenFlyerPane(false);\r\n        }\r\n    },[])\r\n    useEffect(()=> {\r\n        //redirect to View Flyer once flyer is made\r\n        if(flyer.selectedFlyer && Object.keys(flyer.selectedFlyer).length>0) {\r\n            history.push(\"/view-flyer\");\r\n        }\r\n\r\n    }, [flyer])\r\n\r\n    return (\r\n        <div>\r\n            <h2>Make Your Flyer</h2>\r\n            <h5>at {(reduxLocation.selectedPlace||{}).name}</h5>\r\n            <FormWrapper>\r\n                {renderErrors()}\r\n                <form onSubmit={handleSubmit}>\r\n                    <InputGroup>\r\n                        {errors.heading && <p className=\"text-danger\">{errors.heading}</p>}                 \r\n                        <Label for=\"heading\">Flyer Heading</Label>\r\n                        <Input \r\n                            type=\"text\" \r\n                            name=\"heading\" \r\n                            onChange={(e)=>setHeading(e.target.value)}\r\n                            required\r\n                        />\r\n                    </InputGroup>\r\n                    {isUserLoggedIn() &&(\r\n                        <React.Fragment>\r\n                            <p>Num of Pics Uploaded: {imgNum}/2</p>\r\n                            <InputGroup>\r\n                                {errors.imgNum && <p className=\"text-danger\">{errors.imgNum}</p>}\r\n                                <Label for=\"img\">Upload Image</Label>\r\n                                <Input \r\n                                    type=\"file\" \r\n                                    name=\"img\" \r\n                                    id=\"flyerImg\"\r\n                                    onChange={(e)=>fileChanged(e)}\r\n                                />\r\n                            </InputGroup>\r\n                        </React.Fragment>                        \r\n                    )}\r\n                    <InputGroup>\r\n                        {errors.description && <p className=\"text-danger\">{errors.description}</p>}\r\n                        <Label for=\"description\">\r\n                            Body{isUserLoggedIn()?\"\":\"*\"}\r\n                        </Label>\r\n                        <Input \r\n                            type=\"textarea\" \r\n                            name=\"description\" \r\n                            rows=\"7\"\r\n                            onChange={(e)=>setDescription(e.target.value)}\r\n                            required\r\n                        />\r\n                    </InputGroup>\r\n                    {isUserLoggedIn()? (\r\n                        <React.Fragment>\r\n                            <InputGroup>\r\n                                <Label for=\"img\">Ways to Contact You</Label>\r\n                                    <CheckBoxContainer>\r\n                                        <div className=\"CheckBoxItem\">\r\n                                            <Input \r\n                                                type=\"checkbox\" \r\n                                                value=\"email\" \r\n                                                onChange={(e)=>setSelectedEmail(selectedEmail==\"\"?e.target.value:\"\")}\r\n                                            />{\" \"}Email {\"|\"}\r\n                                        </div>\r\n                                        <div className=\"CheckBoxItem\">\r\n                                            <Input \r\n                                                type=\"checkbox\" \r\n                                                value=\"addPhone\" \r\n                                                onChange={(e)=>setPhoneSelected(phoneSelected==\"\"?e.target.value:\"\")}\r\n                                            />{\" \"} Phone\r\n                                        </div>\r\n                                    </CheckBoxContainer>\r\n                                \r\n                            </InputGroup>\r\n                            {selectedEmail &&\r\n                                <InputGroup>\r\n                                    <Label for=\"email\">Email </Label>\r\n                                    {errors.email && <p className=\"text-danger\">{errors.email}</p>}\r\n                                    <Input \r\n                                        type=\"email\" \r\n                                        name=\"email\"\r\n                                        onChange={(e)=>setEmail(e.target.value)}\r\n                                    />                            \r\n                                </InputGroup>\r\n                            }\r\n                            {phoneSelected && \r\n                                <InputGroup>\r\n                                    <Label for=\"phone\">Phone</Label>\r\n                                    {errors.phone && <p className=\"text-danger\">{errors.phone}</p>}\r\n                                    <Input \r\n                                        type=\"tel\" \r\n                                        name=\"phone\"\r\n                                        onChange={(e)=>setPhone(e.target.value)}\r\n                                    />                            \r\n                                </InputGroup>                            \r\n                            }\r\n                        </React.Fragment>                        \r\n                    )\r\n                    :\r\n                    <React.Fragment>\r\n                        <cite className=\"text-muted d-block\">*Anonymous users must put their contact info in the body.</cite>\r\n                        <cite className=\"text-muted d-block\">SignIn/Register to have more options for your flyers.</cite>\r\n                    </React.Fragment>\r\n                    }\r\n                    <Button \r\n                        type=\"submit\"\r\n                        color='primary'\r\n                        outline={false}\r\n                        disabled={flyer.makingFlyer? true:false}\r\n                    >\r\n                        {flyer.makingFlyer?\r\n                            <Spinner color=\"light\"></Spinner>\r\n                        :\r\n                        \"Make Flyer\"\r\n                        }\r\n                    </Button>\r\n                </form>\r\n            </FormWrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n    reduxLocation: state.location,\r\n    flyer: state.flyer,\r\n    user: state.user\r\n  });\r\n\r\nexport default connect(mapStateToProps, {\r\n    makeFlyer,\r\n    setOpenFlyerPane\r\n})(MakeFlyer);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.section`\r\n    & .flyer-page {\r\n        margin-top: 20px;\r\n        min-height: 400px;\r\n        border: 1px solid #8492a6;\r\n        padding: 1rem;\r\n        box-shadow: 6px 6px 14px 2px rgba(0,0,0,0.75);\r\n\r\n        &__body {\r\n            white-space: pre-wrap;\r\n            word-break: break-word;\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nconst ViewFyerStyled = ({children}) => (\r\n    <Wrapper>{children}</Wrapper>\r\n)\r\n\r\nexport default ViewFyerStyled;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.section`\r\n    & .photo-view__images {\r\n        display: flex;\r\n        width: 100%;\r\n        flex-wrap: wrap;\r\n\r\n        figure {\r\n            max-width: 50px;\r\n            max-height: 50px;\r\n            margin-right: 10px;\r\n            cursor: pointer;\r\n            transition: all .3s;\r\n\r\n            img {\r\n                width: 100%;\r\n            }\r\n        }\r\n        figure:hover {\r\n            transform: scale(1.05);\r\n        }\r\n    }\r\n    \r\n    & .photo-view__display {\r\n        figure {\r\n            max-width: 200px;\r\n            max-height: 200px;\r\n            img {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PhotoViewStyle = ({children}) => {\r\n    return <Wrapper>\r\n        {children}\r\n    </Wrapper>\r\n}","import React, {useState} from 'react';\r\n\r\nimport {PhotoViewStyle} from './styled';\r\n\r\nexport interface PhotoViewProps {\r\n    images:string[],\r\n    editable: boolean\r\n}\r\n \r\nconst PhotoView: React.SFC<PhotoViewProps> = ({images}) => {\r\n    const [selectedImage, setSelectedImage] = useState(\"\");\r\n\r\n    return (    \r\n        <PhotoViewStyle>\r\n            <div className=\"photo-view__images\">\r\n                {images.map((img, idx) => (\r\n                    <figure key={idx} onClick={()=>setSelectedImage(img)}>\r\n                        <img src={img} />\r\n                    </figure>\r\n                ))}\r\n            </div>\r\n            <div className=\"photo-view__display\" >\r\n                {selectedImage? (\r\n                    <figure>\r\n                        <img src={selectedImage} />\r\n                    </figure>\r\n                ): null}\r\n            </div>\r\n        </PhotoViewStyle>\r\n     );\r\n}\r\n \r\nexport default PhotoView;","import React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {RouteComponentProps} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport { StoreState } from '../../redux/root-reducer';\r\nimport { IFlyer } from '../../redux/reducers/flyer';\r\nimport ViewFlyerStyled from './styled';\r\nimport PhotoView from '../../components/PhotoView';\r\nimport ViewFyerStyled from './styled';\r\nimport {setSelectedFlyer, setFlyersInit, setOpenFlyerPane} from '../../redux/actions';\r\n\r\nexport interface ViewFlyerProps extends RouteComponentProps {\r\n    flyer: IFlyer,\r\n    setSelectedFlyer: any,\r\n    setFlyersInit: any,\r\n    setOpenFlyerPane: any\r\n}\r\n \r\nconst ViewFlyer: React.SFC<ViewFlyerProps> = ({\r\n    flyer,\r\n    history,\r\n    setSelectedFlyer,\r\n    setFlyersInit,\r\n    setOpenFlyerPane\r\n}) => {\r\n    let {selectedFlyer} = flyer;\r\n    selectedFlyer = selectedFlyer? selectedFlyer : {};\r\n    useEffect(()=> {\r\n        if(Object.keys(selectedFlyer).length ===0) {\r\n            history.push(\"/\")\r\n        }\r\n\r\n        // empty out Flyers Arr\r\n        setFlyersInit([]);\r\n        // openFlyerPan should be false\r\n        setOpenFlyerPane(false);\r\n        return ()=> {\r\n            setSelectedFlyer({})\r\n        }\r\n    },[]);\r\n\r\n    const determineUserOrAnonymous = () => {\r\n        if(selectedFlyer.user) {\r\n            return selectedFlyer.user.name;\r\n        } else {\r\n            return \"Anonymous\"\r\n        }\r\n    }\r\n\r\n    if(Object.keys(selectedFlyer).length > 0) {\r\n        return ( \r\n            <ViewFlyerStyled>\r\n                <h2>Flyer Notification</h2>\r\n                <div className=\"flyer-page\">\r\n                    <h3>{selectedFlyer.heading}</h3>\r\n                    <hr />\r\n            <cite className=\"text-muted\">Posted by: {determineUserOrAnonymous()} on {moment.unix(selectedFlyer.createdAt/1000).format(\"MM/DD/YY\")}</cite>\r\n                    {/* Images Logic goes here */}\r\n                    <PhotoView images={selectedFlyer.images||[]} editable={false}/>\r\n                    <div className=\"flyer-page__body\">\r\n                        {selectedFlyer.description}\r\n                    </div>\r\n                    {Object.keys(selectedFlyer.contact).length > 0 && (\r\n                    <React.Fragment>\r\n                        <hr/>\r\n                        <h5>Contact Info</h5>\r\n                        {selectedFlyer.contact.email && (\r\n                            <p>Email: {selectedFlyer.contact.email}</p>\r\n                        )}\r\n                        {selectedFlyer.contact.phone && (\r\n                            <p>Phone: {selectedFlyer.contact.phone}</p>\r\n                        )}\r\n                    </React.Fragment>\r\n                    )} \r\n                </div>\r\n            </ViewFlyerStyled>\r\n         );\r\n    } else {\r\n        return <ViewFyerStyled>\r\n            <p>loading..</p>\r\n        </ViewFyerStyled>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state:StoreState) => ({\r\n    flyer: state.flyer\r\n})\r\n \r\nexport default connect(mapStateToProps ,{\r\n    setSelectedFlyer,\r\n    setFlyersInit,\r\n    setOpenFlyerPane\r\n})(ViewFlyer);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.section`\r\n    & .manage-list {\r\n\r\n        &__container {\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n        }\r\n        &__item {\r\n            width: 250px;\r\n            border: 1px solid #ccc;\r\n            margin-right: 1rem;\r\n            margin-bottom: 1rem;\r\n            border-radius: 3px;\r\n            cursor: pointer;\r\n            transition: all .3s;\r\n\r\n            &__header {\r\n                padding: 1rem;\r\n                background-color: ${props=>props.theme.colors.green};\r\n                color: ${props=>props.theme.colors.white};\r\n\r\n                h5 {\r\n                    margin-bottom: 0px;\r\n                }\r\n            }\r\n            &__body {\r\n                padding: 1rem;\r\n            }\r\n        }\r\n        &__item:hover {\r\n            transform: translateX(3px);\r\n            box-shadow: 5px 5px 12px 2px rgba(0,0,0,0.75);\r\n        }\r\n    }\r\n`;\r\n\r\nconst ManageStyled = ({children}) => (\r\n    <Wrapper>{children}</Wrapper>\r\n)\r\n\r\nexport default ManageStyled;","import React, {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {RouteComponentProps} from 'react-router-dom';\r\n\r\nimport ManageStyled from './styled';\r\nimport { StoreState } from '../../redux/root-reducer';\r\nimport { IFlyer } from '../../redux/reducers/flyer';\r\nimport {getFlyersByUser, setOpenFlyerPane ,setSelectedPlace, setDeletedFlyer ,setFlyersInit} from '../../redux/actions'\r\nimport { IUser } from '../../redux/reducers/user';\r\nimport { IsEmptyObj, limitText } from '../../utils/functions';\r\nimport { Spinner } from 'reactstrap';\r\nimport FlyerListSlidePane from '../../components/FlyerListSlidePane';\r\nimport FlyerListItem from '../../components/FlyerListItem';\r\n\r\nexport interface ManageProps extends RouteComponentProps {\r\n    flyer: any,\r\n    user: IUser,\r\n    getFlyersByUser: any,\r\n    setOpenFlyerPane: any,\r\n    setSelectedPlace: any,\r\n    setDeletedFlyer: any,\r\n    setFlyersInit: any\r\n}\r\n \r\nconst Manage: React.SFC<ManageProps> = ({\r\n    flyer,\r\n    user,\r\n    history,\r\n    getFlyersByUser,\r\n    setOpenFlyerPane,\r\n    setSelectedPlace,\r\n    setDeletedFlyer,\r\n    setFlyersInit\r\n}) => {\r\n    const [selectedLocationItem, setSelectedLocationItem] = useState([]);\r\n    useEffect(()=> {\r\n        setFlyersInit([]);\r\n        //if not signed it, redirect to home\r\n        if(IsEmptyObj(user.currentUser)) {\r\n            console.log(\"isEmpty\",IsEmptyObj(user.currentUser), \"currentUser\", user.currentUser )\r\n            history.push(\"/\");\r\n            return;\r\n        }\r\n        //get flyers by user\r\n        getFlyersByUser(user.currentUser._id);\r\n        // flyerpane closed by default\r\n        setOpenFlyerPane(false);\r\n\r\n        return () => {\r\n            // setDeletedFlyer to false\r\n            setDeletedFlyer({})\r\n        }\r\n    }, []);\r\n\r\n    useEffect(()=> {\r\n        //get flyers by user\r\n        getFlyersByUser(user.currentUser._id);\r\n    },[flyer.deletedFlyer])\r\n\r\n    const handleItemClick = (item:any) => {\r\n        setOpenFlyerPane(true);\r\n        setSelectedPlace(item[0].placeId)\r\n        setSelectedLocationItem(item);\r\n    }\r\n\r\n    const displayListByLocation = () => {\r\n        const arrayOfPlaceId:any = [];\r\n        for(let flyerItem of flyer.flyers) {\r\n            if(!arrayOfPlaceId.includes(flyerItem.placeId.place_id)) {\r\n                arrayOfPlaceId.push(flyerItem.placeId.place_id)\r\n            }\r\n        }\r\n        const arrayOfPlacesWithAssociatedFlyers:any = [];\r\n        for(let placeItem of arrayOfPlaceId) {\r\n            const tempArr = [];\r\n            for(let flyerItem of flyer.flyers) {\r\n                if(placeItem === flyerItem.placeId.place_id) {\r\n                    tempArr.push(flyerItem)\r\n                }\r\n            }\r\n            arrayOfPlacesWithAssociatedFlyers.push(tempArr)\r\n        }\r\n        console.log(\"arrayOfPlacesWithAssociatedFlyers\",arrayOfPlacesWithAssociatedFlyers);\r\n\r\n        return (\r\n            <div className=\"manage-list\">\r\n                <div className=\"manage-list__container\">\r\n                    {arrayOfPlacesWithAssociatedFlyers.map((item:any, idx:number) => (\r\n                        <div className=\"manage-list__item\" key={idx} onClick={()=>handleItemClick(item)}>\r\n                            <div className=\"manage-list__item__header\">\r\n                                <h5>{typeof item[0].placeId !== 'string' && limitText(item[0].placeId.name, 17)}</h5>\r\n                            </div>\r\n                            <div className=\"manage-list__item__body\">\r\n                                <cite>{typeof item[0].placeId !== 'string' && item[0].placeId.formattedAddress}</cite>\r\n                                <hr/>\r\n                                <p>{item.length} flyer notice(s)</p>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <FlyerListSlidePane manageMode>\r\n                    {selectedLocationItem.map((flyerItem:any,idx:number)=> (\r\n                        <FlyerListItem flyer={flyerItem} belongsToUser={true} key={idx}/>\r\n                    ))}\r\n                    {selectedLocationItem.length===0 &&\r\n                        <p>No Flyers at this location </p>\r\n                    }\r\n                </FlyerListSlidePane>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return ( \r\n        <ManageStyled>\r\n            <h2>Manage Flyers</h2>\r\n            <hr />\r\n            {flyer.fetchingflyers && <div><Spinner color=\"dark\" size=\"sm\" /></div>}\r\n            {!flyer.fetchingflyers && flyer.flyers && flyer.flyers.length > 0?\r\n                displayListByLocation()\r\n                :\r\n                <p>There are no flyers to manage yet. You must create a flyer first.</p>\r\n            }\r\n\r\n        </ManageStyled>\r\n     );\r\n}\r\n\r\nconst mapStateToProps = (state:StoreState) => ({\r\n    flyer: state.flyer,\r\n    user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getFlyersByUser,\r\n    setOpenFlyerPane,\r\n    setSelectedPlace,\r\n    setDeletedFlyer,\r\n    setFlyersInit\r\n})(Manage);","import React, {useState, useEffect, FormEvent} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios';\r\nimport {Label, Input, Button, Spinner} from 'reactstrap';\r\n\r\nimport { FormWrapper, InputGroup, CheckBoxContainer } from \"../../components/Form/styled\";\r\nimport agent from '../../agent';\r\n\r\nimport { StoreState} from '../../redux/root-reducer';\r\nimport { IFlyer } from '../../redux/reducers/flyer';\r\nimport { ILocation } from '../../redux/reducers/location';\r\nimport { IUser } from '../../redux/reducers/user';\r\nimport {validateImage, validateEmail} from '../../utils/validate';\r\n\r\n\r\nimport {makeFlyer} from '../../redux/actions';\r\nimport { RouteComponentProps } from 'react-router';\r\n\r\nexport interface MakeFlyerProps extends RouteComponentProps {\r\n    reduxLocation: ILocation,\r\n    flyer: IFlyer,\r\n    user: IUser,\r\n    makeFlyer: any\r\n}\r\n\r\nconst MakeFlyer:React.SFC<MakeFlyerProps> = ({\r\n    reduxLocation,\r\n    flyer,\r\n    user,\r\n    makeFlyer,\r\n    history\r\n}) => {\r\n    // useState\r\n    const [heading, setHeading] = useState(flyer.selectedFlyer.heading);\r\n    // img \r\n    const [imgNum, setImgNum] = useState(flyer.selectedFlyer.images.length);\r\n    const [img1, setImg1] = useState(flyer.selectedFlyer.images[0]?flyer.selectedFlyer.images[0]:\"\");\r\n    const [img2, setImg2] = useState(flyer.selectedFlyer.images[1]?flyer.selectedFlyer.images[1]:\"\");\r\n    const [description, setDescription] = useState(flyer.selectedFlyer.description);\r\n    // email\r\n    const [email, setEmail] = useState(flyer.selectedFlyer.contact.email? flyer.selectedFlyer.contact.email:\"\")\r\n    const [selectedEmail, setSelectedEmail] = useState(flyer.selectedFlyer.contact.email? \"email\":\"\");\r\n    // phone\r\n    const [phone, setPhone] = useState(flyer.selectedFlyer.contact.phone? flyer.selectedFlyer.contact.phone:\"\");\r\n    const [phoneSelected, setPhoneSelected] = useState(flyer.selectedFlyer.contact.phone? \"phone\":\"\");\r\n    // errors\r\n    const [errors, setErrors] = useState({\r\n        heading: \"\",\r\n        description: \"\",\r\n        email: \"\",\r\n        imgNum:\"\",\r\n        img1: \"\",\r\n        img2: \"\",\r\n        phone: \"\"\r\n    });\r\n\r\n    const isUserLoggedIn = ():boolean => {\r\n        return Object.keys(user.currentUser).length > 0;\r\n    }\r\n\r\n    const fileChanged = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n        if(imgNum===0) {\r\n            // reset error\r\n            setErrors({...errors, img1:\"\"});\r\n            //add first pic\r\n            if(validateImage(e.target.value)) {\r\n                setImgNum(1)\r\n                //get Signed\r\n                if(e.target.files !==null) {\r\n                    const file = e.target.files[0];\r\n                    getSignedRequest(file);\r\n                }\r\n            } else {setErrors({...errors, img1:\"Wrong File Type\"})}\r\n        }else if (imgNum===1) {\r\n             // reset error\r\n             setErrors({...errors, img2:\"\"});\r\n            //add second pic\r\n            if(validateImage(e.target.value)) {\r\n                setImgNum(2)\r\n                //get Signed\r\n                if(e.target.files !==null) {\r\n                    const file = e.target.files[0];\r\n                    getSignedRequest(file);\r\n                }\r\n            }else {setErrors({...errors, img2:\"Wrong File Type\"})}\r\n        } else {\r\n            //set error 'max of 2 images'\r\n            setErrors({...errors, imgNum:\"Max of 2 images. This current image was not uploaded.\"})\r\n        }\r\n        // if(document && document.getElementById('flyerImg') && document.getElementById('flyerImg').value) {\r\n        //     document.getElementById('flyerImg').value = '';\r\n        // }\r\n    }\r\n    const getSignedRequest = async (file:any) => {\r\n        try {\r\n            const response = await axios.post('/graphql', \r\n                JSON.stringify({\r\n                    query: `\r\n                        query {\r\n                            signS3(s3Input: {fileName: \"${file.name}\", fileType: \"${file.type}\"}) {\r\n                                signedRequest,\r\n                                url\r\n                            } \r\n                        }\r\n                    `\r\n                })\r\n            )\r\n            const {data: {data: {signS3}}} = response;\r\n            uploadFile(file, signS3.signedRequest, signS3.url);\r\n        } catch(error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    const uploadFile = async (file:any, signedRequest:any, url:string) => {\r\n        try {\r\n            // delete Authorization header\r\n            delete axios.defaults.headers.common[\"Authorization\"];\r\n\r\n            // make aws call\r\n            const response = axios({\r\n                method: 'put',\r\n                url: signedRequest,\r\n                data: file,\r\n                headers: {'Content-Type': file.type}\r\n            })            \r\n\r\n            // store the image urls in state to be sent to the backend\r\n            if (imgNum === 0) {                    \r\n                setImg1(url);\r\n            } else if (imgNum === 1) {\r\n                setImg2(url);\r\n            }\r\n\r\n            // add auth header back\r\n            agent.setSession(user.currentUser.token);\r\n        } catch(error) {\r\n            console.dir(\"error\", error)\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        console.log(\"here\")\r\n        //reset error 'max of 2 images'\r\n        setErrors({...errors, imgNum:\"\"})\r\n        e.preventDefault()\r\n        // validation\r\n        const errorsObj: any = { ...errors };\r\n        errorsObj.heading= heading.trim().length > 100? 'Heading must not be more than 100 characters':\"\";\r\n        errorsObj.description = description.trim().length < 3? \"Heading must be more than 3 characters\": \"\";\r\n        errorsObj.description = description.trim().length > 2000? \"Body must not be more than 2000 characters\": \"\";\r\n        errorsObj.description = description.trim().length < 3? \"Body must be more than 3 characters\": \"\";\r\n        errorsObj.phone = (phoneSelected && phone.trim().length > 30)? \"Phone must be less than 30 characters\": \"\";\r\n        errorsObj.phone = phoneSelected && !(/[0-9]/.test(phone)) && \"Phone must be all numbers\";\r\n        errorsObj.email = selectedEmail && validateEmail(email)===\"Not a Valid Email\" && \"Email is invalid\";\r\n\r\n        setErrors(errorsObj);\r\n        console.log(errorsObj)\r\n        // check if any errors exist, don't submit form if errors\r\n        for (let errorItem in errorsObj) {\r\n            // if (!errorsObj[errorItem]) {\r\n            //     console.log(errorItem, errorsObj[errorItem])\r\n            //     console.log('reached here');\r\n            // return;\r\n            // }\r\n            if(typeof errorsObj[errorItem] === \"boolean\" && errorsObj[errorItem] === true) {\r\n                console.log(\"false\")\r\n                console.log(errorItem, errorsObj[errorItem])\r\n                console.log('reached here');\r\n                return;\r\n            }\r\n            if(typeof errorsObj[errorItem] === \"string\" && errorsObj[errorItem].length >0) {\r\n                console.log(\"empty\")\r\n                console.log(errorItem, errorsObj[errorItem])\r\n                console.log('reached here');\r\n                return;\r\n            }\r\n        }\r\n\r\n        // construct flyer body to be sent\r\n        const images = [];\r\n        if(img1) {\r\n            images.push(img1)\r\n        }\r\n        if(img2) {\r\n            images.push(img2)\r\n        }\r\n        const flyerBody = {\r\n            placeId: reduxLocation.selectedPlace.placeId,\r\n            formattedAddress: reduxLocation.selectedPlace.formatted_address,\r\n            latlng: reduxLocation.selectedPlace.latlng,\r\n            name: reduxLocation.selectedPlace.name,\r\n            images: images,\r\n            heading: heading,\r\n            description: description,\r\n            phone: phoneSelected? phone:\"\",\r\n            email: selectedEmail? email: \"\"\r\n        }\r\n\r\n        // async action to make API call to make-flyer\r\n        makeFlyer(flyerBody);\r\n    }\r\n\r\n    const handleDeletePic = (img: string, index:number) => {\r\n      if(index===1) {\r\n        setImg1(\"\")\r\n      } else if (index === 2) {\r\n        setImg2(\"\")        \r\n      }\r\n      let newImgNum = imgNum -1;\r\n      setImgNum(newImgNum);\r\n    }\r\n\r\n    const renderErrors = () => {\r\n        if(flyer.errors) {\r\n          return flyer.errors.map((error:any) => {\r\n            return <p className=\"text-danger\">{error.message}</p>\r\n          })\r\n        }\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if(!reduxLocation.selectedPlace) {\r\n            history.push(\"/\")\r\n        }\r\n    },[])\r\n    // useEffect(()=> {\r\n    //     //redirect to View Flyer once flyer is made\r\n    //     if(flyer.selectedFlyer && Object.keys(flyer.selectedFlyer).length>0) {\r\n    //         history.push(\"/view-flyer\");\r\n    //     }\r\n\r\n    // }, [flyer])\r\n\r\n    return (\r\n        <div>\r\n            <h2>Edit Your Flyer</h2>\r\n            <h5>at {(reduxLocation.selectedPlace||{}).name}</h5>\r\n            <FormWrapper>\r\n                {renderErrors()}\r\n                <form onSubmit={handleSubmit}>\r\n                    <InputGroup>\r\n                        {errors.heading && <p className=\"text-danger\">{errors.heading}</p>}                 \r\n                        <Label for=\"heading\">Flyer Heading</Label>\r\n                        <Input \r\n                            type=\"text\" \r\n                            name=\"heading\" \r\n                            value={heading}\r\n                            onChange={(e)=>setHeading(e.target.value)}\r\n                            required\r\n                        />\r\n                    </InputGroup>\r\n                    {isUserLoggedIn() &&(\r\n                        <React.Fragment>\r\n                            <p>Num of Pics Uploaded: {imgNum}/2</p>\r\n                            <div className=\"edit-pics\">\r\n                              {img1 !==\"\" && (\r\n                                <div className=\"edit-pics__item\">\r\n                                  <p className=\"edit-pics__item__controls\">\r\n                                    <span onClick={()=>handleDeletePic(img1, 1)}>X</span>\r\n                                  </p>\r\n                                  <figure>\r\n                                      <img src={img1} />\r\n                                  </figure>                                        \r\n                              </div>\r\n                              )}\r\n                              {img2 !== \"\" && (\r\n                                <div className=\"edit-pics__item\">\r\n                                  <p className=\"edit-pics__item__controls\">\r\n                                    <span onClick={()=>handleDeletePic(img2, 2)}>X</span>\r\n                                  </p>\r\n                                  <figure>\r\n                                      <img src={img2} />\r\n                                  </figure>                                        \r\n                              </div>\r\n                              )}\r\n                            </div>\r\n                            <InputGroup>\r\n                                {errors.imgNum && <p className=\"text-danger\">{errors.imgNum}</p>}\r\n                                <Label for=\"img\">Upload Image</Label>\r\n                                <Input \r\n                                    type=\"file\" \r\n                                    name=\"img\" \r\n                                    id=\"flyerImg\"\r\n                                    onChange={(e)=>fileChanged(e)}\r\n                                />\r\n                            </InputGroup>\r\n                        </React.Fragment>                        \r\n                    )}\r\n                    <InputGroup>\r\n                        {errors.description && <p className=\"text-danger\">{errors.description}</p>}\r\n                        <Label for=\"description\">\r\n                            Body{isUserLoggedIn()?\"\":\"*\"}\r\n                        </Label>\r\n                        <Input \r\n                            type=\"textarea\" \r\n                            name=\"description\" \r\n                            rows=\"7\"\r\n                            value={description}\r\n                            onChange={(e)=>setDescription(e.target.value)}\r\n                            required\r\n                        />\r\n                    </InputGroup>\r\n                    {isUserLoggedIn()? (\r\n                        <React.Fragment>\r\n                            <InputGroup>\r\n                                <Label for=\"img\">Ways to Contact You</Label>\r\n                                    <CheckBoxContainer>\r\n                                        <div className=\"CheckBoxItem\">\r\n                                            <Input \r\n                                                type=\"checkbox\" \r\n                                                value=\"email\" \r\n                                                checked={selectedEmail? true:false}\r\n                                                onChange={(e)=>setSelectedEmail(selectedEmail==\"\"?e.target.value:\"\")}\r\n                                            />{\" \"}Email {\"|\"}\r\n                                        </div>\r\n                                        <div className=\"CheckBoxItem\">\r\n                                            <Input \r\n                                                type=\"checkbox\" \r\n                                                value=\"addPhone\" \r\n                                                checked={phoneSelected? true:false}\r\n                                                onChange={(e)=>setPhoneSelected(phoneSelected==\"\"?e.target.value:\"\")}\r\n                                            />{\" \"} Phone\r\n                                        </div>\r\n                                    </CheckBoxContainer>\r\n                                \r\n                            </InputGroup>\r\n                            {selectedEmail &&\r\n                                <InputGroup>\r\n                                    <Label for=\"email\">Email </Label>\r\n                                    {errors.email && <p className=\"text-danger\">{errors.email}</p>}\r\n                                    <Input \r\n                                        type=\"email\" \r\n                                        name=\"email\"\r\n                                        value={email}\r\n                                        onChange={(e)=>setEmail(e.target.value)}\r\n                                    />                            \r\n                                </InputGroup>\r\n                            }\r\n                            {phoneSelected && \r\n                                <InputGroup>\r\n                                    <Label for=\"phone\">Phone</Label>\r\n                                    {errors.phone && <p className=\"text-danger\">{errors.phone}</p>}\r\n                                    <Input \r\n                                        type=\"tel\" \r\n                                        name=\"phone\"\r\n                                        value={phone}\r\n                                        onChange={(e)=>setPhone(e.target.value)}\r\n                                    />                            \r\n                                </InputGroup>                            \r\n                            }\r\n                        </React.Fragment>                        \r\n                    )\r\n                    :\r\n                    <React.Fragment>\r\n                        <cite className=\"text-muted d-block\">*Anonymous users must put their contact info in the body.</cite>\r\n                        <cite className=\"text-muted d-block\">SignIn/Register to have more options for your flyers.</cite>\r\n                    </React.Fragment>\r\n                    }\r\n                    <Button \r\n                        type=\"submit\"\r\n                        color='primary'\r\n                        outline={false}\r\n                        disabled={flyer.makingFlyer? true:false}\r\n                    >\r\n                        {flyer.makingFlyer?\r\n                            <Spinner color=\"light\"></Spinner>\r\n                        :\r\n                        \"Edit Flyer\"\r\n                        }\r\n                    </Button>\r\n                </form>\r\n            </FormWrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n    reduxLocation: state.location,\r\n    flyer: state.flyer,\r\n    user: state.user\r\n  });\r\n\r\nexport default connect(mapStateToProps, {\r\n    makeFlyer\r\n})(MakeFlyer);\r\n","import React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\n\r\nimport agent from './agent';\r\nimport {getUserInfo} from './redux/actions';\r\n\r\nimport Navigation from './components/Navigation';\r\n\r\n//Containers\r\nimport Home from './containers/Home/index';\r\nimport MakeFlyer from './containers/MakeFlyer/index';\r\nimport ViewFlyer from './containers/ViewFlyer';\r\nimport Manage from './containers/Manage';\r\nimport EditFlyer from './containers/EditFlyer';\r\n\r\nimport {StoreState} from './redux/root-reducer';\r\n\r\nexport interface AppProps {\r\n  dummy: any,\r\n  getUserInfo: Function\r\n}\r\n\r\nconst App:React.SFC<AppProps> = ({getUserInfo}) => {\r\n  useEffect(()=> {\r\n    //check if jwt is set\r\n    if(agent.getSession()) {\r\n      //log him in\r\n      getUserInfo();\r\n    }\r\n  },[]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        {/* Navigation goes here */}\r\n        <Router>\r\n          <Navigation />\r\n          <div className=\"container mt-4 mb-4\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route exact path=\"/make-flyer\" component={MakeFlyer} />\r\n                <Route exact path=\"/view-flyer\" component={ViewFlyer} />\r\n                <Route exact path=\"/manage\" component={Manage} />\r\n                <Route exact path=\"/edit-flyer\" component={EditFlyer} />\r\n              </Switch>\r\n          </div>\r\n        </Router>\r\n      {/* Footer goes here */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state:StoreState) => ({\r\n  dummy: state.dummy\r\n});\r\n\r\nexport default connect(mapStateToProps ,{\r\n  getUserInfo\r\n})(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {Action} from '../actions';\r\nimport constants from '../constants';\r\n\r\nexport interface IDummy {\r\n  isDummy: boolean\r\n}\r\n\r\nconst defaultState = {\r\n  isDummy: false\r\n}\r\n\r\n\r\nexport default (state:IDummy=defaultState, action:Action): IDummy => {\r\n  switch(action.type) {\r\n    case constants.DUMMY.ADD_DUMMY: \r\n      return {...state, isDummy: true};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {Action} from \"../actions/types\";\r\nimport constants from '../constants';\r\n\r\nexport interface IUser {\r\n  registering: boolean,\r\n  loggingIn: boolean,\r\n  currentUser: any,\r\n  errors: any\r\n}\r\nconst initialState = {\r\n  registering: false,\r\n  loggingIn: false,\r\n  currentUser: {},\r\n  errors: null\r\n}\r\n\r\nexport default (state:IUser=initialState, action:Action) => {\r\n  switch(action.type) {\r\n    case constants.USER.REGISTER_USER:\r\n      return {\r\n        ...state,\r\n        registering: true\r\n      }\r\n    case constants.USER.REGISTER_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        registering: false,\r\n        currentUser: action.payload\r\n      }\r\n    case constants.USER.REGISTER_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        registering: false,\r\n        errors: action.payload\r\n      }\r\n    case constants.USER.LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        loggingIn: true,\r\n      }\r\n    case constants.USER.LOGIN_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loggingIn: false,\r\n        currentUser: action.payload\r\n      }\r\n    case constants.USER.LOGIN_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        loggingIn: false,\r\n        errors: action.payload\r\n      }\r\n    case constants.USER.LOGOUT_USER: \r\n      return {\r\n        ...initialState\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n}","import {Action} from \"../actions/types\";\r\nimport constants from '../constants';\r\n\r\nexport interface ILocation {\r\n    ipLocation: {lat:number, lng:number}|null,\r\n    validPlace: any|null,\r\n    selectedPlace: any|null,\r\n    allPlaces: any[],\r\n    errors: any,\r\n    gettingPlaces: boolean\r\n}\r\nconst initialState = {\r\n    ipLocation: {\r\n        lat:41.500710,\r\n        lng: -74.021347\r\n    },\r\n    validPlace: null,\r\n    selectedPlace: null,\r\n    allPlaces: [],\r\n    errors: null,\r\n    gettingPlaces: false\r\n}\r\n\r\nexport default (state:ILocation=initialState, action:Action) => {\r\n  switch(action.type) {\r\n    case constants.LOCATION.SET_IP_LOCATION:\r\n        return {\r\n            ...state,\r\n            ipLocation: action.payload\r\n        };\r\n    case constants.LOCATION.SET_VALID_PLACE:\r\n        return {\r\n            ...state,\r\n            validPlace: action.payload\r\n        }\r\n    case constants.LOCATION.SET_SELECTED_PLACE:\r\n        return {\r\n            ...state,\r\n            selectedPlace: action.payload\r\n        }\r\n    case constants.LOCATION.GET_PLACES:\r\n        return {\r\n            ...state,\r\n            gettingPlaces: true\r\n        }\r\n    case constants.LOCATION.GET_PLACES_SUCCESS:\r\n        return {\r\n            ...state,\r\n            gettingPlaces: false,\r\n            allPlaces: action.payload\r\n        }\r\n    case constants.LOCATION.GET_PLACES_ERROR:\r\n        return {\r\n            ...state,\r\n            gettingPlaces: false,\r\n            errors: action.payload\r\n        }\r\n    default: \r\n      return state;\r\n  }\r\n}","import {Action} from \"../actions/types\";\r\nimport constants from '../constants';\r\n\r\nexport interface IFlyer {\r\n    openFlyerPane: boolean,\r\n    flyerMade: boolean,\r\n    makingFlyer: boolean,\r\n    fetchingFlyers: boolean,\r\n    flyers: any[],\r\n    selectedFlyer: any,\r\n    wishToDeleteFlyer: boolean,\r\n    deletingFlyer: boolean,\r\n    deletedFlyer: any,\r\n    errors: any\r\n}\r\nconst initialState = {\r\n    openFlyerPane:  false,\r\n    flyerMade: false,\r\n    makingFlyer: false,\r\n    fetchingFlyers: false,\r\n    flyers: [],\r\n    selectedFlyer: {},\r\n    wishToDeleteFlyer: false,\r\n    deletingFlyer: false,\r\n    deletedFlyer: {},\r\n    errors: null\r\n}\r\n\r\nexport default (state:IFlyer=initialState, action:Action) => {\r\n  switch(action.type) {\r\n    case constants.FLYER.SET_FLYERS:\r\n        return {\r\n            ...state,\r\n            fetchingFlyers: true\r\n        };\r\n    case constants.FLYER.SET_FLYERS_SUCCESS:\r\n        return {\r\n            ...state,\r\n            flyers: action.payload,\r\n            fetchingFlyers: false,\r\n            errors: null\r\n        };\r\n    case constants.FLYER.SET_FLYERS_FAIL:\r\n        return {\r\n            ...state,\r\n            fetchingFlyers: false,\r\n            errors: action.payload\r\n        };\r\n    case constants.FLYER.OPEN_FLYER_PANE:\r\n        return {\r\n            ...state,\r\n            openFlyerPane: action.payload\r\n        };\r\n    case constants.FLYER.SET_MAKING_FLYER:\r\n        return {\r\n            ...state,\r\n            makingFlyer: true\r\n        }\r\n    case constants.FLYER.SET_MAKING_FLYER_SUCCESS:\r\n        return {\r\n            ...state,\r\n            makingFlyer: false,\r\n            flyerMade: true,\r\n            selectedFlyer: action.payload,\r\n            errors: null\r\n        }\r\n    case constants.FLYER.SET_MAKING_FLYER_FAIL:\r\n        return {\r\n            ...state,\r\n            makingFlyer: false,\r\n            flyerMade: false,\r\n            errors: action.payload\r\n        }\r\n    case constants.FLYER.SET_SELECTED_FLYER:\r\n        return {\r\n            ...state,\r\n            selectedFlyer: action.payload\r\n        }\r\n    case constants.FLYER.SET_WISH_TO_DELETE_FLYER: \r\n        return {\r\n            ...state,\r\n            wishToDeleteFlyer: action.payload\r\n        }\r\n    case constants.FLYER.SET_DELETING_FLYER:\r\n        return {\r\n            ...state,\r\n            deletingFlyer: action.payload\r\n        }\r\n    case constants.FLYER.SET_DELETED_FLYER:\r\n        return {\r\n            ...state,\r\n            deletedFlyer: action.payload\r\n        }\r\n    case constants.FLYER.SET_DELETING_FLYER_SUCCESS:\r\n        return {\r\n            ...state,\r\n            deletingFlyer: false,\r\n            deletedFlyer: action.payload\r\n        }\r\n    case constants.FLYER.SET_DELETING_FLYER_FAIL:\r\n        return {\r\n            ...state,\r\n            deletingFlyer: false,\r\n            errors: action.payload            \r\n        }\r\n    default: \r\n      return state;\r\n  }\r\n}","import {combineReducers} from 'redux';\r\nimport dummyReducer, {IDummy} from './reducers/dummy'; //dummyReducer -reducer, IDummy - Interface of state\r\nimport userReducer, {IUser} from './reducers/user';\r\nimport locationReducer, {ILocation} from './reducers/location';\r\nimport flyerReducer, {IFlyer} from './reducers/flyer';\r\n\r\nexport interface StoreState {\r\n  dummy: IDummy,\r\n  user: IUser,\r\n  location: ILocation,\r\n  flyer: IFlyer\r\n}\r\n\r\nexport default combineReducers<StoreState>({\r\n  dummy: dummyReducer,\r\n  user: userReducer,\r\n  location: locationReducer,\r\n  flyer: flyerReducer\r\n});","import {createStore, applyMiddleware} from 'redux';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './redux/root-reducer';\r\n\r\nexport const middlewares = process.env.NODE_ENV===\"production\"? [ReduxThunk] : [ReduxThunk, logger];\r\n\r\n//create a store with the middleware\r\nconst createStoreWithMiddleware = applyMiddleware(...middlewares)(createStore);\r\n\r\nconst store = createStoreWithMiddleware(rootReducer);\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {ThemeProvider} from 'styled-components';\n\n//\nimport './agent';\n\n//styles\nimport GlobalStyle from './theme/globalStyles';\nimport Theme from './theme/theme';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={Theme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default {\r\n  colors: {\r\n    logo: '#FAB156',\r\n    blue: '#2A3DAD',\r\n    blueLight: '#4863FA',\r\n    green: '#4CAD98',\r\n    greenLight: '#61FAD9',\r\n    white: \"#FFFFFF\",\r\n    textPrimary: '#060d46',\r\n    textSecondary: '#8492a6',\r\n  },\r\n  spacers: {\r\n\r\n  },\r\n  mediaQueries: {\r\n    below425: `only screen and (max-width: 425px)`,\r\n    below768: `only screen and (max-width: 768px)`,\r\n    below1024: `only screen and (max-width: 1024px)`,\r\n    below1440: `only screen and (max-width: 1440px)`\r\n  }\r\n}","export * from './types'; \r\n\r\nexport * from './dummy';\r\nexport * from './user';\r\nexport * from './location';\r\nexport * from './flyer';\r\n","import constants from \"../constants\";\r\nimport { Dispatch } from \"redux\";\r\nimport axios from \"axios\";\r\n\r\nexport interface IFlyerData {\r\n  placeId: string;\r\n  formattedAddress: string;\r\n  name: string;\r\n  latlng: {\r\n    lat: number,\r\n    lng: number\r\n  };\r\n  images: string[];\r\n  heading: string;\r\n  description: string;\r\n  phone: string;\r\n  email: string;\r\n}\r\nexport interface IFlyerAction {\r\n  type: string;\r\n  payload: any;\r\n}\r\n\r\nexport const makeFlyer = (flyer: IFlyerData) => {\r\n  return async (dispatch: Dispatch) => {\r\n    dispatch<IFlyerAction>({\r\n      type: constants.FLYER.SET_MAKING_FLYER,\r\n      payload: true\r\n    });\r\n    try {\r\n        const response = await axios.post(\r\n                \"/graphql\",\r\n                JSON.stringify({\r\n                    query: `\r\n                        mutation {\r\n                            makeFlyer(flyerInput: {\r\n                                placeId: \"${flyer.placeId}\", formattedAddress: \"${flyer.formattedAddress}\" , \r\n                                latlng: {lat:\"${flyer.latlng.lat}\", lng: \"${flyer.latlng.lng}\"},\r\n                                name: \"${flyer.name}\", heading: \"${flyer.heading}\", \r\n                                description: \"\"\"${flyer.description}\"\"\", images: \"${flyer.images}\",\r\n                                contact: {phone:\"${flyer.phone}\", email: \"${flyer.email}\"}\r\n                            }) {\r\n                                _id\r\n                                placeId\r\n                                user {\r\n                                  _id\r\n                                  name\r\n                                  email\r\n                                }\r\n                                images\r\n                                heading\r\n                                description\r\n                                contact {\r\n                                  phone\r\n                                  email\r\n                                }\r\n                                createdAt\r\n                                updatedAt\r\n                            }\r\n                        } \r\n                    `\r\n                })\r\n            );\r\n            const {data:{data:{makeFlyer}}} = response;\r\n            dispatch<IFlyerAction>({\r\n              type: constants.FLYER.SET_MAKING_FLYER_SUCCESS,\r\n              payload: makeFlyer\r\n            });\r\n    } catch(error) {\r\n        dispatch<IFlyerAction>({\r\n            type: constants.FLYER.SET_MAKING_FLYER_FAIL,\r\n            payload: error.response.data.errors\r\n        })\r\n    }\r\n  };\r\n};\r\n\r\nexport const setOpenFlyerPane = (bool: boolean) => {\r\n  return {\r\n    type: constants.FLYER.OPEN_FLYER_PANE,\r\n    payload: bool\r\n  };\r\n};\r\n\r\nexport const setFlyersInit = (flyers: any) => {\r\n  return {\r\n    type: constants.FLYER.SET_FLYERS_SUCCESS,\r\n    payload: flyers\r\n  };\r\n};\r\n\r\nexport const getFlyersByPlace = (place_id: String) => {\r\n  return async (dispatch: Dispatch) => {\r\n    dispatch({type: constants.FLYER.SET_FLYERS});\r\n    try {\r\n      const response = await axios.post(\"graphql\", JSON.stringify({\r\n        query: `\r\n          query {\r\n            getFlyersByPlace(flyersByPlaceInput: {place_id: \"${place_id}\"}) {\r\n              _id\r\n              placeId \r\n              user {\r\n                _id\r\n                name\r\n                email\r\n              }\r\n              heading\r\n              description\r\n              images\r\n              contact {\r\n                phone\r\n                email\r\n              }\r\n              createdAt\r\n              updatedAt\r\n            }\r\n          }\r\n        `\r\n      }))\r\n      const {data:{data:{getFlyersByPlace}}} = response;\r\n      dispatch({type: constants.FLYER.SET_FLYERS_SUCCESS, payload: getFlyersByPlace});\r\n    } catch(error) {\r\n      dispatch({type: constants.FLYER.SET_FLYERS_FAIL, payload: error.response.data.errors});\r\n    }\r\n  }\r\n};\r\n\r\nexport const getFlyersByUser = (userId: String) => {\r\n  return async (dispatch: Dispatch) => {\r\n    dispatch({type: constants.FLYER.SET_FLYERS});\r\n    try {\r\n      const response = await axios.post(\"graphql\", JSON.stringify({\r\n        query: `\r\n          query {\r\n            getFlyersByUser(userId: \"${userId}\") {\r\n              _id\r\n              placeId {\r\n                _id\r\n                place_id\r\n                name\r\n                formattedAddress\r\n              }\r\n              user {\r\n                _id\r\n                name\r\n                email\r\n              }\r\n              heading\r\n              description\r\n              images\r\n              contact {\r\n                phone\r\n                email\r\n              }\r\n              createdAt\r\n              updatedAt\r\n            }\r\n          }\r\n        `\r\n      }))\r\n      const {data:{data:{getFlyersByUser}}} = response;\r\n      dispatch({type: constants.FLYER.SET_FLYERS_SUCCESS, payload: getFlyersByUser});\r\n    } catch(error) {\r\n      dispatch({type: constants.FLYER.SET_FLYERS_FAIL, payload: error.response.data.errors});\r\n    }\r\n  }\r\n};\r\n\r\nexport const setSelectedFlyer = (flyer: any) => {\r\n  return {\r\n    type: constants.FLYER.SET_SELECTED_FLYER,\r\n    payload: flyer\r\n  };\r\n};\r\n\r\nexport const setWishToDeleteFlyer = (bool: boolean) => {\r\n  return {\r\n    type: constants.FLYER.SET_WISH_TO_DELETE_FLYER,\r\n    payload: bool\r\n  }\r\n}\r\n\r\nexport const deleteFlyer = (flyer:any, redirectCb:any) => {\r\n  return async(dispatch:Dispatch) => {\r\n    // set DeletingFlyer true\r\n    dispatch({type: constants.FLYER.SET_DELETING_FLYER, payload: true})\r\n    try {\r\n      const response = await axios.post(\"graphql\",JSON.stringify({\r\n        query: `\r\n          mutation {\r\n            deleteFlyer(flyerId:\"${flyer._id}\") {\r\n              _id\r\n              placeId \r\n              user {\r\n                _id\r\n                name\r\n                email\r\n              }\r\n              heading\r\n              description\r\n              images\r\n              contact {\r\n                phone\r\n                email\r\n              }\r\n              createdAt\r\n              updatedAt\r\n            }\r\n          }\r\n        `        \r\n      }))\r\n      const {data:{data:{deleteFlyer}}} = response;\r\n      dispatch({type: constants.FLYER.SET_DELETING_FLYER_SUCCESS, payload: deleteFlyer})\r\n      dispatch({type: constants.FLYER.SET_WISH_TO_DELETE_FLYER, payload: false});\r\n      // close the slide pane\r\n      dispatch({type: constants.FLYER.OPEN_FLYER_PANE, payload: false})\r\n      // selectedFlyer should be {}\r\n      dispatch({type: constants.FLYER.SET_SELECTED_FLYER, payload: {}})\r\n        //redirect to manage\r\n        redirectCb(\"/manage\");\r\n\r\n    } catch(error) {\r\n      dispatch({type: constants.FLYER.SET_DELETING_FLYER_FAIL, payload: error.response.data.errors});\r\n    }\r\n  }\r\n}\r\n\r\nexport const setDeletedFlyer = (load:any) => {\r\n  return {\r\n    type: constants.FLYER.SET_DELETED_FLYER,\r\n    payload: load\r\n  };\r\n};\r\n\r\n// export const setNewFlyer = (newFlyer: any) => {\r\n//   return {\r\n//     type: constants.FLYER.SET_NEW_FLYER,\r\n//     newFlyer: newFlyer\r\n//   };\r\n// };\r\n\r\n// export const removeFlyer = (flyerId: any) => {\r\n//   return {\r\n//     type: constants.FLYER.REMOVE_FLYER,\r\n//     flyerId: flyerId\r\n//   };\r\n// };\r\n\r\n\r\n\r\n"],"sourceRoot":""}