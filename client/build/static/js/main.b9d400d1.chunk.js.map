{"version":3,"sources":["redux/actions/index.tsx","redux/actions/dummy.tsx","redux/actions/user.tsx","redux/actions/location.tsx","agent.ts","theme/globalStyles.js","components/Form/styled/index.js","utils/validate.tsx","components/SignIn/index.tsx","components/Register/index.tsx","components/Navigation/styled/index.js","components/Navigation/index.tsx","containers/Home/styled/index.js","components/Map/MapWithASearchBox.js","components/FlyerListByPlace/styled/index.js","components/FlyerListItem/styled/index.js","components/FlyerListItem/index.tsx","utils/functions.tsx","components/FlyerListByPlace/index.tsx","containers/Home/index.tsx","containers/MakeFlyer/index.tsx","containers/ViewFlyer/styled/index.js","components/PhotoView/styled/index.js","components/PhotoView/index.tsx","containers/ViewFlyer/index.tsx","App.tsx","serviceWorker.ts","redux/reducers/dummy.tsx","redux/reducers/user.tsx","redux/reducers/location.tsx","redux/reducers/flyer.tsx","redux/root-reducer.tsx","configureStore.ts","index.tsx","theme/theme.js","redux/constants/dummy.tsx","redux/constants/user.tsx","redux/constants/location.tsx","redux/constants/flyer.tsx","redux/constants/index.tsx","redux/actions/flyer.tsx"],"names":["registerUser","fullName","email","password","dispatch","a","type","constants","USER","REGISTER_USER","axios","post","JSON","stringify","query","response","data","REGISTER_USER_SUCCESS","payload","agent","setSession","token","REGISTER_USER_FAIL","errors","getUserInfo","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","loginUser","console","log","logoutUser","clearSession","LOGOUT_USER","setIpLocation","ipLocation","LOCATION","SET_IP_LOCATION","setValidPlace","bool","SET_VALID_PLACE","setSelectedPlace","place","SET_SELECTED_PLACE","getPlaces","GET_PLACES","GET_PLACES_SUCCESS","GET_PLACES_ERROR","getSession","security_token","window","localStorage","getItem","defaults","headers","common","setItem","removeItem","GlobalStyle","createGlobalStyle","FormWrapper","styled","section","InputGroup","div","theme","colors","green","CheckBoxContainer","validateEmail","trim","match","validateImage","str","indexOfPeriod","indexOf","slice","length","connect","state","user","modal","toggleModal","changeModalType","useState","setEmail","setPassword","setErrors","showPassword","setShowPassword","useEffect","loggingIn","Object","keys","currentUser","Modal","isOpen","toggle","className","ModalBody","map","error","message","renderErrors","onSubmit","e","errorsObj","errorItem","preventDefault","Label","for","Input","name","placeholder","value","onChange","target","required","minLength","maxLength","onClick","Button","color","block","disabled","Spinner","setFullName","confirmPassword","setConfirmPassword","registering","validateConfirmPassword","StyledNavigation","props","blue","logo","white","setIsOpen","setModal","modalType","setModalType","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","NavbarText","Fragment","Wrapper","HomeStyle","children","MapWithASearchBox","compose","withProps","googleMapURL","process","GOOGLE_MAPS_KEY","loadingElement","style","height","containerElement","mapElement","lifecycle","componentWillMount","refs","this","setState","bounds","center","lat","location","lng","markers","onMapMounted","ref","onBoundsChanged","getBounds","getCenter","onSearchBoxMounted","searchBox","onPlacesChanged","places","checkPlaceValidity","selectedPlace","placeId","place_id","formatted_address","latlng","geometry","setOpenFlyerPane","google","maps","LatLngBounds","forEach","viewport","union","extend","nextMarkers","position","nextCenter","_","get","componentDidMount","componentDidUpdate","prevProps","prevState","gettingPlaces","allPlaces","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","controlPosition","marker","index","key","title","otherMarker","restructuredLatLng","parseFloat","formattedAddress","foundStreetNumber","address_components","types","FlyerListByPlaceStyle","FlyerListItemStyled","setSelectedFlyer","withRouter","text","charLimit","flyer","history","push","heading","description","reduxLocation","reduxFlyer","getFlyersByPlace","flyers","idx","fetchingFlyers","setFlyersInit","ipWasSet","setIpWasSet","showMap","setShowMap","navigator","geolocation","getCurrentPosition","ltlng","coords","latitude","longitude","setTimeout","validPlace","openFlyerPane","from","width","shouldCloseOnEsc","onRequestClose","outline","makeFlyer","setHeading","imgNum","setImgNum","img1","setImg1","img2","setImg2","setDescription","selectedEmail","setSelectedEmail","phoneSelected","setPhoneSelected","phone","setPhone","isUserLoggedIn","getSignedRequest","file","signS3","uploadFile","signedRequest","url","method","dir","selectedFlyer","test","images","flyerBody","id","files","fileChanged","makingFlyer","ViewFyerStyled","PhotoViewStyle","PhotoView","selectedImage","setSelectedImage","img","src","moment","unix","createdAt","format","editable","contact","dummy","exact","path","component","Home","MakeFlyer","ViewFlyer","Boolean","hostname","defaultState","isDummy","initialState","flyerMade","deletedFlyer","combineReducers","action","DUMMY","ADD_DUMMY","FLYER","SET_FLYERS","SET_FLYERS_SUCCESS","SET_FLYERS_FAIL","OPEN_FLYER_PANE","SET_MAKING_FLYER","SET_MAKING_FLYER_SUCCESS","SET_MAKING_FLYER_FAIL","SET_SELECTED_FLYER","middlewares","ReduxThunk","logger","store","applyMiddleware","createStore","createStoreWithMiddleware","rootReducer","ReactDOM","render","StrictMode","blueLight","greenLight","textPrimary","textSecondary","spacers","mediaQueries","below425","below768","below1024","below1440","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","SET_FLYER_MADE","SET_NEW_FLYER","REMOVE_FLYER","SET_DELETED_FLYER"],"mappings":"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","file":"static/js/main.b9d400d1.chunk.js","sourcesContent":["export * from './types'; \n\nexport * from './dummy';\nexport * from './user';\nexport * from './location';\nexport * from './flyer';\n","import constants from '../constants';\n\nexport interface IAddDummyAction {\n  type: typeof constants.DUMMY.ADD_DUMMY,\n  payload?:any\n}\n\nexport const add_dummy = ()=> {\n    return {\n      type: constants.DUMMY.ADD_DUMMY\n    }\n}\n\n","import axios from 'axios';\nimport {Dispatch} from 'redux';\n\nimport agent from '../../agent';\nimport constants from '../constants';\n\n//Interfaces\nexport interface IRegisterUserAction {\n  type: typeof constants.USER.REGISTER_USER,\n  payload?: any\n}\nexport interface IRegisterUserActionSuccess {\n  type: typeof constants.USER.REGISTER_USER_SUCCESS,\n  payload: any // #TODO - should be fleshed out with real response payload\n}\nexport interface IRegisterUserActionFail {\n  type: typeof constants.USER.REGISTER_USER_FAIL,\n  payload?:any\n}\nexport interface ILoginUserAction {\n  type: string,\n  payload?:any\n}\nexport interface ILoginUserActionSuccess {\n  type: string,\n  payload?:any\n}\nexport interface ILoginUserActionFail {\n  type: string,\n  payload?:any\n}\n\nexport const registerUser = (fullName: string, email: string, password: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<IRegisterUserAction>({type: constants.USER.REGISTER_USER});\n    try {\n      const response = await axios.post(\"/graphql\", \n        JSON.stringify({\n          query: `\n            mutation {\n              registerUser(userInput: {name: \"${fullName}\", email: \"${email}\", password: \"${password}\"}) {\n                _id\n                name,\n                email,\n                token\n              }\n            }\n          `\n        }));\n      const {data:{data:{registerUser}}} = response;\n      dispatch<IRegisterUserActionSuccess>({\n        type: constants.USER.REGISTER_USER_SUCCESS,\n        payload: registerUser\n      });\n      //set session\n      agent.setSession(registerUser.token);\n\n    } catch (error) {\n      dispatch<IRegisterUserActionFail>({\n        type: constants.USER.REGISTER_USER_FAIL,\n        payload: error.response.data.errors\n      })\n    }\n  }\n}\n\nexport const getUserInfo = () => {\n  return async (dispatch:Dispatch) => {\n    dispatch<IRegisterUserAction>({type: constants.USER.LOGIN_USER});\n    try {\n      const response = await axios.post(\"/graphql\", \n      JSON.stringify({\n        query: `\n          query {\n            getUserInfo {\n              _id\n              name,\n              email,\n              token\n            }\n          }\n        `\n      }));\n      const {data:{data:{getUserInfo}}} = response;\n      dispatch<ILoginUserActionSuccess>({\n        type: constants.USER.LOGIN_USER_SUCCESS,\n        payload: getUserInfo\n      });\n      //set session\n      agent.setSession(getUserInfo.token);\n\n    } catch(error) {\n      dispatch<ILoginUserActionFail>({\n        type: constants.USER.LOGIN_USER_FAIL,\n        payload: error.response.data.errors\n      })\n    }\n  }\n}\n\nexport const loginUser = (email: string, password: string) => {\n  return async (dispatch:Dispatch) => {\n    dispatch<ILoginUserAction>({type: constants.USER.LOGIN_USER});\n    try {\n      const response = await axios.post(\"/graphql\", \n      JSON.stringify({\n        query: `\n          query {\n            loginUser(loginInput: {email: \"${email}\", password: \"${password}\"}) {\n              _id\n              name,\n              email,\n              token\n            }\n          }\n        `\n      }));\n      const {data:{data:{loginUser}}} = response;\n      dispatch<ILoginUserActionSuccess>({\n        type: constants.USER.LOGIN_USER_SUCCESS,\n        payload: loginUser\n      });\n      //set session\n      agent.setSession(loginUser.token);\n\n    } catch(error) {\n      console.log(\"error\",error.response)\n      dispatch<ILoginUserActionFail>({\n        type: constants.USER.LOGIN_USER_FAIL,\n        payload: error.response.data.errors\n      })\n    }\n  }\n}\n\nexport const logoutUser = () => {\n  agent.clearSession();\n  return {\n    type: constants.USER.LOGOUT_USER\n  }\n}","import constants from '../constants';\nimport axios from 'axios';\nimport { async } from 'q';\nimport { Dispatch } from 'redux';\n\n//Interfaces\nexport interface ISetIpLocationAction {\n    type: string,\n    payload?: any\n}\nexport interface ISetValidPlaceAction {\n    type: string,\n    payload?: any\n}\nexport interface ISetSelectedPlace {\n    type: string,\n    payload?: any\n}\n\nexport const setIpLocation = (ipLocation:{lat:number, lng:number}) => {\n    return {\n        type: constants.LOCATION.SET_IP_LOCATION,\n        payload: ipLocation\n    }\n}\n\nexport const setValidPlace = (bool:boolean) => {\n    return {\n        type: constants.LOCATION.SET_VALID_PLACE,\n        payload: bool\n    }\n}\n\nexport const setSelectedPlace = (place:any) => {\n    return {\n        type: constants.LOCATION.SET_SELECTED_PLACE,\n        payload: place\n    }\n}\n\nexport const getPlaces = () => {\n    return async(dispatch: Dispatch) => {\n        dispatch({type: constants.LOCATION.GET_PLACES})\n        try {\n            const response = await axios.post(\n                \"/graphql\",\n                JSON.stringify({\n                    query: `\n                        query {\n                            getPlaces {\n                                _id\n                                place_id\n                                name\n                                formattedAddress\n                                latlng {\n                                    lat\n                                    lng\n                                }\n                            }\n                        } \n                    `\n                })\n            );\n            const {data:{data:{getPlaces}}} = response;\n            dispatch({type: constants.LOCATION.GET_PLACES_SUCCESS, payload:getPlaces})\n\n        } catch(error) {\n            dispatch({type: constants.LOCATION.GET_PLACES_ERROR, payload:error})\n        }\n    }\n}","import axios from 'axios';\n\nconst setSession = (security_token: string) => {\n  window.localStorage.setItem(\"jwt\", security_token);\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${security_token}`;\n  axios.defaults.headers.post['Content-Type'] = \"application/json\";\n}\nconst getSession = ():string|null => {\n  let security_token:string|null = window.localStorage.getItem(\"jwt\");\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${security_token}`;\n  axios.defaults.headers.post['Content-Type'] = \"application/json\";\n  return security_token;\n}\nconst clearSession = () => {\n  window.localStorage.removeItem(\"jwt\");\n  axios.defaults.headers.common[\"Authorization\"] = \"\";\n}\n\ngetSession();\n\nexport default {\n  setSession,\n  getSession,\n  clearSession\n}","import {createGlobalStyle} from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    height: 100%;\n    /*background-color: red;*/\n  }\n  * {\n    padding: 0;\n    margin: 0;\n  }\n\n  /*Button colors override  */\n  .btn-primary {\n    background-color: #4CAD98;\n    border-color: #4CAD98;\n  }\n  .btn-primary:hover {\n    backgrond-color: #61FAD9;\n  }\n\n  .btn-secondary {\n    background-color: #61FAD9;\n    border-color: #61FAD9;\n  }\n\n  .link {\n    cursor: pointer;\n    color: #2A3DAD;\n  }\n\n  .slide-pane__header {\n    background: #4863FA;\n    color: #ffffff;\n  }\n`;\n\nexport default GlobalStyle;","import React from 'react';\nimport styled from 'styled-components';\n\nexport const FormWrapper = styled.section`\n  max-width: 600px;\n`;\n\nexport const InputGroup = styled.div`\n  width: 100%;  \n  margin-bottom: 20px;\n\n  & label {\n    display: block;\n  }\n  & input {\n    width: 100%;\n  }\n  & .password-container {\n    position: relative;\n    &__show {\n      position: absolute;\n      right: 10px;\n      top: 6px;\n      color: ${({theme})=>theme.colors.green};\n      cursor: pointer;\n    }\n  }\n`;\n\nexport const CheckBoxContainer = styled.div`\n  display: flex;\n\n  .CheckBoxItem {\n    display: inline-block;\n\n    .form-check-input {\n      width: 25px;\n      position: unset;\n      margin-top: unset;\n      margin-left: unset;\n    }\n  }\n`;","\nexport const validateEmail = (email: string):string => {\n  if (!email.trim().match(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)) {\n    return \"Not a Valid Email\";\n  }\n  return \"\"\n}\n\nexport const validateConfirmPassword = (password: string, confirmPassword: string): string => {\n  if(password.trim() !== confirmPassword.trim()) {\n    return \"Passwords do not match. Check your typing.\";\n  }\n  return \"\";\n}\n\nexport const validateImage = (str:string): boolean => {\n  const indexOfPeriod = str.indexOf('.');\n  const fileType = str.slice(indexOfPeriod+ 1, str.length);\n  switch (fileType) {\n      case 'png':\n      case 'PNG':\n          return true;\n      case 'jpg':\n      case 'JPG':\n          return true;\n      case 'jpeg': \n      case 'JPEG':\n          return true;\n      case 'gif':\n      case 'GIF':\n          return true;\n      default:\n          return false;      \n  }\n}","import React, { useState, useEffect, FormEvent } from \"react\";\nimport {connect} from 'react-redux';\nimport { Modal, ModalBody, Input, Label, Button, Spinner } from \"reactstrap\";\n\nimport { FormWrapper, InputGroup } from \"../Form/styled\";\nimport { validateEmail } from \"../../utils/validate\";\n\nimport {loginUser} from '../../redux/actions';\nimport {StoreState} from '../../redux/root-reducer';\n\nexport interface SignInProps {\n  modal: boolean,\n  toggleModal: any,\n  changeModalType: any,\n  loginUser: Function,\n  user: any\n}\nexport interface ILoginErrors {\n  [key: string]: any;\n}\n \nconst SignIn: React.SFC<SignInProps> = ({\n  modal,\n  toggleModal,\n  changeModalType,\n  loginUser,\n  user\n}) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({\n    email: \"\"\n  });\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    const errorsObj: any = { ...errors };\n    e.preventDefault();\n    errorsObj.email = validateEmail(email);\n\n    //set the state's errors object\n    setErrors(errorsObj);\n    //check if any errors exist, don't submit form if errors\n    for (let errorItem in errorsObj) {\n      if (errorsObj[errorItem] !== \"\") {\n        return;\n      }\n    }\n    // at this point it passed validation, \n    // set loading state true\n    // make graphQL call\n    loginUser( email, password);\n  };\n\n  useEffect(()=> {\n    //#Todo - If user.registering is true -> show a loader\n    if(user.loggingIn ===false && Object.keys(user.currentUser).length>0 && modal===true) {\n      //close modal\n      console.log('called')\n      toggleModal();\n    }\n  }, [user])\n\n  const renderErrors = () => {\n    if(user.errors) {\n      return user.errors.map((error:any) => {\n        return <p className=\"text-danger\">{error.message}</p>\n      })\n    }\n  }\n\n  return (\n    <Modal isOpen={modal} toggle={toggleModal} className=\"sign-in-modal\">\n      <ModalBody>\n        {user.loggingIn?\n          <p>Loading ...</p>\n          :\n          <h3 className=\"text-center\">Login</h3>\n        }\n        <FormWrapper>\n          {renderErrors()}\n          <form onSubmit={handleSubmit}>\n            <InputGroup>\n              {errors.email && <p className=\"text-danger\">{errors.email}</p>}\n              <Label for=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"you@example.com\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </InputGroup>\n            <InputGroup>\n              <Label for=\"password\">Password</Label>\n              <div className=\"password-container\">\n                <Input\n                  type={showPassword ? \"text\" : \"password\"}\n                  name=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  minLength={8}\n                  maxLength={20}\n                  required\n                />\n                <span \n                  className=\"password-container__show\"\n                  onClick={() => setShowPassword(!showPassword)}>\n                  {showPassword ? \"Hide\" : \"Show\"}\n                </span>\n              </div>\n            </InputGroup>\n            <Button \n              color=\"primary\" \n              type=\"submit\" \n              block\n              disabled={user.loggingIn? true:false}\n            >\n              {user.loggingIn?\n                  <Spinner color=\"light\"></Spinner>\n              :\n              \"SignIn\"\n              }\n            </Button>\n          </form>\n        </FormWrapper>\n        <div className=\"switch-form text-center\">\n          <p>\n            Don't have an account?{\" \"}\n            <span \n              onClick={() => changeModalType(\"register\")}\n              className=\"link\"\n            >Register</span>\n          </p>\n        </div>\n      </ModalBody>\n    </Modal>\n  );\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps,{\n  loginUser\n})(SignIn);","import React, { useState, useEffect, FormEvent } from \"react\";\nimport {connect} from 'react-redux';\nimport { Modal, ModalBody, Input, Label, Button, Spinner } from \"reactstrap\";\n\nimport { FormWrapper, InputGroup } from \"../Form/styled\";\nimport { validateEmail, validateConfirmPassword } from \"../../utils/validate\";\n\nimport {registerUser} from '../../redux/actions';\nimport {StoreState} from '../../redux/root-reducer';\n\nexport interface RegisterProps {\n  modal: boolean;\n  toggleModal: any;\n  changeModalType: any;\n  registerUser: Function;\n  user: any;\n}\nexport interface IRegisterErrors {\n  [key: string]: any;\n}\n\nconst Register: React.SFC<RegisterProps> = ({\n  modal,\n  toggleModal,\n  changeModalType,\n  registerUser,\n  user\n}) => {\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState({\n    fullName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    const errorsObj: any = { ...errors };\n    e.preventDefault();\n    errorsObj.email = validateEmail(email);\n    errorsObj.confirmPassword = validateConfirmPassword(\n      password,\n      confirmPassword\n    );\n    //set the state's errors object\n    setErrors(errorsObj);\n    //check if any errors exist, don't submit form if errors\n    for (let errorItem in errorsObj) {\n      if (errorsObj[errorItem] !== \"\") {\n        return;\n      }\n    }\n    // at this point it passed validation, \n    // set loading state true\n    // make graphQL call\n    registerUser(fullName, email, password);\n    \n  };\n\n  useEffect(()=> {\n    //#Todo - If user.registering is true -> show a loader\n    if(user.registering ===false && Object.keys(user.currentUser).length>0 && modal===true) {\n      //close modal\n      toggleModal();\n    }\n  }, [user])\n\n  const renderErrors = () => {\n    if(user.errors) {\n      return user.errors.map((error:any) => {\n        return <p className=\"text-danger\">{error.message}</p>\n      })\n    }\n  }\n\n  return (\n    <Modal isOpen={modal} toggle={toggleModal} className=\"sign-in-modal\">\n      <ModalBody>\n        <h3 className=\"text-center\">Register</h3>\n        <FormWrapper>\n          {renderErrors()}\n          <form onSubmit={handleSubmit}>\n            <InputGroup>\n              <Label for=\"full_name\">Name</Label>\n              <Input\n                type=\"text\"\n                name=\"full_name\"\n                placeholder=\"Joe Smith\"\n                value={fullName}\n                onChange={(e) => setFullName(e.target.value)}\n                required\n              />\n            </InputGroup>\n            <InputGroup>\n              {errors.email && <p className=\"text-danger\">{errors.email}</p>}\n              <Label for=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"you@example.com\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </InputGroup>\n            <InputGroup>\n              <Label for=\"password\">Password</Label>\n              <div className=\"password-container\">\n                <Input\n                  type={showPassword ? \"text\" : \"password\"}\n                  name=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  minLength={8}\n                  maxLength={20}\n                  required\n                />\n                <span \n                  className=\"password-container__show\"\n                  onClick={() => setShowPassword(!showPassword)}>\n                  {showPassword ? \"Hide\" : \"Show\"}\n                </span>\n              </div>\n            </InputGroup>\n            <InputGroup>\n              {errors.confirmPassword && (\n                <p className=\"text-danger\">{errors.confirmPassword}</p>\n              )}\n              <Label for=\"confirm_password\">Confirm Password</Label>\n              <Input\n                type={showPassword ? \"text\" : \"password\"}\n                name=\"confirm_password\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                minLength={8}\n                maxLength={20}\n                required\n              />\n            </InputGroup>\n            <Button \n              color=\"primary\" \n              type=\"submit\" \n              block\n              disabled={user.registering? true:false}\n            >\n              {user.registering?\n                  <Spinner color=\"light\"></Spinner>\n              :\n              \"Register\"\n              }\n            </Button>\n          </form>\n        </FormWrapper>\n        <div className=\"switch-form text-center\">\n          <p>\n            Already have an account?{\" \"}\n            <span \n              onClick={() => changeModalType(\"signin\")}\n              className=\"link\"\n            >Signin</span>\n          </p>\n        </div>\n      </ModalBody>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state: StoreState) => ({\n  user: state.user\n})\n\nexport default connect(\n  mapStateToProps, \n  {registerUser}\n)(Register);\n","import styled, {css} from 'styled-components';\n\nconst StyledNavigation = styled.div`\n  .navbar {\n    background-color: ${props=>props.theme.colors.blue};\n  }\n  & .navbar-brand {\n    color: ${props=>props.theme.colors.logo};\n    font-size: 1.6rem;\n  }\n .navbar-light .navbar-nav .nav-item .nav-link {\n    color: ${props=>props.theme.colors.white} !important;\n  }\n`;\n\nexport default StyledNavigation;","import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n  Button\n} from 'reactstrap';\n\nimport SignIn from '../SignIn';\nimport Register from '../Register';\n\nimport StyledNavigation from './styled';\n// types\nimport user, {IUser} from '../../redux/reducers/user';\nimport {StoreState} from '../../redux/root-reducer';\n\nimport {logoutUser} from \"../../redux/actions\";\n\nexport interface NavigationProps {\n  user: IUser,\n  logoutUser: Function\n}\n \nconst Navigation: React.SFC<NavigationProps> = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [modalType, setModalType] = useState('signin');// can also be 'register'\n\n  const toggleCollapse = () => setIsOpen(!isOpen);\n  const toggleModal = () => setModal(!modal);\n\n  const isLoggedIn = ():boolean => {\n    return Object.keys(props.user.currentUser).length>0;\n  }\n\n  return ( \n    <StyledNavigation>\n      <Navbar light expand=\"md\">\n        <NavbarBrand href=\"/\">Noticely</NavbarBrand>\n        {/* <NavbarBrand href=\"/\"><img src={require(\"../../Logo.png\")} /></NavbarBrand> */}\n        <NavbarToggler onClick={toggleCollapse} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"/\">Home</NavLink>\n              </NavItem>\n            {/* {isLoggedIn() &&\n              <NavItem>\n                <NavLink href=\"/manage\">Manage</NavLink>\n              </NavItem>            \n            } */}\n          </Nav>\n          <NavbarText>\n            {isLoggedIn()? (\n              <React.Fragment>\n                <Button color=\"primary\" onClick={()=>props.logoutUser()}>Logout</Button>\n              </React.Fragment>\n            )\n              :\n              <Button color=\"primary\" onClick={()=>toggleModal()}>Sign In</Button>\n            }\n            {modalType==='signin'? \n              <SignIn modal={modal} toggleModal={toggleModal} changeModalType={setModalType} /> \n              :\n              <Register modal={modal} toggleModal={toggleModal} changeModalType={setModalType} />\n            }\n          </NavbarText>\n        </Collapse>\n      </Navbar>\n    </StyledNavigation>\n   );\n}\n\nconst mapStateToProps = (state:StoreState) => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps ,{\n  logoutUser\n})(Navigation);","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n\n    & .MapContainer {\n        \n    } \n\n    & .BtnControls {\n        display: flex;\n        justify-content: space-between;\n        align-items: baseline;\n        margin-bottom: 20px;\n        width: 100%;\n    }\n`;\n\nexport const HomeStyle = ({children}) => {\n    return (\n    <Wrapper>\n        {children}\n    </Wrapper>\n    )\n};","/* eslint-disable no-undef */\nimport React from 'react';\nimport _ from \"lodash\";\nimport { compose, withProps, lifecycle } from \"recompose\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\";\nimport  SearchBox from \"react-google-maps/lib/components/places/SearchBox\";\nimport { connect } from 'react-redux';\nimport {setSelectedPlace, setValidPlace, setOpenFlyerPane, getPlaces} from '../../redux/actions';\nimport './Map.css';\nimport { Spinner } from 'reactstrap';\n\nconst MapWithASearchBox = compose(\n  withProps({\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${process.env.GOOGLE_MAPS_KEY}&v=3&libraries=geometry,drawing,places`,\n    loadingElement: <div style={{ height: `100%` }}><Spinner color=\"success\"></Spinner></div>,\n    containerElement: <div style={{ height: `500px` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n  }),\n  lifecycle({\n    componentWillMount() {\n      const refs = {}\n\n      this.setState({\n        bounds: null,\n        center: {\n          lat: this.props.location.ipLocation.lat, \n          lng: this.props.location.ipLocation.lng\n        },\n        markers: [],\n        onMapMounted: ref => {\n          refs.map = ref;\n        },\n        onBoundsChanged: () => {\n          this.setState({\n            bounds: refs.map.getBounds(),\n            center: refs.map.getCenter(),\n          })\n        },\n        onSearchBoxMounted: ref => {\n          refs.searchBox = ref;\n        },\n        onPlacesChanged: () => {\n\n          const places = refs.searchBox.getPlaces();\n          console.log('places', places);\n          // ******* Check Validity of Place\n          if( !checkPlaceValidity(places, this.props) ) {\n              return;\n          }\n           // ******* Set selected place\n          const selectedPlace = {\n              placeId: places[0].place_id,\n              formatted_address: places[0].formatted_address,\n              name: places[0].name,\n              latlng: {\n                lat: places[0].geometry.location.lat(),\n                lng: places[0].geometry.location.lng()\n              }\n          }\n\n          this.props.setSelectedPlace(selectedPlace);\n          // action to open place slider\n          this.props.setOpenFlyerPane(true);\n\n          const bounds = new google.maps.LatLngBounds();\n\n          places.forEach(place => {\n            if (place.geometry.viewport) {\n              bounds.union(place.geometry.viewport)\n            } else {\n              bounds.extend(place.geometry.location)\n            }\n          });\n          const nextMarkers = places.map(place => ({\n            position: place.geometry.location,\n          }));\n          const nextCenter = _.get(nextMarkers, '0.position', this.state.center);\n          console.log(\"markers\", this.state.markers)\n          console.log(\"nextmarkers\", nextMarkers)\n          this.setState({\n            center: nextCenter,\n            markers: nextMarkers,\n          });\n          // refs.map.fitBounds(bounds);\n        },        \n      })\n    },\n    componentDidMount() {\n      //go fetch all places\n      this.props.getPlaces();\n    },\n    componentDidUpdate(prevProps,prevState) {\n      if(!prevProps.location.gettingPlaces && this.props.location.gettingPlaces && this.props.location.allPlaces.length > 0) {\n        console.log(\"reaches here\")\n        this.setState({markers: [ ...this.props.location.allPlaces]})\n      }\n    }\n  }),\n  withScriptjs,\n  withGoogleMap\n)(props =>\n  <GoogleMap\n    ref={props.onMapMounted}\n    defaultZoom={12}\n    defaultCenter={props.center}\n    onBoundsChanged={props.onBoundsChanged}\n    className={\"Map\"}\n  >\n    <SearchBox\n      ref={props.onSearchBoxMounted}\n      bounds={props.bounds}\n      //controlPosition={google.maps.ControlPosition.TOP_RIGHT}\n      controlPosition={2}\n      onPlacesChanged={props.onPlacesChanged}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"Search location for flyers\"\n        className={\"Map_Input\"}\n      />\n    </SearchBox>\n    {props.markers.map((marker, index) => {\n      console.log(\"props\", props);\n      return <Marker \n        key={index} \n        position={marker.position} \n        title={marker.name}\n        onClick={()=> {\n            props.onPlacesChanged()\n            props.setOpenFlyerPane(true)\n        }}\n        >\n        </Marker>\n\n    }\n    )}\n    {/* For other markers */}\n    {props.location.allPlaces.map((otherMarker, index) => {\n      let restructuredLatLng = {\n        lat: parseFloat(otherMarker.latlng.lat),\n        lng: parseFloat(otherMarker.latlng.lng)\n      }\n      const selectedPlace = {\n        placeId: otherMarker.place_id,\n        formatted_address: otherMarker.formattedAddress,\n        name: otherMarker.name,\n        latlng: {\n          lat: parseFloat(otherMarker.latlng.lat),\n          lng: parseFloat(otherMarker.latlng.lng)\n        }\n      }\n      return <Marker \n        key={index} \n        position={restructuredLatLng} \n        title={otherMarker.name}\n        onClick={()=> {\n          props.setSelectedPlace(selectedPlace);\n          props.setOpenFlyerPane(true)\n        }}\n        >\n        </Marker>\n    }\n    )}\n  </GoogleMap>\n);\n\nconst checkPlaceValidity = (places, props) => {\n    let foundStreetNumber = false;\n    //typed in a made up address\n    if(places.length===0 || !places[0].address_components) {\n        props.setValidPlace(false);\n        return false;\n    }\n\n    for (let c of places[0].address_components) {\n        if (c.types[0] === 'street_number') {\n            foundStreetNumber = true;\n        }\n    }\n\n    if (foundStreetNumber) {\n        // set validPlace on locationRedux ot true\n        props.setValidPlace(true);\n        return true;\n    } else {\n        props.setValidPlace(false);\n        return false;\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        location: state.location,\n        //userRedux: state.userRedux,\n        //flyerRedux: state.flyerRedux\n    }\n}\n\nexport default connect(mapStateToProps, {\n    setValidPlace,\n    setSelectedPlace,\n    setOpenFlyerPane,\n    getPlaces\n})(MapWithASearchBox);","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n    height: 80%;\n    min-height: 500px;\n    overflow-y: auto;\n`;\n\nexport const FlyerListByPlaceStyle = ({children}) => {\n    return <Wrapper>\n        {children}\n    </Wrapper>\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n    & .flyer-list-item-wrapper {\n        width: 80%;\n        padding: 20px;\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        margin-bottom: 25px;\n        border-top: 10px solid #FAB156;\n        transition: all .3s;\n    }\n    & .flyer-list-item-wrapper:hover {\n        cursor: pointer;\n        box-shadow: 6px 6px 14px 2px rgba(0,0,0,0.75);\n        transform: translateX(6px);\n        border-top: 10px solid #4CAD98;\n    }\n`;\n\nconst FlyerListItemStyled = ({children}) => {\n    return <Wrapper>{children}</Wrapper>\n}\n\nexport default FlyerListItemStyled;","import React from 'react';\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {connect} from 'react-redux';\n\nimport FlyerListItemStyle from './styled/index';\nimport { IFlyer } from '../../redux/reducers/flyer';\nimport { setSelectedFlyer } from '../../redux/actions';\n\nimport {limitText} from '../../utils/functions';\n\nexport interface FlyerListItemProps extends RouteComponentProps {\n    flyer: any,\n    setSelectedFlyer: any,\n    history: any\n}\n \nconst FlyerListItem: React.SFC<FlyerListItemProps> = ({\n    flyer,\n    setSelectedFlyer,\n    history\n}) => {\n\n    const handleClick = () => {\n        // set selected flyer\n        setSelectedFlyer(flyer)\n        // redirect to flyer view\n        history.push('/view-flyer');\n    }\n\n    return ( \n        <FlyerListItemStyle>\n            <div className=\"flyer-list-item-wrapper\" onClick={handleClick} >\n                <h3>{flyer.heading}</h3>\n                <p>{limitText(flyer.description, 49)}</p>\n            </div>\n        </FlyerListItemStyle>\n    );\n}\n \nexport default connect( null,{\n    setSelectedFlyer\n})(withRouter(FlyerListItem));","export const limitText = (text:string, charLimit:number) => {\n    if(text.length >= charLimit) {\n        return text.slice(0, charLimit) + \"...\";\n    } else {\n        return text;\n    }\n}","import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {Spinner} from 'reactstrap';\n\nimport {FlyerListByPlaceStyle} from './styled';\nimport { StoreState } from '../../redux/root-reducer';\nimport {ILocation} from '../../redux/reducers/location';\nimport { IFlyer } from '../../redux/reducers/flyer';\nimport {getFlyersByPlace} from '../../redux/actions/flyer';\nimport FlyerListItem from '../FlyerListItem';\n\nexport interface FlyerListByPlaceProps {\n    reduxLocation: ILocation,\n    reduxFlyer: IFlyer,\n    getFlyersByPlace: any\n}\n \nconst FlyerListByPlace: React.SFC<FlyerListByPlaceProps> = ({\n    reduxLocation,\n    reduxFlyer,\n    getFlyersByPlace\n}) => {\n    useEffect(() => {\n        // fetch all flyers from this location\n        getFlyersByPlace(reduxLocation.selectedPlace.placeId);\n    },[]);\n\n\n    return ( \n        <FlyerListByPlaceStyle>\n            {reduxFlyer.flyers.length>0 && \n            reduxFlyer.flyers.map((flyer, idx) => (\n                <FlyerListItem flyer={flyer}  />\n            ))}\n            {reduxFlyer.fetchingFlyers && <Spinner color=\"success\" />}\n            {!reduxFlyer.fetchingFlyers && reduxFlyer.flyers.length===0 &&\n                <p>There are no flyer notices here. Would you like to place one here?</p>\n            }\n        </FlyerListByPlaceStyle>\n     );\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n    reduxLocation: state.location,\n    reduxFlyer: state.flyer\n})\n\nexport default connect(mapStateToProps, {\n    getFlyersByPlace\n})(FlyerListByPlace);","import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {RouteComponentProps} from 'react-router-dom'\n\nimport {setIpLocation ,setSelectedPlace ,setFlyersInit, setOpenFlyerPane} from '../../redux/actions'\nimport { StoreState} from '../../redux/root-reducer';\nimport user, { IUser } from \"../../redux/reducers/user\";\nimport { IFlyer } from \"../../redux/reducers/flyer\";\nimport { ILocation} from \"../../redux/reducers/location\";\n\nimport {HomeStyle} from './styled';\nimport MapWithASearchBox from '../../components/Map/MapWithASearchBox';\n\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport SlidingPane from 'react-sliding-pane';\nimport { Button } from 'reactstrap';\nimport FlyerListByPlace from '../../components/FlyerListByPlace';\n\nexport interface HomeProps extends RouteComponentProps {\n  setIpLocation: any,\n  setSelectedPlace: any,\n  setFlyersInit: any,\n  setOpenFlyerPane: any,\n  reduxLocation: ILocation,\n  user: IUser,\n  flyer: IFlyer\n}\n \nconst Home: React.SFC<HomeProps> = (props) => {\n  const [ipWasSet, setIpWasSet] = useState(false);\n  const [showMap, setShowMap] = useState(true);\n  //const [isPaneOpenLeft, setIsPaneOpenLeft] = useState(false);\n\n  useEffect(()=> {\n    navigator.geolocation.getCurrentPosition((position) => {\n      const ltlng = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      }\n      props.setIpLocation(ltlng);\n      setIpWasSet(true);\n      setTimeout( () => {\n        props.setFlyersInit([]);\n      }, 1000);\n      props.setSelectedPlace(null);\n    })\n  },[]);\n\n  const showMapToggle = () => {\n    setShowMap(!showMap)\n}\n\n  return (  \n    <HomeStyle>\n      <div className=\"MapContainer\">\n        <div className=\"BtnControls\">\n          <button\n            onClick={showMapToggle}\n            className=\"btn btn-info\"\n          >\n            {showMap? \"Hide\":\"Show\"} Map\n          </button>\n          <p>{Object.keys(props.user.currentUser).length > 0? props.user.currentUser.name: 'Anonymous User'}</p>\n        </div>\n        {props.reduxLocation.validPlace === false && <p className=\"text-danger\">Your search is too broad. Please search a business location or address.</p>}\n        {ipWasSet && showMap && <MapWithASearchBox/>}\n        <SlidingPane \n          isOpen={props.flyer.openFlyerPane}\n          from=\"left\"\n          width=\"50%\"\n          title={`Flyer Notices at ${((props.reduxLocation||{}).selectedPlace||{}).name||\"\"}`}\n          shouldCloseOnEsc\n          onRequestClose={() => {\n            props.setFlyersInit([]);\n            props.setOpenFlyerPane(false);\n            props.setSelectedPlace(null);\n          }}\n        >\n          <Button\n            color=\"primary\"\n            outline={false}\n            onClick={()=>props.history.push(\"/make-flyer\")}\n          >Place flyer here</Button>\n          <hr/>\n          <FlyerListByPlace />\n        </SlidingPane>\n      </div>\n    </HomeStyle>\n  );\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n  reduxLocation: state.location,\n  flyer: state.flyer,\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  setIpLocation,\n  setSelectedPlace,\n  setFlyersInit,\n  setOpenFlyerPane\n})(Home);","import React, {useState, useEffect, FormEvent} from 'react';\nimport {connect} from 'react-redux';\nimport axios from 'axios';\nimport {Label, Input, Button, Spinner} from 'reactstrap';\n\nimport { FormWrapper, InputGroup, CheckBoxContainer } from \"../../components/Form/styled\";\nimport agent from '../../agent';\n\nimport { StoreState} from '../../redux/root-reducer';\nimport { IFlyer } from '../../redux/reducers/flyer';\nimport { ILocation } from '../../redux/reducers/location';\nimport { IUser } from '../../redux/reducers/user';\nimport {validateImage, validateEmail} from '../../utils/validate';\n\n\nimport {makeFlyer} from '../../redux/actions';\nimport { RouteComponentProps } from 'react-router';\n\nexport interface MakeFlyerProps extends RouteComponentProps {\n    reduxLocation: ILocation,\n    flyer: IFlyer,\n    user: IUser,\n    makeFlyer: any\n}\n\nconst MakeFlyer:React.SFC<MakeFlyerProps> = ({\n    reduxLocation,\n    flyer,\n    user,\n    makeFlyer,\n    history\n}) => {\n    // useState\n    const [heading, setHeading] = useState(\"\");\n    // img \n    const [imgNum, setImgNum] = useState(0);\n    const [img1, setImg1] = useState(\"\");\n    const [img2, setImg2] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    // email\n    const [email, setEmail] = useState(\"\")\n    const [selectedEmail, setSelectedEmail] = useState(\"\");\n    // phone\n    const [phoneSelected, setPhoneSelected] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    // errors\n    const [errors, setErrors] = useState({\n        heading: \"\",\n        description: \"\",\n        email: \"\",\n        imgNum:\"\",\n        img1: \"\",\n        img2: \"\",\n        phone: \"\"\n    });\n\n    const isUserLoggedIn = ():boolean => {\n        return Object.keys(user.currentUser).length > 0;\n    }\n\n    const fileChanged = (e:React.ChangeEvent<HTMLInputElement>) => {\n        console.dir(e.target.value)\n        if(imgNum===0) {\n            // reset error\n            setErrors({...errors, img1:\"\"});\n            //add first pic\n            if(validateImage(e.target.value)) {\n                setImgNum(1)\n                //get Signed\n                if(e.target.files !==null) {\n                    const file = e.target.files[0];\n                    getSignedRequest(file);\n                }\n            } else {setErrors({...errors, img1:\"Wrong File Type\"})}\n        }else if (imgNum===1) {\n             // reset error\n             setErrors({...errors, img2:\"\"});\n            //add second pic\n            if(validateImage(e.target.value)) {\n                setImgNum(2)\n                //get Signed\n                if(e.target.files !==null) {\n                    const file = e.target.files[0];\n                    getSignedRequest(file);\n                }\n            }else {setErrors({...errors, img2:\"Wrong File Type\"})}\n        } else {\n            //set error 'max of 2 images'\n            setErrors({...errors, imgNum:\"Max of 2 images. This current image was not uploaded.\"})\n        }\n        // if(document && document.getElementById('flyerImg') && document.getElementById('flyerImg').value) {\n        //     document.getElementById('flyerImg').value = '';\n        // }\n    }\n    const getSignedRequest = async (file:any) => {\n        try {\n            const response = await axios.post('/graphql', \n                JSON.stringify({\n                    query: `\n                        query {\n                            signS3(s3Input: {fileName: \"${file.name}\", fileType: \"${file.type}\"}) {\n                                signedRequest,\n                                url\n                            } \n                        }\n                    `\n                })\n            )\n            const {data: {data: {signS3}}} = response;\n            uploadFile(file, signS3.signedRequest, signS3.url);\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    const uploadFile = async (file:any, signedRequest:any, url:string) => {\n        try {\n            // delete Authorization header\n            delete axios.defaults.headers.common[\"Authorization\"];\n\n            // make aws call\n            const response = axios({\n                method: 'put',\n                url: signedRequest,\n                data: file,\n                headers: {'Content-Type': file.type}\n            })            \n\n            // store the image urls in state to be sent to the backend\n            if (imgNum === 0) {                    \n                setImg1(url);\n            } else if (imgNum === 1) {\n                setImg2(url);\n            }\n\n            // add auth header back\n            agent.setSession(user.currentUser.token);\n        } catch(error) {\n            console.dir(\"error\", error)\n        }\n    }\n\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n        console.log(\"here\")\n        //reset error 'max of 2 images'\n        setErrors({...errors, imgNum:\"\"})\n        e.preventDefault()\n        // validation\n        const errorsObj: any = { ...errors };\n        errorsObj.heading= heading.trim().length > 100? 'Heading must not be more than 100 characters':\"\";\n        errorsObj.description = description.trim().length < 3? \"Heading must be more than 3 characters\": \"\";\n        errorsObj.description = description.trim().length > 2000? \"Body must not be more than 2000 characters\": \"\";\n        errorsObj.description = description.trim().length < 3? \"Body must be more than 3 characters\": \"\";\n        errorsObj.phone = (phoneSelected && phone.trim().length > 30)? \"Phone must be less than 30 characters\": \"\";\n        errorsObj.phone = phoneSelected && !(/[0-9]/.test(phone)) && \"Phone must be all numbers\";\n        errorsObj.email = selectedEmail && validateEmail(email)===\"Not a Valid Email\" && \"Email is invalid\";\n\n        setErrors(errorsObj);\n        console.log(errorsObj)\n        // check if any errors exist, don't submit form if errors\n        for (let errorItem in errorsObj) {\n            // if (!errorsObj[errorItem]) {\n            //     console.log(errorItem, errorsObj[errorItem])\n            //     console.log('reached here');\n            // return;\n            // }\n            if(typeof errorsObj[errorItem] === \"boolean\" && errorsObj[errorItem] === true) {\n                console.log(\"false\")\n                console.log(errorItem, errorsObj[errorItem])\n                console.log('reached here');\n                return;\n            }\n            if(typeof errorsObj[errorItem] === \"string\" && errorsObj[errorItem].length >0) {\n                console.log(\"empty\")\n                console.log(errorItem, errorsObj[errorItem])\n                console.log('reached here');\n                return;\n            }\n        }\n\n        // construct flyer body to be sent\n        const images = [];\n        if(img1) {\n            images.push(img1)\n        }\n        if(img2) {\n            images.push(img2)\n        }\n        const flyerBody = {\n            placeId: reduxLocation.selectedPlace.placeId,\n            formattedAddress: reduxLocation.selectedPlace.formatted_address,\n            latlng: reduxLocation.selectedPlace.latlng,\n            name: reduxLocation.selectedPlace.name,\n            images: images,\n            heading: heading,\n            description: description,\n            phone: phoneSelected? phone:\"\",\n            email: selectedEmail? email: \"\"\n        }\n\n        // async action to make API call to make-flyer\n        makeFlyer(flyerBody);\n    }\n\n    const renderErrors = () => {\n        if(flyer.errors) {\n          return flyer.errors.map((error:any) => {\n            return <p className=\"text-danger\">{error.message}</p>\n          })\n        }\n    }\n\n    useEffect(()=> {\n        if(!reduxLocation.selectedPlace) {\n            history.push(\"/\")\n        }\n    },[])\n    useEffect(()=> {\n        //redirect to View Flyer once flyer is made\n        if(flyer.selectedFlyer && Object.keys(flyer.selectedFlyer).length>0) {\n            history.push(\"/view-flyer\");\n        }\n\n    }, [flyer])\n\n    return (\n        <div>\n            <h2>Make Your Flyer</h2>\n            <h5>at {(reduxLocation.selectedPlace||{}).name}</h5>\n            <FormWrapper>\n                {renderErrors()}\n                <form onSubmit={handleSubmit}>\n                    <InputGroup>\n                        {errors.heading && <p className=\"text-danger\">{errors.heading}</p>}                 \n                        <Label for=\"heading\">Flyer Heading</Label>\n                        <Input \n                            type=\"text\" \n                            name=\"heading\" \n                            onChange={(e)=>setHeading(e.target.value)}\n                            required\n                        />\n                    </InputGroup>\n                    {isUserLoggedIn() &&(\n                        <React.Fragment>\n                            <p>Num of Pics Uploaded: {imgNum}/2</p>\n                            <InputGroup>\n                                {errors.imgNum && <p className=\"text-danger\">{errors.imgNum}</p>}\n                                <Label for=\"img\">Upload Image</Label>\n                                <Input \n                                    type=\"file\" \n                                    name=\"img\" \n                                    id=\"flyerImg\"\n                                    onChange={(e)=>fileChanged(e)}\n                                />\n                            </InputGroup>\n                        </React.Fragment>                        \n                    )}\n                    <InputGroup>\n                        {errors.description && <p className=\"text-danger\">{errors.description}</p>}\n                        <Label for=\"description\">\n                            Body{isUserLoggedIn()?\"\":\"*\"}\n                        </Label>\n                        <Input \n                            type=\"textarea\" \n                            name=\"description\" \n                            onChange={(e)=>setDescription(e.target.value)}\n                            required\n                        />\n                    </InputGroup>\n                    {isUserLoggedIn()? (\n                        <React.Fragment>\n                            <InputGroup>\n                                <Label for=\"img\">Ways to Contact You</Label>\n                                    <CheckBoxContainer>\n                                        <div className=\"CheckBoxItem\">\n                                            <Input \n                                                type=\"checkbox\" \n                                                value=\"email\" \n                                                onChange={(e)=>setSelectedEmail(selectedEmail==\"\"?e.target.value:\"\")}\n                                            />{\" \"}Email {\"|\"}\n                                        </div>\n                                        <div className=\"CheckBoxItem\">\n                                            <Input \n                                                type=\"checkbox\" \n                                                value=\"addPhone\" \n                                                onChange={(e)=>setPhoneSelected(phoneSelected==\"\"?e.target.value:\"\")}\n                                            />{\" \"} Phone\n                                        </div>\n                                    </CheckBoxContainer>\n                                \n                            </InputGroup>\n                            {selectedEmail &&\n                                <InputGroup>\n                                    <Label for=\"email\">Email </Label>\n                                    {errors.email && <p className=\"text-danger\">{errors.email}</p>}\n                                    <Input \n                                        type=\"email\" \n                                        name=\"email\"\n                                        onChange={(e)=>setEmail(e.target.value)}\n                                    />                            \n                                </InputGroup>\n                            }\n                            {phoneSelected && \n                                <InputGroup>\n                                    <Label for=\"phone\">Phone</Label>\n                                    {errors.phone && <p className=\"text-danger\">{errors.phone}</p>}\n                                    <Input \n                                        type=\"tel\" \n                                        name=\"phone\"\n                                        onChange={(e)=>setPhone(e.target.value)}\n                                    />                            \n                                </InputGroup>                            \n                            }\n                        </React.Fragment>                        \n                    )\n                    :\n                    <React.Fragment>\n                        <cite className=\"text-muted d-block\">*Anonymous users must put their contact info in the body.</cite>\n                        <cite className=\"text-muted d-block\">SignIn/Register to have more options for your flyers.</cite>\n                    </React.Fragment>\n                    }\n                    <Button \n                        type=\"submit\"\n                        color='primary'\n                        outline={false}\n                        disabled={flyer.makingFlyer? true:false}\n                    >\n                        {flyer.makingFlyer?\n                            <Spinner color=\"light\"></Spinner>\n                        :\n                        \"Make Flyer\"\n                        }\n                    </Button>\n                </form>\n            </FormWrapper>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n    reduxLocation: state.location,\n    flyer: state.flyer,\n    user: state.user\n  });\n\nexport default connect(mapStateToProps, {\n    makeFlyer\n})(MakeFlyer);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n    & .flyer-page {\n        margin-top: 20px;\n        min-height: 400px;\n        border: 1px solid #8492a6;\n        padding: 1rem;\n        box-shadow: 6px 6px 14px 2px rgba(0,0,0,0.75);\n\n        &__body {\n            white-space: pre-wrap;\n            word-break: break-word;\n        }\n    }\n\n`;\n\nconst ViewFyerStyled = ({children}) => (\n    <Wrapper>{children}</Wrapper>\n)\n\nexport default ViewFyerStyled;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n    & .photo-view__images {\n        display: flex;\n        width: 100%;\n        flex-wrap: wrap;\n\n        figure {\n            max-width: 50px;\n            max-height: 50px;\n            margin-right: 10px;\n            cursor: pointer;\n            transition: all .3s;\n\n            img {\n                width: 100%;\n            }\n        }\n        figure:hover {\n            transform: scale(1.05);\n        }\n    }\n    \n    & .photo-view__display {\n        figure {\n            max-width: 200px;\n            max-height: 200px;\n            img {\n                width: 100%;\n            }\n        }\n    }\n`;\n\nexport const PhotoViewStyle = ({children}) => {\n    return <Wrapper>\n        {children}\n    </Wrapper>\n}","import React, {useState} from 'react';\n\nimport {PhotoViewStyle} from './styled';\n\nexport interface PhotoViewProps {\n    images:string[],\n    editable: boolean\n}\n \nconst PhotoView: React.SFC<PhotoViewProps> = ({images}) => {\n    const [selectedImage, setSelectedImage] = useState(\"\");\n\n    return (    \n        <PhotoViewStyle>\n            <div className=\"photo-view__images\">\n                {images.map((img, idx) => (\n                    <figure key={idx} onClick={()=>setSelectedImage(img)}>\n                        <img src={img} />\n                    </figure>\n                ))}\n            </div>\n            <div className=\"photo-view__display\" >\n                {selectedImage? (\n                    <figure>\n                        <img src={selectedImage} />\n                    </figure>\n                ): null}\n            </div>\n        </PhotoViewStyle>\n     );\n}\n \nexport default PhotoView;","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {RouteComponentProps} from 'react-router-dom';\nimport moment from 'moment';\n\nimport { StoreState } from '../../redux/root-reducer';\nimport { IFlyer } from '../../redux/reducers/flyer';\nimport ViewFlyerStyled from './styled';\nimport PhotoView from '../../components/PhotoView';\nimport ViewFyerStyled from './styled';\n\nexport interface ViewFlyerProps extends RouteComponentProps {\n    flyer: IFlyer\n}\n \nconst ViewFlyer: React.SFC<ViewFlyerProps> = ({\n    flyer,\n    history\n}) => {\n    let {selectedFlyer} = flyer;\n    selectedFlyer = selectedFlyer? selectedFlyer : {};\n    useEffect(()=> {\n        if(Object.keys(selectedFlyer).length ===0) {\n            history.push(\"/\")\n        }\n    },[]);\n\n    const determineUserOrAnonymous = () => {\n        if(selectedFlyer.user) {\n            return selectedFlyer.user.name;\n        } else {\n            return \"Anonymous\"\n        }\n    }\n\n    if(Object.keys(selectedFlyer).length > 0) {\n        return ( \n            <ViewFlyerStyled>\n                <h2>Flyer Notification</h2>\n                <div className=\"flyer-page\">\n                    <h3>{selectedFlyer.heading}</h3>\n                    <hr />\n            <cite className=\"text-muted\">Posted by: {determineUserOrAnonymous()} on {moment.unix(selectedFlyer.createdAt/1000).format(\"MM/DD/YY\")}</cite>\n                    {/* Images Logic goes here */}\n                    <PhotoView images={selectedFlyer.images||[]} editable={false}/>\n                    <div className=\"flyer-page__body\">\n                        {selectedFlyer.description}\n                    </div>\n                    {Object.keys(selectedFlyer.contact).length > 0 && (\n                    <React.Fragment>\n                        <hr/>\n                        <h5>Contact Info</h5>\n                        {selectedFlyer.contact.email && (\n                            <p>Email: {selectedFlyer.contact.email}</p>\n                        )}\n                        {selectedFlyer.contact.phone && (\n                            <p>Phone: {selectedFlyer.contact.phone}</p>\n                        )}\n                    </React.Fragment>\n                    )} \n                </div>\n            </ViewFlyerStyled>\n         );\n    } else {\n        return <ViewFyerStyled>\n            <p>loading..</p>\n        </ViewFyerStyled>\n    }\n}\n\nconst mapStateToProps = (state:StoreState) => ({\n    flyer: state.flyer\n})\n \nexport default connect(mapStateToProps)(ViewFlyer);","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport agent from './agent';\nimport {getUserInfo} from './redux/actions';\n\nimport Navigation from './components/Navigation';\n\n//Containers\nimport Home from './containers/Home/index';\nimport MakeFlyer from './containers/MakeFlyer/index';\nimport ViewFlyer from './containers/ViewFlyer';\n\nimport {StoreState} from './redux/root-reducer';\n\nexport interface AppProps {\n  dummy: any,\n  getUserInfo: Function\n}\n\nconst App:React.SFC<AppProps> = ({getUserInfo}) => {\n  useEffect(()=> {\n    //check if jwt is set\n    if(agent.getSession()) {\n      //log him in\n      getUserInfo();\n    }\n  },[]);\n\n  return (\n    <div className=\"App\">\n        {/* Navigation goes here */}\n      <Navigation />\n      <div className=\"container mt-4 mb-4\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/make-flyer\" component={MakeFlyer} />\n            <Route exact path=\"/view-flyer\" component={ViewFlyer} />\n          </Switch>\n        </Router>\n      </div>\n      {/* Footer goes here */}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state:StoreState) => ({\n  dummy: state.dummy\n});\n\nexport default connect(mapStateToProps ,{\n  getUserInfo\n})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {Action} from '../actions';\nimport constants from '../constants';\n\nexport interface IDummy {\n  isDummy: boolean\n}\n\nconst defaultState = {\n  isDummy: false\n}\n\n\nexport default (state:IDummy=defaultState, action:Action): IDummy => {\n  switch(action.type) {\n    case constants.DUMMY.ADD_DUMMY: \n      return {...state, isDummy: true};\n    default:\n      return state;\n  }\n}\n","import {Action} from \"../actions/types\";\nimport constants from '../constants';\n\nexport interface IUser {\n  registering: boolean,\n  loggingIn: boolean,\n  currentUser: any,\n  errors: any\n}\nconst initialState = {\n  registering: false,\n  loggingIn: false,\n  currentUser: {},\n  errors: null\n}\n\nexport default (state:IUser=initialState, action:Action) => {\n  switch(action.type) {\n    case constants.USER.REGISTER_USER:\n      return {\n        ...state,\n        registering: true\n      }\n    case constants.USER.REGISTER_USER_SUCCESS:\n      return {\n        ...state,\n        registering: false,\n        currentUser: action.payload\n      }\n    case constants.USER.REGISTER_USER_FAIL:\n      return {\n        ...state,\n        registering: false,\n        errors: action.payload\n      }\n    case constants.USER.LOGIN_USER:\n      return {\n        ...state,\n        loggingIn: true,\n      }\n    case constants.USER.LOGIN_USER_SUCCESS:\n      return {\n        ...state,\n        loggingIn: false,\n        currentUser: action.payload\n      }\n    case constants.USER.LOGIN_USER_FAIL:\n      return {\n        ...state,\n        loggingIn: false,\n        errors: action.payload\n      }\n    case constants.USER.LOGOUT_USER: \n      return {\n        ...initialState\n      }\n    default: \n      return state;\n  }\n}","import {Action} from \"../actions/types\";\nimport constants from '../constants';\n\nexport interface ILocation {\n    ipLocation: {lat:number, lng:number}|null,\n    validPlace: any|null,\n    selectedPlace: any|null,\n    allPlaces: any[],\n    errors: any,\n    gettingPlaces: boolean\n}\nconst initialState = {\n    ipLocation: {\n        lat:41.500710,\n        lng: -74.021347\n    },\n    validPlace: null,\n    selectedPlace: null,\n    allPlaces: [],\n    errors: null,\n    gettingPlaces: false\n}\n\nexport default (state:ILocation=initialState, action:Action) => {\n  switch(action.type) {\n    case constants.LOCATION.SET_IP_LOCATION:\n        return {\n            ...state,\n            ipLocation: action.payload\n        };\n    case constants.LOCATION.SET_VALID_PLACE:\n        return {\n            ...state,\n            validPlace: action.payload\n        }\n    case constants.LOCATION.SET_SELECTED_PLACE:\n        return {\n            ...state,\n            selectedPlace: action.payload\n        }\n    case constants.LOCATION.GET_PLACES:\n        return {\n            ...state,\n            gettingPlaces: true\n        }\n    case constants.LOCATION.GET_PLACES_SUCCESS:\n        return {\n            ...state,\n            gettingPlaces: false,\n            allPlaces: action.payload\n        }\n    case constants.LOCATION.GET_PLACES_ERROR:\n        return {\n            ...state,\n            gettingPlaces: false,\n            errors: action.payload\n        }\n    default: \n      return state;\n  }\n}","import {Action} from \"../actions/types\";\nimport constants from '../constants';\n\nexport interface IFlyer {\n    openFlyerPane: boolean,\n    flyerMade: boolean,\n    makingFlyer: boolean,\n    fetchingFlyers: boolean,\n    flyers: any[],\n    selectedFlyer: any,\n    deletedFlyer: boolean,\n    errors: any\n}\nconst initialState = {\n    openFlyerPane:  false,\n    flyerMade: false,\n    makingFlyer: false,\n    fetchingFlyers: false,\n    flyers: [],\n    selectedFlyer: {},\n    deletedFlyer: false,\n    errors: null\n}\n\nexport default (state:IFlyer=initialState, action:Action) => {\n  switch(action.type) {\n    case constants.FLYER.SET_FLYERS:\n        return {\n            ...state,\n            fetchingFlyers: true\n        };\n    case constants.FLYER.SET_FLYERS_SUCCESS:\n        return {\n            ...state,\n            flyers: action.payload,\n            fetchingFlyers: false,\n            errors: null\n        };\n    case constants.FLYER.SET_FLYERS_FAIL:\n        return {\n            ...state,\n            fetchingFlyers: false,\n            errors: action.payload\n        };\n    case constants.FLYER.OPEN_FLYER_PANE:\n        return {\n            ...state,\n            openFlyerPane: action.payload\n        };\n    case constants.FLYER.SET_MAKING_FLYER:\n        return {\n            ...state,\n            makingFlyer: true\n        }\n    case constants.FLYER.SET_MAKING_FLYER_SUCCESS:\n        return {\n            ...state,\n            makingFlyer: false,\n            flyerMade: true,\n            selectedFlyer: action.payload,\n            errors: null\n        }\n    case constants.FLYER.SET_MAKING_FLYER_FAIL:\n        return {\n            ...state,\n            makingFlyer: false,\n            flyerMade: false,\n            errors: action.payload\n        }\n    case constants.FLYER.SET_SELECTED_FLYER:\n        return {\n            ...state,\n            selectedFlyer: action.payload\n        }\n    default: \n      return state;\n  }\n}","import {combineReducers} from 'redux';\nimport dummyReducer, {IDummy} from './reducers/dummy'; //dummyReducer -reducer, IDummy - Interface of state\nimport userReducer, {IUser} from './reducers/user';\nimport locationReducer, {ILocation} from './reducers/location';\nimport flyerReducer, {IFlyer} from './reducers/flyer';\n\nexport interface StoreState {\n  dummy: IDummy,\n  user: IUser,\n  location: ILocation,\n  flyer: IFlyer\n}\n\nexport default combineReducers<StoreState>({\n  dummy: dummyReducer,\n  user: userReducer,\n  location: locationReducer,\n  flyer: flyerReducer\n});","import {createStore, applyMiddleware} from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from './redux/root-reducer';\n\nexport const middlewares = [ReduxThunk, logger];\n\n//create a store with the middleware\nconst createStoreWithMiddleware = applyMiddleware(...middlewares)(createStore);\n\nconst store = createStoreWithMiddleware(rootReducer);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {ThemeProvider} from 'styled-components';\n\n//\nimport './agent';\n\n//styles\nimport GlobalStyle from './theme/globalStyles';\nimport Theme from './theme/theme';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={Theme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default {\n  colors: {\n    logo: '#FAB156',\n    blue: '#2A3DAD',\n    blueLight: '#4863FA',\n    green: '#4CAD98',\n    greenLight: '#61FAD9',\n    white: \"#FFFFFF\",\n    textPrimary: '#060d46',\n    textSecondary: '#8492a6',\n  },\n  spacers: {\n\n  },\n  mediaQueries: {\n    below425: `only screen and (max-width: 425px)`,\n    below768: `only screen and (max-width: 768px)`,\n    below1024: `only screen and (max-width: 1024px)`,\n    below1440: `only screen and (max-width: 1440px)`\n  }\n}","const DUMMY = {\n  ADD_DUMMY: \"ADD_DUMMY\"\n}\n\nexport default DUMMY;","const USER = {\n  REGISTER_USER: \"REGISTER_USER\",\n  REGISTER_USER_SUCCESS: \"REGISTER_USER_SUCCESS\",\n  REGISTER_USER_FAIL: \"REGISTER_USER_FAIL\",\n  LOGIN_USER:\"LOGIN_USER\",\n  LOGIN_USER_SUCCESS:\"LOGIN_USER_SUCCESS\",\n  LOGIN_USER_FAIL:\"LOGIN_USER_FAIL\",\n  LOGOUT_USER:\"LOGOUT_USER\"\n}\n\nexport default USER;","const LOCATION = {\n    SET_IP_LOCATION:\"SET_IP_LOCATION\",\n    SET_VALID_PLACE: \"SET_VALID_PLACE\",\n    SET_SELECTED_PLACE: \"SET_SELECTED_PLACE\",\n    GET_PLACES: \"GET_PLACES\",\n    GET_PLACES_SUCCESS: \"GET_PLACES_SUCCESS\",\n    GET_PLACES_ERROR: \"GET_PLACES_ERROR\"\n}\n\nexport default LOCATION;","const FLYER = {\n    OPEN_FLYER_PANE:\"OPEN_FLYER_PANE\",\n    SET_FLYER_MADE:\"SET_FLYER_MADE\",\n    SET_MAKING_FLYER:\"SET_MAKING_FLYER\",\n    SET_MAKING_FLYER_SUCCESS:\"SET_MAKING_FLYER_SUCCESS\",\n    SET_MAKING_FLYER_FAIL:\"SET_MAKING_FLYER_FAIL\",\n    SET_FLYERS:\"SET_FLYERS\",\n    SET_FLYERS_SUCCESS:\"SET_FLYERS_SUCCESS\",\n    SET_FLYERS_FAIL:\"SET_FLYERS_FAIL\",\n    SET_SELECTED_FLYER: \"SET_SELECTED_FLYER\",\n    SET_NEW_FLYER:\"SET_NEW_FLYER\",\n    REMOVE_FLYER:\"REMOVE_FLYER\",\n    SET_DELETED_FLYER:\"SET_DELETED_FLYER\"\n}\n\nexport default FLYER;","import DUMMY from './dummy';\nimport USER from './user';\nimport LOCATION from './location';\nimport FLYER from './flyer';\n\nexport default {\n  DUMMY,\n  USER,\n  LOCATION,\n  FLYER\n}","import constants from \"../constants\";\nimport { Dispatch } from \"redux\";\nimport axios from \"axios\";\n\nexport interface IFlyerData {\n  placeId: string;\n  formattedAddress: string;\n  name: string;\n  latlng: {\n    lat: number,\n    lng: number\n  };\n  images: string[];\n  heading: string;\n  description: string;\n  phone: string;\n  email: string;\n}\nexport interface IFlyerAction {\n  type: string;\n  payload: any;\n}\n\nexport const makeFlyer = (flyer: IFlyerData) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<IFlyerAction>({\n      type: constants.FLYER.SET_MAKING_FLYER,\n      payload: true\n    });\n    try {\n        const response = await axios.post(\n                \"/graphql\",\n                JSON.stringify({\n                    query: `\n                        mutation {\n                            makeFlyer(flyerInput: {\n                                placeId: \"${flyer.placeId}\", formattedAddress: \"${flyer.formattedAddress}\" , \n                                latlng: {lat:\"${flyer.latlng.lat}\", lng: \"${flyer.latlng.lng}\"},\n                                name: \"${flyer.name}\", heading: \"${flyer.heading}\", \n                                description: \"\"\"${flyer.description}\"\"\", images: \"${flyer.images}\",\n                                contact: {phone:\"${flyer.phone}\", email: \"${flyer.email}\"}\n                            }) {\n                                _id\n                                placeId\n                                user {\n                                  _id\n                                  name\n                                  email\n                                }\n                                images\n                                heading\n                                description\n                                contact {\n                                  phone\n                                  email\n                                }\n                                createdAt\n                                updatedAt\n                            }\n                        } \n                    `\n                })\n            );\n            const {data:{data:{makeFlyer}}} = response;\n            dispatch<IFlyerAction>({\n              type: constants.FLYER.SET_MAKING_FLYER_SUCCESS,\n              payload: makeFlyer\n            });\n    } catch(error) {\n        dispatch<IFlyerAction>({\n            type: constants.FLYER.SET_MAKING_FLYER_FAIL,\n            payload: error\n        })\n    }\n  };\n};\n\nexport const setOpenFlyerPane = (bool: boolean) => {\n  return {\n    type: constants.FLYER.OPEN_FLYER_PANE,\n    payload: bool\n  };\n};\n\nexport const setFlyersInit = (flyers: any) => {\n  return {\n    type: constants.FLYER.SET_FLYERS_SUCCESS,\n    payload: flyers\n  };\n};\n\nexport const getFlyersByPlace = (place_id: String) => {\n  return async (dispatch: Dispatch) => {\n    dispatch({type: constants.FLYER.SET_FLYERS});\n    try {\n      const response = await axios.post(\"graphql\", JSON.stringify({\n        query: `\n          query {\n            getFlyersByPlace(flyersByPlaceInput: {place_id: \"${place_id}\"}) {\n              _id\n              placeId \n              user {\n                _id\n                name\n                email\n              }\n              heading\n              description\n              images\n              contact {\n                phone\n                email\n              }\n              createdAt\n              updatedAt\n            }\n          }\n        `\n      }))\n      const {data:{data:{getFlyersByPlace}}} = response;\n      dispatch({type: constants.FLYER.SET_FLYERS_SUCCESS, payload: getFlyersByPlace});\n    } catch(error) {\n      dispatch({type: constants.FLYER.SET_FLYERS_FAIL, payload: error});\n    }\n  }\n};\n\nexport const setSelectedFlyer = (flyer: any) => {\n  return {\n    type: constants.FLYER.SET_SELECTED_FLYER,\n    payload: flyer\n  };\n};\n\nexport const setNewFlyer = (newFlyer: any) => {\n  return {\n    type: constants.FLYER.SET_NEW_FLYER,\n    newFlyer: newFlyer\n  };\n};\n\nexport const removeFlyer = (flyerId: any) => {\n  return {\n    type: constants.FLYER.REMOVE_FLYER,\n    flyerId: flyerId\n  };\n};\n\nexport const setDeletedFlyer = (bool: boolean) => {\n  return {\n    type: constants.FLYER.SET_DELETED_FLYER,\n    bool: bool\n  };\n};\n"],"sourceRoot":""}